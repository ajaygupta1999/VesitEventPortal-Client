[{"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\index.js":"1","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\components\\Appheader.js":"3","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\App.js":"4","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\index.js":"5","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\index.js":"6","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\currentUser.js":"7","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\error.js":"8","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actionTypes.js":"9","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\navbar.js":"10","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\auth.js":"11","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\services\\api.js":"12","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Googlelogin.js":"13","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\error.js":"14","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\components\\Allsocietys.js":"15","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Eventlists.js":"16","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event.js":"17","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Home.js":"18","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\UserForm\\PersonalDetailsForm.js":"19","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\UserForm\\ClassAndSociety.js":"20","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event\\GuestAndSponsorsForm.js":"21","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\userRegisterDetails.js":"22","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietyPage.js":"23","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietyHeader.js":"24","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietyContents.js":"25","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\SearchModal.js":"26","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\Modal.js":"27","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\functions.js":"28","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\AboutSociety.js":"29","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\AboutMembers.js":"30","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\Events.js":"31","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\EventStatistics.js":"32","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\society.js":"33","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\society.js":"34","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\UserPage.js":"35","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\UserpageContent.js":"36","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\UserPageContent.js":"37","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\UserPageHeader.js":"38","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\createdEvent.js":"39","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\allEvents.js":"40","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\events.js":"41","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\registeredEvents.js":"42","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\registerEvent.js":"43","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\RegisteredEvents.js":"44","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\Event.js":"45","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\EventPage\\Eventpage.js":"46","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\AddGuestModal.js":"47","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\AddEventTakerModal.js":"48","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event\\EventDetailsForm.js":"49","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event\\RegistrationFormDetails.js":"50","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event\\EventForm.js":"51","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\EventCreatedModal.js":"52","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\specificevent.js":"53","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\specificEvent.js":"54","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\EditProfile.js":"55","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\specificUser.js":"56","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietySettings.js":"57","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietySettingsManageAdmins.js":"58","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietySettingsManageMembers.js":"59"},{"size":1342,"mtime":1612014499953,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"61"},{"size":1881,"mtime":1608754196794,"results":"63","hashOfConfig":"61"},{"size":2462,"mtime":1612191331450,"results":"64","hashOfConfig":"61"},{"size":483,"mtime":1608403694000,"results":"65","hashOfConfig":"61"},{"size":633,"mtime":1612036587810,"results":"66","hashOfConfig":"61"},{"size":2072,"mtime":1612069211612,"results":"67","hashOfConfig":"61"},{"size":418,"mtime":1609157657411,"results":"68","hashOfConfig":"61"},{"size":3373,"mtime":1612075936043,"results":"69","hashOfConfig":"61"},{"size":14442,"mtime":1613307718333,"results":"70","hashOfConfig":"61"},{"size":1808,"mtime":1612069165701,"results":"71","hashOfConfig":"61"},{"size":1355,"mtime":1611341393692,"results":"72","hashOfConfig":"61"},{"size":1674,"mtime":1608811004334,"results":"73","hashOfConfig":"74"},{"size":198,"mtime":1608996487495,"results":"75","hashOfConfig":"61"},{"size":2169,"mtime":1609068300314,"results":"76","hashOfConfig":"61"},{"size":4102,"mtime":1612069536543,"results":"77","hashOfConfig":"61"},{"size":3198,"mtime":1612069470860,"results":"78","hashOfConfig":"61"},{"size":913,"mtime":1611681191502,"results":"79","hashOfConfig":"61"},{"size":5015,"mtime":1611979010194,"results":"80","hashOfConfig":"74"},{"size":14893,"mtime":1611951745750,"results":"81","hashOfConfig":"61"},{"size":72198,"mtime":1611807756400,"results":"82","hashOfConfig":"61"},{"size":6755,"mtime":1612070792530,"results":"83","hashOfConfig":"61"},{"size":1677,"mtime":1612076303798,"results":"84","hashOfConfig":"61"},{"size":6373,"mtime":1612089948330,"results":"85","hashOfConfig":"61"},{"size":3215,"mtime":1609008588773,"results":"86","hashOfConfig":"61"},{"size":11856,"mtime":1612088926889,"results":"87","hashOfConfig":"61"},{"size":704,"mtime":1610950059175,"results":"88","hashOfConfig":"61"},{"size":1078,"mtime":1608960157433,"results":"89","hashOfConfig":"61"},{"size":3703,"mtime":1609004983538,"results":"90","hashOfConfig":"61"},{"size":7420,"mtime":1612085276271,"results":"91","hashOfConfig":"61"},{"size":11331,"mtime":1609011129598,"results":"92","hashOfConfig":"61"},{"size":3560,"mtime":1609012058277,"results":"93","hashOfConfig":"61"},{"size":1651,"mtime":1613311610940,"results":"94","hashOfConfig":"61"},{"size":3061,"mtime":1612159154064,"results":"95","hashOfConfig":"61"},{"size":1594,"mtime":1612071350876,"results":"96","hashOfConfig":"61"},{"size":275,"mtime":1609070843657,"results":"97","hashOfConfig":"74"},{"size":1246,"mtime":1612016104786,"results":"98","hashOfConfig":"61"},{"size":5760,"mtime":1612026158593,"results":"99","hashOfConfig":"61"},{"size":3522,"mtime":1611740386801,"results":"100","hashOfConfig":"61"},{"size":882,"mtime":1609156740454,"results":"101","hashOfConfig":"61"},{"size":16671,"mtime":1612264526964,"results":"102","hashOfConfig":"61"},{"size":802,"mtime":1609221073533,"results":"103","hashOfConfig":"61"},{"size":794,"mtime":1609221046853,"results":"104","hashOfConfig":"61"},{"size":1518,"mtime":1612034404586,"results":"105","hashOfConfig":"61"},{"size":2424,"mtime":1612035563177,"results":"106","hashOfConfig":"61"},{"size":39125,"mtime":1612070510856,"results":"107","hashOfConfig":"61"},{"size":25397,"mtime":1611979573569,"results":"108","hashOfConfig":"61"},{"size":24943,"mtime":1611979627418,"results":"109","hashOfConfig":"61"},{"size":13096,"mtime":1613307968449,"results":"110","hashOfConfig":"61"},{"size":8103,"mtime":1611980633072,"results":"111","hashOfConfig":"61"},{"size":6508,"mtime":1611495836784,"results":"112","hashOfConfig":"61"},{"size":2236,"mtime":1611808966409,"results":"113","hashOfConfig":"61"},{"size":448,"mtime":1611832841372,"results":"114","hashOfConfig":"74"},{"size":448,"mtime":1611832841372,"results":"115","hashOfConfig":"61"},{"size":17219,"mtime":1612173620983,"results":"116","hashOfConfig":"61"},{"size":516,"mtime":1612031534323,"results":"117","hashOfConfig":"61"},{"size":34846,"mtime":1613307399708,"results":"118","hashOfConfig":"61"},{"size":0,"mtime":1612191087279,"results":"119","hashOfConfig":"61"},{"size":2906,"mtime":1613307268192,"results":"120","hashOfConfig":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"9t2o2z",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"123"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"1lobtex",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"123"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"123"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"123"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"123"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"123"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"123"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"123"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"123"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"123"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"123"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"123"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"123"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"123"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"123"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"123"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"123"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"123"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"123"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"123"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"123"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"123"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\index.js",[],["266","267"],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\components\\Appheader.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\App.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\index.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\index.js",["268"],"import { combineReducers } from \"redux\";\r\n\r\nimport currentUser from \"./currentUser\";\r\nimport error from \"./error\";\r\nimport allEvents from \"./allEvents\";\r\nimport society  from \"./society\";\r\nimport registerEvent from \"./registerEvent\";\r\nimport registeredEvents from \"./registeredEvents\";\r\nimport createdEvent from \"./createdEvent\";\r\nimport specificEvent from \"./specificEvent\";\r\nimport specificUser from \"./specificUser\";\r\n\r\nconst rootReducer = combineReducers({\r\n    currentUser,\r\n    registerEvent,\r\n    error,\r\n    specificUser,\r\n    specificEvent,\r\n    createdEvent,\r\n    allEvents,\r\n    society\r\n});\r\n\r\nexport default rootReducer;","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\currentUser.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\error.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actionTypes.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\navbar.js",["269","270","271","272"],"import React, { Component } from 'react';\r\nimport { NavLink , Link, Redirect  } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport '../asserts/css/navbar.scss';\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { loginOrSignUp , logout } from \"../stores/actions/auth\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n\r\n    onSuccessLogin = async (res) => {\r\n        try{\r\n            const userdata = { \r\n                tokenId : res.tokenId \r\n            }\r\n            let user = await this.props.loginOrSignUp(userdata);\r\n            if(user.societydetails){\r\n                console.log(\"Logged in\");\r\n                if(!user.societydetails.role){\r\n                    this.props.history.push(`/user/${user._id}/create/classandsociety`);\r\n                }\r\n            }else{\r\n                this.props.history.push(`/user/${user._id}/create/classandsociety`);\r\n            }\r\n        }catch(err){\r\n            return;\r\n        }\r\n    } \r\n    \r\n    // componentDidMount = () => {\r\n    //     if(this.props.currentUser.isAuthenticated){\r\n    //         if(!this.props.currentUser.user.societydetails){\r\n    //             this.props.history.push(`/user/${this.props.currentUser.user._id}/create/classandsociety`);\r\n    //         }else{\r\n    //             if(!this.props.currentUser.user.societydetails.role){\r\n    //                 this.props.history.push(`/user/${this.props.currentUser.user._id}/create/classandsociety`);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // componentDidUpdate = (prevProps , prevState) => {\r\n    //     if(this.props.currentUser.isAuthenticated){\r\n    //         if(!this.props.currentUser.user.societydetails){\r\n    //             this.props.history.push(`/user/${this.props.currentUser.user._id}/create/classandsociety`);\r\n    //         }else{\r\n    //             if(this.props.currentUser.user.societydetails.role){\r\n    //                 this.props.history.push(`/user/${this.props.currentUser.user._id}/create/classandsociety`);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n    \r\n\r\n    onFailureLogin = (err) => {\r\n       console.log(err);\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.logout();\r\n        this.props.history.push(\"/home\");\r\n        this.props.history.go(0);\r\n    }\r\n\r\n    \r\n    render(){\r\n           const { currentUser } = this.props;\r\n        \r\n           return(\r\n                <div className=\"my-content\">\r\n                    <nav id=\"my-navbar\" className=\"navbar navbar-expand-lg navbar-light\">\r\n                        <NavLink to=\"/home\" className=\"navbar-navsession-links\" id=\"navbar-logo-link\">\r\n                            <img src=\"/images/VES_logo.png\" alt=\"profile\"/>\r\n                        VESIT EVENT\r\n                        </NavLink>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item navlink-all-lis d-flex justify-content-center align-items-center\">\r\n                                    <NavLink to=\"/home\" className=\"navbar-navsession-links\" activeClassName=\"navbar-active-state\">\r\n                                        Home\r\n                                    </NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item navlink-all-lis d-flex justify-content-center align-items-center\">\r\n                                    <NavLink to=\"/home/allevents\" className=\"navbar-navsession-links\" activeClassName=\"navbar-active-state\">\r\n                                        All Events\r\n                                    </NavLink>\r\n                                </li>\r\n                                {\r\n                                    this.props.currentUser.isAuthenticated ? (\r\n                                        <li className=\"nav-item navlink-all-lis d-flex justify-content-center align-items-center\">\r\n                                            <NavLink to={ `/user/${ this.props.currentUser.user._id }/add/eventdetails` } className=\"navbar-navsession-links\" activeClassName=\"navbar-active-state\">\r\n                                                Add Event\r\n                                            </NavLink>\r\n                                        </li>\r\n                                    ) : null\r\n                                }\r\n                            \r\n                                <li className=\"nav-item dropdown\" id=\"navbar-allsocities-dropdown\">\r\n                                    <a className=\"nav-link dropdown-toggle navlink-header-text\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        All Societies\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                        <div className=\"dropdown-item\">\r\n                                            <Link className=\"navbar-each-society\" to=\"/society/isa\" > ISA Vesit </Link>\r\n                                        </div>\r\n                                        <div className=\"dropdown-item\">\r\n                                            <Link className=\"navbar-each-society\" to=\"/society/ieee\"> IEEE Vesit </Link>\r\n                                        </div>\r\n                                        <div className=\"dropdown-item\">\r\n                                            <Link className=\"navbar-each-society\" to=\"/society/iste\"> ISTE Vesit </Link>\r\n                                        </div>\r\n                                        <div className=\"dropdown-item\">\r\n                                            <Link className=\"navbar-each-society\" to=\"/society/csi\"> CSI Vesit </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                            \r\n                            {\r\n                            currentUser.isAuthenticated ? (\r\n                                    <ul className=\"navbar-nav ml-auto\">\r\n                                        <li className=\"nav-item dropdown navbar-profile-session\" id=\"navbar-allsocities-dropdown\">\r\n                                            <a className=\"nav-link dropdown-toggle navlink-header-text profile-session-link d-flex justify-content-center align-items-center\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                <img src={ Object.keys(currentUser.user.imgurl).length > 0 ? currentUser.user.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"google-logo\" /> \r\n                                                <p>{ currentUser.user.username }</p>\r\n                                            </a>\r\n                                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                                <div className=\"profile-image-dropdown-content\">\r\n                                                    <div className=\"dropdown-item\">\r\n                                                        <Link to={ `/user/${currentUser.user._id}/profile` }>\r\n                                                            <div className=\"profile-name-and-email\">\r\n                                                                <img src={ Object.keys(currentUser.user.imgurl).length > 0 ? currentUser.user.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"profile-image\" />\r\n                                                                <p className=\"nav-profile-user-name\">{ currentUser.user.username }</p>\r\n                                                                <p className=\"nav-profile-user-email\">{ currentUser.user.email }</p>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <hr />\r\n                                                    <div className=\"dropdown-item\">\r\n                                                        <div className=\"Navbar-notifications-session\">\r\n                                                            <p>Notifications</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr />\r\n                                                    {\r\n                                                    ( this.props.currentUser.user.societydetails && Object.keys(this.props.currentUser.user.societydetails).length > 0 )  && (\r\n                                                            <div>\r\n                                                                <div className=\"dropdown-item\">\r\n                                                                    <Link to={ `/society/${ this.props.currentUser.user.societydetails.name}` } className=\"Navbar-profile-dopdown-socities-session\">\r\n                                                                        <p>{ this.props.currentUser.user.societydetails.name.toUpperCase() } VESIT</p>\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                                <hr />\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        (this.props.currentUser.isAuthenticated && this.props.currentUser.user) && (\r\n                                                            <div>\r\n                                                                <div className=\"dropdown-item\">\r\n                                                                    <Link to={ `/user/${this.props.currentUser.user._id}/profile` } className=\"Navbar-profile-dopdown-profile-session\">\r\n                                                                        <p>Go to Profile</p>\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                                <hr />\r\n                                                            </div>\r\n                                                        )\r\n\r\n                                                    }\r\n                                                    \r\n                                                    <div className=\"dropdown-item\">\r\n                                                        <div className=\"Navbar-profile-dopdown-profile-session\">\r\n                                                            <p onClick={this.handleLogout}>Logout</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>        \r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )   : (\r\n                                    <ul className=\"navbar-nav ml-auto\">\r\n                                        <li className=\"nav-item navlink-all-lis navbar-login-and-sign-button d-flex justify-content-center align-items-center\">\r\n                                            <button className=\"btn btn-md btn-light login-and-signup-buttons\">\r\n                                                <GoogleLogin\r\n                                                        clientId={ process.env.REACT_APP_GOOGLE_LOGIN_CLIENT_ID }\r\n                                                        buttonText=\"Login\"\r\n                                                        onSuccess={this.onSuccessLogin}\r\n                                                        onFailure={this.onFailureLogin}\r\n                                                        cookiePolicy={'single_host_origin'}\r\n                                                />\r\n                                            </button>\r\n                                            \r\n                                        </li>\r\n                                        <li className=\"nav-item navlink-all-lis navbar-login-and-sign-button d-flex justify-content-center align-items-center\">\r\n                                            <button className=\"btn btn-md btn-light login-and-signup-buttons\">\r\n                                                <GoogleLogin\r\n                                                        clientId={ process.env.REACT_APP_GOOGLE_LOGIN_CLIENT_ID }\r\n                                                        buttonText=\"Sign Up\"\r\n                                                        onSuccess={this.onSuccessLogin}\r\n                                                        onFailure={this.onFailureLogin}\r\n                                                        cookiePolicy={'single_host_origin'}\r\n                                                />\r\n                                            </button>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps (state){\r\n   return {\r\n       currentUser : state.currentUser\r\n   };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps , {loginOrSignUp , logout })(Navbar));\r\n","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\auth.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\services\\api.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Googlelogin.js",[],["273","274"],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\error.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\components\\Allsocietys.js",["275","276","277","278"],"import \"../asserts/css/Allsociety.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Allsocietys = () => {\r\n    return (\r\n       <div>\r\n            <div class=\"home-page-all-society\">\r\n                <h4>All Societies</h4>\r\n            </div>\r\n            <div class=\"my-all-society-div d-flex justify-content-center\">\r\n                <div class=\"row my-society-content container\">\r\n                    <div class=\"col-6 col-md-3 d-flex justify-content-center\">\r\n                        <Link to=\"/society/iste\">\r\n                            <div class=\"CSI-society d-flex flex-column\">\r\n                                <img src=\"/images/iste_logo.jpg\" />\r\n                                <h4> ISTE </h4>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div class=\"col-6 col-md-3 d-flex justify-content-center\">\r\n                        <Link to=\"/society/ieee\">\r\n                            <div class=\"CSI-society d-flex flex-column\">\r\n                                <img src=\"/images/ieee_logo.jpg\" />\r\n                                <h4> IEEE </h4>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div class=\"col-6 col-md-3 d-flex justify-content-center\">\r\n                        <Link to=\"/society/csi\">\r\n                            <div class=\"CSI-society d-flex flex-column\">\r\n                                <img src=\"/images/csi_logo.jpg\" />\r\n                                <h4> CSI </h4>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div class=\"col-6 col-md-3 d-flex justify-content-center\">\r\n                        <Link to=\"/society/isa\">\r\n                            <div class=\"CSI-society d-flex flex-column\">\r\n                                <img src=\"/images/isa_logo.gif\" />\r\n                                <h4> ISA </h4>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Allsocietys;","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Eventlists.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event.js",["279","280"],"import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { registerEvent , unregisterEvent } from \"../stores/actions/events\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Event extends Component{\r\n\r\n    handleRegister = () => {\r\n        if(this.props.userdata.isAuthenticated){\r\n            this.props.registerEvent( this.props.userdata.user._id , this.props._id);\r\n        }\r\n    }\r\n\r\n    handleUnregister = () => {\r\n        if(this.props.userdata.isAuthenticated){\r\n            this.props.unregisterEvent( this.props.userdata.user._id , this.props._id);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {name , shortdesc , date , time , isRegistered } = this.props;\r\n        const imgurl = this.props.imgurl.dataurl;\r\n        const registedEventStyle = {\r\n            backgroundColor : \"blue !important\"\r\n        }\r\n\r\n        return(\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Link to={ `/event/${this.props._id}` }>\r\n                       <div className=\"each-event-container\">\r\n                            <div className=\"img-session\">\r\n                                <img src={ this.props.imgurl ? this.props.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"event-image\" />\r\n                            </div>\r\n                            <div className=\"content-session\">\r\n                                <div className=\"upper-content d-flex flex-column\">\r\n                                    <p className=\"main-title\">{ name }</p>\r\n                                    <p className=\"short-desc\">{ shortdesc }</p>\r\n                                    \r\n                                    <div className=\"date-time-div d-flex justify-content-start align-items-center\">\r\n                                        <p className=\"date-session\"><span><i className=\"far fa-calendar-alt\"></i></span>{ date }</p>\r\n                                        <p><span><i className=\"far fa-clock\"></i></span> { time } </p>\r\n                                    </div>\r\n                                    {\r\n                                        isRegistered ? (\r\n                                            <div className=\"register-button-div\">\r\n                                                <button style={registedEventStyle} id=\"each-event-unregister-button\" className=\"btn btn-md btn-success\" onClick={this.handleUnregister}>Un-Register</button>        \r\n                                            </div> \r\n                                        ) : (\r\n                                            <div className=\"register-button-div\">\r\n                                                <button id=\"each-event-register-button\" className=\"btn btn-md btn-primary\" onClick={this.handleRegister}>Register</button>        \r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                       </div>\r\n                    </Link>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(null , { registerEvent , unregisterEvent })(Event);","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Home.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\UserForm\\PersonalDetailsForm.js",[],["281","282"],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\UserForm\\ClassAndSociety.js",["283","284"],"import React, { Component } from 'react';\r\nimport Navbar from '../navbar';\r\nimport \"../../asserts/css/Forms.scss\";\r\nimport {setClassAndSocietyDetails , fetchusersocietydetails } from \"../../stores/actions/userRegisterDetails\";\r\nimport { connect } from \"react-redux\"; \r\n\r\n\r\nclass ClassAndSociety extends Component{\r\n   \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isgotsocietydata : false,\r\n            role : \"student\",\r\n            student : {\r\n                department : \"cmpn\",\r\n                currentyear : \"3\",\r\n                class : \"d12c\",\r\n                rollno : \"\",\r\n                semester : \"\",\r\n            },\r\n            society : \"none\",\r\n            societyrole : \"none\",\r\n            specificrole : \"\",\r\n            societydataarr : []\r\n        }\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        \r\n        let dataarr = e.target.name.split(\"_\");\r\n        if(dataarr.length == 2){\r\n            this.setState({\r\n                ...this.state,\r\n                student : {\r\n                    ...this.state.student,\r\n                    [dataarr[1]] : e.target.value\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name] : e.target.value\r\n            });\r\n        }  \r\n    }\r\n\r\n    fetchusersocietydetails = async () => {\r\n        let societydata = await this.props.fetchusersocietydetails(this.props.currentUser.user._id);\r\n        if(societydata.insociety === 1){\r\n            this.setState({\r\n                ...this.state,\r\n                isgotsocietydata : true,\r\n                society : societydata.societydetails[0].name,\r\n                societyrole : societydata.societydetails[0].role,\r\n                societydataarr : societydata.societydetails\r\n            });\r\n        }else{\r\n            this.setState({\r\n                ...this.state,\r\n                isgotsocietydata : true,\r\n                society : \"none\",\r\n                societyrole : \"none\",\r\n                societydataarr : societydata.societydetails\r\n            })\r\n        }\r\n        \r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.currentUser.isAuthenticated){\r\n            let dataobj = {};\r\n            if(this.state.role === \"student\"){\r\n                dataobj.role = this.state.role;\r\n                dataobj.department = this.state.student.department;\r\n                dataobj.class = this.state.student.class;\r\n                dataobj.rollno = this.state.student.rollno;\r\n                dataobj.currentyear = this.state.student.currentyear;\r\n                dataobj.semester = this.state.student.semester;\r\n                dataobj.society = this.state.society;\r\n                dataobj.societyrole = this.state.societyrole;\r\n                if( this.state.societyrole !== \"faculty\"){\r\n                    dataobj.specificrole = this.state.specificrole;\r\n                }\r\n            }else{\r\n                // Role teacher\r\n                dataobj.role = this.state.role;\r\n                dataobj.society = this.state.society;\r\n                dataobj.societyrole = this.state.societyrole;\r\n            }\r\n\r\n            console.log(\"manuplated data ==> \" , dataobj);\r\n\r\n       \r\n            this.props.setClassAndSocietyDetails(dataobj, this.props.currentUser.user._id)\r\n            .then(() => {\r\n                this.props.history.push(\"/\"); \r\n            }).catch(() => {\r\n                return;\r\n            });\r\n        }\r\n    }\r\n   \r\n   \r\n   \r\n    render(){\r\n        return(\r\n            <div>\r\n            <Navbar />\r\n            <div className=\"our-login-page-content\">\r\n\t\t\t<div id=\"login-container\">\r\n\t\t\t\t<div className=\"login-page-contant\">\r\n\t\t\t\t\t<form className=\"submit-forms\" onSubmit={this.handleSubmit}>\r\n                        <center><h1 className=\"new-h1\">Class & Society Details</h1></center>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-5 description-about-each-form\">\r\n                                <h5>Users Details</h5>\r\n                                <p> \r\n                                   Please fill your details. if you are a student then select student and fill your class and others details. But if you are faculty then just select and proceed.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"roleofuser\" className=\"label\">Role</label>\r\n                                    <select className=\"form-control\" id=\"roleofuser\" name=\"role\" onChange={this.handleChange} value={this.state.role} placeholder=\"Role of the user.\">\r\n                                    <option value=\"student\">Student</option>\r\n                                    <option value=\"faculty\">Faculty</option>\r\n                                    </select>\r\n                                </div>\r\n                                {\r\n                                    this.state.role === \"student\" && \r\n                                    <div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">College Department</label>\r\n                                            <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"student_department\" value=\"IT\" onChange={this.handleChange} value={this.state.student_department} placeholder=\"Select Branch\">\r\n                                            <option value=\"cmpn\">CMPN</option>\r\n                                            <option value=\"it\">IT</option>\r\n                                            <option value=\"extc\">EXTC</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">Current Year of Study</label>\r\n                                            <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"student_currentyear\" onChange={this.handleChange} value={this.state.student_currentyear}>\r\n                                            <option value=\"1\">FE</option>\r\n                                            <option value=\"2\">SE</option>\r\n                                            <option value=\"3\">TE</option>\r\n                                            <option value=\"4\">BE</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"exampleFormControlSelect1\">Class</label>\r\n                                            <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"student_class\" onChange={this.handleChange} value={this.state.student_class}>\r\n                                            <option value=\"d12c\">D12C</option>\r\n                                            <option value=\"d7c\">D7C</option>\r\n                                            <option value=\"d2c\">D2C</option>\r\n                                            <option value=\"d19c\">D19C</option>\r\n                                            <option value=\"d15c\">D15C</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"username\"  className=\"label\">Roll No</label>\r\n                                            <input type=\"number\" className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Enter your Roll No\"\r\n                                                    name=\"student_rollno\" value={this.state.student_rollno} onChange={this.handleChange} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"login-login\"  className=\"label\">Semester</label>\r\n                                            <div className=\"password\">\r\n                                                <input type=\"number\" className=\"form-control\" id=\"login-login\" aria-describedby=\"emailHelp\"  placeholder=\"Enter Your Current Semester\"\r\n                                                    name=\"student_semester\" value={this.state.student_semester} onChange={this.handleChange}/>\r\n                                                </div>\r\n                                        </div>\r\n                                   </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-5\">\r\n                                <h5>Society Details</h5>\r\n                                <p>\r\n                                    If you belongs to some society then click this button it will automatically fetch the details of society.<br/>\r\n                                    In the society, you can be Council Member/Council Head/ Society Member/Faculty.<br/>\r\n                                    Faculty can also click this button to get details that in which society they are faculty.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                {\r\n                                    this.state.societydataarr.length > 1 && \r\n                                    <div className=\"multiple-society-detials\">\r\n                                        <p>please call these societies to update their record. Then you will able to get correct society details.</p>\r\n                                        {\r\n                                          this.state.societydataarr.map(society => {\r\n                                              return <div className=\"d-flex flex-row\">\r\n                                                        <div>\r\n                                                            <img className=\"society-incharge-and-chairperson-image\" style={{ width : \"50px\" , height : \"50px\" , borderRadius : \"25px\" }} src=\"/images/user-img1.jpg\" alt=\"user-profile-img\"/>\r\n                                                        </div>\r\n                                                        <div className=\"d-flex flex-column\">\r\n                                                            <p className=\"incharge-name\">{ society.name }</p>\r\n                                                            <p className=\"role-of-person\">{ society.role }</p>\r\n                                                        </div>\r\n                                                    </div> \r\n                                          })\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                   ( this.state.societydataarr.length === 0 &&  this.state.isgotsocietydata ) &&\r\n                                        <p> It seems that you do not belongs to any society. If you think you are a member of some society.<br/>\r\n                                        So please contact them. Then only you will able to get the correct society details.  </p>  \r\n                                }\r\n                                {\r\n                                    this.state.isgotsocietydata && \r\n                                    <div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"societyname\"  className=\"label\">Roll No</label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"societyname\" aria-describedby=\"emailHelp\"\r\n                                                    name=\"society\" value={this.state.society} onChange={this.handleChange} disabled/>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"societyrole\"  className=\"label\">Roll No</label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"societyrole\" aria-describedby=\"emailHelp\" \r\n                                                    name=\"societyrole\" value={this.state.societyrole} onChange={this.handleChange} disabled/>\r\n                                        </div>\r\n                                        {\r\n                                           ( this.state.societydataarr.length === 1 && this.state.societyrole !== \"faculty\" ) ? \r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"specificrole\"  className=\"label\">Specific role in the society</label>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"specificrole\" aria-describedby=\"emailHelp\" placeholder=\"Enter specific role in the society.\"\r\n                                                    name=\"specificrole\" value={this.state.specificrole} onChange={this.handleChange} />\r\n                                            </div> : null\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                }\r\n                                <div className=\"society-seslection-session\">\r\n                                   <button className=\"btn btn-sm btn-primary send-email-button\" type=\"button\" onClick={this.fetchusersocietydetails}>Get Society Detials</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                         <div className=\"d-flex justify-content-end\" id=\"forgotpassword\">\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-md btn-block next-buttons\">Submit</button>\r\n                            </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        currentUser : state.currentUser\r\n    }\r\n} \r\n\r\n\r\nexport default connect(mapStateToProps , { setClassAndSocietyDetails , fetchusersocietydetails })(ClassAndSociety);\r\n","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event\\GuestAndSponsorsForm.js",["285","286","287","288","289","290","291","292","293"],"import React, { Component } from 'react';\r\nimport \"../../asserts/css/Forms.scss\";\r\nimport { connect } from 'react-redux';\r\nimport Navbar from \"../navbar\";\r\nimport AddGuestModal from \"../model/AddGuestModal\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport AddEventTakerModal from \"../model/AddEventTakerModal\";\r\nimport { showAddGuestModal , \r\n    showAddEventtakerModal , \r\n    handleAddSelectedPerson ,\r\n    handleRemoveSelectedPerson , \r\n    handleAddPerson ,\r\n    handleRemovePerson,\r\n    handleAddSponsor,\r\n    handleRemoveSponsor,\r\n    fetchguestandsponsorspagedata,\r\n    fetchCreatedEvent } from \"../../stores/actions/events\";\r\nimport { fetchAllUsers } from \"../../stores/actions/userRegisterDetails\";\r\n\r\n   \r\n\r\nclass GuestAndSponsorsForm extends Component {\r\n     constructor(props){\r\n         super(props);\r\n         this.state = {\r\n            guestdetails : {\r\n                selectedguests : [],\r\n                addedguests : [],\r\n                isguest : \"true\",\r\n                guesttype : \"outsideperson\",\r\n                outsideperson : {\r\n                    name : \"\",\r\n                    profession : \"\",\r\n                },\r\n                faculty : {\r\n                    name : \"\",\r\n                    profession : \"\"\r\n                },\r\n                others : {\r\n                    name : \"\",\r\n                    department : \"cmpn\",\r\n                    currentyear : \"3\",\r\n                    class : \"d12c\"\r\n                }\r\n            },\r\n            eventtakerdetails : {\r\n                selectedeventtakers : [],\r\n                addedeventtakers : [],\r\n                iseventtaker : \"true\",\r\n                eventtakertype : \"outsideperson\",\r\n                outsideperson : {\r\n                    name : \"\",\r\n                    profession : \"\"\r\n                },\r\n                faculty : {\r\n                    name : \"\",\r\n                    profession : \"\"\r\n                },\r\n                others : {\r\n                    name : \"\",\r\n                    department : \"cmpn\",\r\n                    currentyear : \"3\",\r\n                    class : \"d12c\"\r\n                }\r\n            },\r\n            sponsorsdetails : {\r\n                addedsponsors : [],\r\n                issponsored : \"true\",\r\n                details : {\r\n                    name : \"\",\r\n                    image : {},\r\n                    details : \"\"\r\n                }\r\n            },\r\n            usersdata : {\r\n                guests : [],\r\n                users : [],\r\n                eventtakers : []\r\n            }\r\n         }\r\n     }\r\n     \r\n  \r\n     componentDidMount = async () => {\r\n        let  { guests , eventtakers , users } = await this.getAllUsers();\r\n        eventtakers.forEach(eventtaker => {\r\n            eventtaker.roletype = \"eventtaker\";\r\n        });\r\n\r\n        guests.forEach(guest => {\r\n            guest.roletype = \"guest\";\r\n        });\r\n        \r\n        // From params find event \r\n        let { userid , eventid } = this.props.match.params;\r\n        await this.props.fetchCreatedEvent(userid , eventid);\r\n        await this.props.fetchguestandsponsorspagedata(userid , eventid);\r\n        // await this.props.fetchEventDetails(userid , eventid);\r\n        // Then load all the guests and eventakers and sponsors\r\n        // Then set the data into store after manupilation. \r\n\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            usersdata : {\r\n                guests,\r\n                users,\r\n                eventtakers\r\n            }\r\n        });\r\n     }\r\n\r\n     componentDidUpdate = (prevProps, prevState) => {\r\n          if(JSON.stringify(prevProps.createdEvent.selectedguests) !== JSON.stringify(this.props.createdEvent.selectedguests)){\r\n                this.setState({\r\n                   ...this.state,\r\n                   guestdetails : {\r\n                       ...this.state.guestdetails,\r\n                       selectedguests : this.props.createdEvent.selectedguests\r\n                   }\r\n               });\r\n          }\r\n          if(JSON.stringify(prevProps.createdEvent.selectedeventtakers) !== JSON.stringify(this.props.createdEvent.selectedeventtakers)){\r\n                this.setState({\r\n                    ...this.state,\r\n                    eventtakerdetails : {\r\n                        ...this.state.eventtakerdetails,\r\n                        selectedeventtakers : this.props.createdEvent.selectedeventtakers\r\n                    }\r\n                });\r\n          }\r\n          if(JSON.stringify(prevProps.createdEvent.addedguests) !== JSON.stringify(this.props.createdEvent.addedguests)){\r\n            this.setState({\r\n                ...this.state,\r\n                guestdetails : {\r\n                    ...this.state.guestdetails,\r\n                    addedguests : this.props.createdEvent.addedguests\r\n                }\r\n            });\r\n          }\r\n          if(JSON.stringify(prevProps.createdEvent.addedeventtakers) !== JSON.stringify(this.props.createdEvent.addedeventtakers)){\r\n            this.setState({\r\n                ...this.state,\r\n                eventtakerdetails : {\r\n                    ...this.state.eventtakerdetails,\r\n                    addedeventtakers : this.props.createdEvent.addedeventtakers\r\n                }\r\n            });\r\n          }\r\n          if(JSON.stringify(prevProps.createdEvent.addedsponsors) !== JSON.stringify(this.props.createdEvent.addedsponsors)){\r\n            this.setState({\r\n                ...this.state,\r\n                sponsorsdetails : {\r\n                    ...this.state.sponsorsdetails,\r\n                    addedsponsors : this.props.createdEvent.addedsponsors\r\n                }\r\n            });\r\n          }  \r\n     }\r\n\r\n     getAllUsers = async () => {\r\n        let { allusers }  = await this.props.fetchAllUsers(this.props.currentUser.user._id);\r\n        return allusers;\r\n     }\r\n\r\n    \r\n    // Handling the guest which is their on our portal.\r\n    handleSelectedPerson = async (obj) => {\r\n        let dataArr = [];\r\n        dataArr = dataArr.concat(this.state.usersdata.users);\r\n        dataArr = dataArr.concat(this.state.usersdata.guests);\r\n        dataArr = dataArr.concat(this.state.usersdata.eventtakers);\r\n        let isPersonAlreadyPresent = false;\r\n        if(obj.target === \"guest\"){\r\n            this.state.guestdetails.selectedguests.forEach(member => {\r\n                if(member._id.toString() === obj.key.toString()){\r\n                    isPersonAlreadyPresent = true;\r\n                }\r\n            });\r\n        }else{\r\n            this.state.eventtakerdetails.selectedeventtakers.forEach(member => {\r\n                if(member._id.toString() === obj.key.toString()){\r\n                    isPersonAlreadyPresent = true;\r\n                }\r\n            });\r\n        }\r\n        \r\n        if(!isPersonAlreadyPresent){\r\n            dataArr.forEach(async (member) => {\r\n                if(member._id.toString() === obj.key.toString()){\r\n                    await this.props.handleAddSelectedPerson(obj , this.props.currentUser.user._id , this.props.createdEvent.data._id);\r\n                }\r\n            });\r\n        }\r\n     }\r\n\r\n     \r\n     handleRemoveSelectedPerson = async (obj) => {\r\n         console.log(obj);\r\n         await this.props.handleRemoveSelectedPerson(obj , this.props.currentUser.user._id , this.props.createdEvent.data._id ); \r\n     }\r\n     \r\n   \r\n     // Handle add guest (Data which is coming from guests form)\r\n     handleSubmitAddGuest = async (e) => {\r\n         e.preventDefault();\r\n         console.log(\"form is submitted\");\r\n         let guesttype = this.state.guestdetails.guesttype;\r\n         let dataobj = {};\r\n         dataobj.target = \"guest\";\r\n         dataobj.roletype = \"guest\";\r\n         let resetobj = {};\r\n         if(guesttype === \"outsideperson\"){\r\n            dataobj.role = \"outsideperson\";\r\n            dataobj.name = this.state.guestdetails.outsideperson.name;\r\n            dataobj.profession = this.state.guestdetails.outsideperson.profession;\r\n            resetobj.name = \"\";\r\n            resetobj.profession = \"\"; \r\n         }\r\n         if(guesttype === \"faculty\"){\r\n            dataobj.role = \"faculty\";\r\n            dataobj.name = this.state.guestdetails.faculty.name;\r\n            dataobj.profession = this.state.guestdetails.faculty.profession;\r\n            resetobj.name = \"\";\r\n            resetobj.profession = \"\"; \r\n         }\r\n         if(guesttype === \"others\"){\r\n            dataobj.role = \"others\";\r\n            dataobj.name = this.state.guestdetails.others.name;\r\n            dataobj.class = this.state.guestdetails.others.class;\r\n            dataobj.branch = this.state.guestdetails.others.department;\r\n            dataobj.currentyear = this.state.guestdetails.others.currentyear;\r\n            resetobj.name = \"\";\r\n            resetobj.class = \"\";\r\n            resetobj.department = \"\";\r\n            resetobj.currentyear = \"\"; \r\n         }\r\n         \r\n         await this.props.handleAddPerson(dataobj , this.props.currentUser.user._id , this.props.createdEvent.data._id);  \r\n     }\r\n\r\n     handleRemoveAddedGuests = async (obj) => {\r\n        await this.props.handleRemovePerson(obj , this.props.currentUser.user._id , this.props.createdEvent.data._id );\r\n        \r\n     }\r\n\r\n     // ========================================\r\n\r\n    // Handle add Eventtakers (Data which is coming from eventtakers form)\r\n    handleSubmitAddEventtaker = async (e) => {\r\n        e.preventDefault();\r\n        let eventtakertype = this.state.eventtakerdetails.eventtakertype;\r\n        let dataobj = {};\r\n        dataobj.target = \"eventtaker\";\r\n        dataobj.roletype = \"eventtaker\";\r\n        let resetobj = {};\r\n        if(eventtakertype === \"outsideperson\"){\r\n           dataobj.role = \"outsideperson\";\r\n           dataobj.name = this.state.eventtakerdetails.outsideperson.name;\r\n           dataobj.profession = this.state.eventtakerdetails.outsideperson.profession;\r\n           resetobj.name = \"\";\r\n           resetobj.profession = \"\"; \r\n        }\r\n        if(eventtakertype === \"faculty\"){\r\n           dataobj.role = \"faculty\";\r\n           dataobj.name = this.state.eventtakerdetails.faculty.name;\r\n           dataobj.profession = this.state.eventtakerdetails.faculty.profession;\r\n           resetobj.name = \"\";\r\n           resetobj.profession = \"\"; \r\n        }\r\n        if(eventtakertype === \"others\"){\r\n           dataobj.role = \"others\";\r\n           dataobj.name = this.state.eventtakerdetails.others.name;\r\n           dataobj.class = this.state.eventtakerdetails.others.class;\r\n           dataobj.branch = this.state.eventtakerdetails.others.department;\r\n           dataobj.currentyear = this.state.eventtakerdetails.others.currentyear;\r\n           resetobj.name = \"\";\r\n           resetobj.class = \"\";\r\n           resetobj.department = \"\";\r\n           resetobj.currentyear = \"\"; \r\n        }\r\n\r\n        await this.props.handleAddPerson(dataobj , this.props.currentUser.user._id , this.props.createdEvent.data._id);\r\n        \r\n    }\r\n\r\n    handleRemoveAddedEventtakers = async (obj) => {\r\n        console.log(obj);\r\n        await this.props.handleRemovePerson(obj , this.props.currentUser.user._id , this.props.createdEvent.data._id );\r\n    }\r\n    // ===========================================\r\n\r\n    handleSubmitAddSponsor = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"sponsos form submitted\");\r\n        let dataobj = {\r\n            target : \"sponsor\",\r\n            roletype :  \"sponsor\",\r\n            role : \"sponsor\",\r\n            name : this.state.sponsorsdetails.details.name,\r\n            image : this.state.sponsorsdetails.details.image,\r\n            details : this.state.sponsorsdetails.details.details\r\n        };\r\n        console.log(\"sponsor form =>> \" , dataobj);\r\n        await this.props.handleAddSponsor(dataobj , this.props.currentUser.user._id , this.props.createdEvent.data._id);\r\n    }\r\n\r\n    handleRemoveSponsor = async (obj) => {\r\n        console.log(\"Remove from component => \", obj);\r\n        await this.props.handleRemoveSponsor(obj , this.props.currentUser.user._id , this.props.createdEvent.data._id );\r\n    }\r\n    // =======================================\r\n\r\n\r\n    // ========================================\r\n    handleChange = (e) => {\r\n        // Handle all guest input change ====\r\n        let splittedinput = e.target.name.split(\"_\");\r\n        if(splittedinput.length === 2 && splittedinput[0] === \"eventtaker\" && splittedinput[1] === \"role\"){\r\n            this.setState({\r\n                ...this.state,\r\n                eventtakerdetails :  {\r\n                    ...this.state.eventtakerdetails,\r\n                    eventtakertype : e.target.value\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(splittedinput.length === 2 && splittedinput[0] === \"guest\" && splittedinput[1] === \"role\"){\r\n            this.setState({\r\n                ...this.state,\r\n                guestdetails :  {\r\n                    ...this.state.guestdetails,\r\n                    guesttype : e.target.value\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(splittedinput.length === 2 && splittedinput[0] === \"guest\"){\r\n            this.setState({\r\n                ...this.state,\r\n                guestdetails :  {\r\n                    ...this.state.guestdetails,\r\n                    isguest : e.target.value\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(splittedinput.length === 2 && splittedinput[0] === \"eventtaker\"){\r\n            this.setState({\r\n                ...this.state,\r\n                eventtakerdetails :  {\r\n                    ...this.state.eventtakerdetails,\r\n                    iseventtaker : e.target.value\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(splittedinput.length === 2 && splittedinput[0] === \"sponsor\"){\r\n            this.setState({\r\n                ...this.state,\r\n                sponsorsdetails :  {\r\n                    ...this.state.sponsorsdetails,\r\n                    issponsored : e.target.value\r\n                }\r\n            })\r\n            return;\r\n        }\r\n       if(e.target.name === \"guest_outsideperson_name\" || e.target.name === \"guest_outsideperson_profession\" || \r\n          e.target.name === \"guest_faculty_name\" || e.target.name === \"guest_faculty_profession\" || \r\n          e.target.name ===  \"guest_others_name\" || e.target.name ===  \"guest_others_class\" || e.target.name ===  \"guest_others_department\" || e.target.name ===  \"guest_others_currentyear\")\r\n          {\r\n              if(splittedinput.length > 0 && splittedinput.length === 3){\r\n                    if(splittedinput[1] === \"outsideperson\"){\r\n                            this.setState({\r\n                                ...this.state,\r\n                                guestdetails : {\r\n                                    ...this.state.guestdetails,\r\n                                    outsideperson : {\r\n                                        ...this.state.guestdetails.outsideperson,\r\n                                        [splittedinput[2]] : e.target.value\r\n                                    }\r\n                                }\r\n                            })\r\n                            return;\r\n                        }\r\n\r\n                        if(splittedinput[1] === \"faculty\"){\r\n                            this.setState({\r\n                                ...this.state,\r\n                                guestdetails : {\r\n                                    ...this.state.guestdetails,\r\n                                    faculty : {\r\n                                        ...this.state.guestdetails.faculty,\r\n                                        [splittedinput[2]] : e.target.value\r\n                                    }\r\n                                }\r\n                            })\r\n                            return;\r\n                        }\r\n\r\n                        if(splittedinput[1] === \"others\"){\r\n                            this.setState({\r\n                                ...this.state,\r\n                                guestdetails : {\r\n                                    ...this.state.guestdetails,\r\n                                    others : {\r\n                                        ...this.state.guestdetails.others,\r\n                                        [splittedinput[2]] : e.target.value\r\n                                    }\r\n                                }\r\n                            })\r\n                            return;\r\n                        }\r\n                    }     \r\n              }  \r\n    \r\n          // Handle all Eventtakers input change =============== \r\n        if(e.target.name === \"eventtaker_outsideperson_name\" || e.target.name === \"eventtaker_outsideperson_profession\" || \r\n          e.target.name === \"eventtaker_faculty_name\" || e.target.name === \"eventtaker_faculty_profession\" || \r\n          e.target.name ===  \"eventtaker_others_name\" || e.target.name ===  \"eventtaker_others_class\" || e.target.name ===  \"eventtaker_others_department\" || e.target.name ===  \"eventtaker_others_currentyear\")\r\n          {\r\n            if(splittedinput.length > 0 && splittedinput.length === 3){\r\n                if(splittedinput[1] === this.state.eventtakerdetails.eventtakertype){\r\n                    if(splittedinput[1] === \"outsideperson\"){\r\n                        this.setState({\r\n                            ...this.state,\r\n                            eventtakerdetails : {\r\n                                ...this.state.eventtakerdetails,\r\n                                outsideperson : {\r\n                                    ...this.state.eventtakerdetails.outsideperson,\r\n                                    [splittedinput[2]] : e.target.value\r\n                                }\r\n                            }\r\n                        })\r\n                        return;\r\n                    }\r\n\r\n                    if(splittedinput[1] === \"faculty\"){\r\n                        console.log(\"Event taker faculty ===>\")\r\n                        this.setState({\r\n                            ...this.state,\r\n                            eventtakerdetails : {\r\n                                ...this.state.eventtakerdetails,\r\n                                faculty : {\r\n                                    ...this.state.eventtakerdetails.faculty,\r\n                                    [splittedinput[2]] : e.target.value\r\n                                }\r\n                            }\r\n                        })\r\n                        return;\r\n                    }\r\n\r\n                    if(splittedinput[1] === \"others\"){\r\n                        this.setState({\r\n                            ...this.state,\r\n                            eventtakerdetails : {\r\n                                ...this.state.eventtakerdetails,\r\n                                others : {\r\n                                    ...this.state.eventtakerdetails.others,\r\n                                    [splittedinput[2]] : e.target.value\r\n                                }\r\n                            }\r\n                        })\r\n                        return;\r\n                    }\r\n                }\r\n            } \r\n          }\r\n\r\n          // Handle all sponsors input change ===================\r\n         if(e.target.name === \"sponsor_details_name\" || e.target.name === \"sponsor_details_details\")\r\n         {\r\n            if(splittedinput.length > 0 && splittedinput.length === 3 && splittedinput[1] === \"details\"){\r\n               this.setState({\r\n                        ...this.state,\r\n                        sponsorsdetails : {\r\n                            ...this.state.sponsorsdetails,\r\n                            details : {\r\n                                ...this.state.sponsorsdetails.details,\r\n                                [splittedinput[2]] : e.target.value\r\n                            }\r\n                        }\r\n                })\r\n               return;\r\n            } \r\n         }\r\n    }\r\n\r\n    // Handle file input change \r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            sponsorsdetails : {\r\n                ...this.state.sponsorsdetails,\r\n                details : { \r\n                    ...this.state.sponsorsdetails.details,\r\n                   image :  e.target.files[0]\r\n                }\r\n            }\r\n        });\r\n     }\r\n\r\n     // Hiding and showing modal.\r\n     handleShowModal = () => {\r\n         this.props.showAddGuestModal();\r\n     }\r\n\r\n     showAddEventtakerModal = () => {\r\n         this.props.showAddEventtakerModal();\r\n     }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n                {\r\n                     this.props.createdEvent.addGuestModalVisible && \r\n                     <AddGuestModal userid={this.props.currentUser.user._id} \r\n                        handleSelectedPerson={this.handleSelectedPerson} \r\n                        handleRemoveSelectedPerson = {this.handleRemoveSelectedPerson} \r\n                        guests={this.state.usersdata.guests} \r\n                        users={this.state.usersdata.users} \r\n                        eventtakers={this.state.usersdata.eventtakers}\r\n                        selectedguests={this.state.guestdetails.selectedguests} \r\n                    />\r\n                }\r\n                {\r\n                     this.props.createdEvent.addEventtakerModalVisible && \r\n                     <AddEventTakerModal userid={this.props.currentUser.user._id} \r\n                        handleSelectedPerson={this.handleSelectedPerson} \r\n                        handleRemoveSelectedPerson = {this.handleRemoveSelectedPerson} \r\n                        guests={this.state.usersdata.guests} \r\n                        users={this.state.usersdata.users} \r\n                        eventtakers={this.state.usersdata.eventtakers}\r\n                        selectedeventtakers={this.state.eventtakerdetails.selectedeventtakers} \r\n                    />\r\n                }\r\n                <div className=\"our-login-page-content\">\r\n                    <div className=\"event-page-navigation\">\r\n                        <div className=\"society-page-navigation-session d-flex flex-row justify-content-center\"> \r\n                            <div class=\"event-details-session\">\r\n                                <span>Event Details</span>\r\n                            </div>\r\n                            <div class=\"event-details-session current-event-details-filling\">\r\n                                <span>Guest and Sponsors</span>\r\n                            </div>\r\n                            <div class=\"event-details-session\">\r\n                                <span>Registration form</span>\r\n                            </div>                        \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"login-container\">\r\n                        <div className=\"login-page-contant\">\r\n                            <div className=\"submit-forms\">\r\n                                <center><h1 className=\"new-h1\">About Guest & Sponsors</h1></center>\r\n                                <div className=\"Add-guest-session\">\r\n                                    <p>Add Guests</p>\r\n                                    <div className=\"guest-img-div\">\r\n                                        <div onClick={this.handleShowModal}>\r\n                                            <img src=\"/images/useradd2.png\" alt=\"user-image\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    this.state.guestdetails.selectedguests.length > 0 && \r\n                                    <div className=\"added-guest-details my-3\"> \r\n                                    {\r\n                                        this.state.guestdetails.selectedguests.map(member  => {\r\n                                            if(member.email){\r\n                                                return (\r\n                                                    <div className=\"each-div-of-each-guest\">\r\n                                                        <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                            <div className=\"guest-img-session\">\r\n                                                                <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } />\r\n                                                            </div>\r\n                                                            <div className=\"guest-details d-flex flex-column\">\r\n                                                                <h5>{ member.username }</h5>\r\n                                                                <p>{ member.email } </p>\r\n                                                            </div>\r\n                                                            <span onClick={() => {\r\n                                                                    this.handleRemoveSelectedPerson({\r\n                                                                        target : \"guest\",\r\n                                                                        roletype : \"user\",\r\n                                                                        role : \"user\",\r\n                                                                        key : member._id\r\n                                                                   })\r\n                                                                }}>\r\n                                                            <i class=\"far fa-times-circle\"></i>\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }else {\r\n                                                    return (\r\n                                                        <div className=\"each-div-of-each-guest\">\r\n                                                           <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                                <div className=\"guest-img-session\">\r\n                                                                    <img src=\"/images/profile_image.png\" />\r\n                                                                </div>\r\n                                                                <div className=\"guest-details d-flex flex-column\">\r\n                                                                    <h5>\r\n                                                                       {\r\n                                                                            member.role === \"outsideperson\" ? member.details.outsideperson.name : \r\n                                                                            (\r\n                                                                                member.role === \"faculty\" ? member.details.faculty.name : member.details.others.name\r\n                                                                            )\r\n                                                                        }\r\n                                                                    </h5>\r\n                                                                </div>\r\n                                                                <span onClick={() => {\r\n                                                                    this.handleRemoveSelectedPerson({\r\n                                                                        target : \"guest\",\r\n                                                                        roletype : member.roletype,\r\n                                                                        role : member.role,\r\n                                                                        key : member._id\r\n                                                                    })\r\n                                                                }}>\r\n                                                                <i class=\"far fa-times-circle\"></i>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                }\r\n\r\n                                <div className=\"about-sponsers-message d-flex justify-content-start align-items-center\">\r\n                                    <p className=\"alert-icon\"><i className=\"fas fa-exclamation-circle\"></i></p>\r\n                                    <p className=\"alert-text\">If the guest is not their on this portal then you can add their Details below.</p>\r\n                                </div>\r\n                                \r\n                                {\r\n                                    this.state.guestdetails.addedguests.length > 0 && \r\n                                    <div className=\"added-guest-details my-3\"> \r\n                                    {\r\n                                        this.state.guestdetails.addedguests.map(member  => {\r\n                                            return (\r\n                                                <div className=\"each-div-of-each-guest\">\r\n                                                    <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                        <div className=\"guest-img-session\">\r\n                                                            <img src=\"/images/profile_image.png\" />\r\n                                                        </div>\r\n                                                        <div className=\"guest-details d-flex flex-column\">\r\n                                                            <h5>\r\n                                                                {\r\n                                                                    member.role === \"outsideperson\" ? member.details.outsideperson.name : \r\n                                                                    (\r\n                                                                        member.role === \"faculty\" ? member.details.faculty.name : member.details.others.name\r\n                                                                    ) \r\n                                                                }\r\n                                                            </h5>\r\n                                                            <p style={{ \"margin\" : \"0px\" }}>\r\n                                                                { member.role }\r\n                                                            </p>\r\n                                                        </div>\r\n                                                        <span onClick={() => {\r\n                                                            this.handleRemoveAddedGuests({\r\n                                                                target : \"guest\",\r\n                                                                roletype : \"guest\",\r\n                                                                role : member.role,\r\n                                                                key : member._id\r\n                                                            })\r\n                                                        }}>\r\n                                                        <i class=\"far fa-times-circle\"></i>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                }\r\n                                <p className=\"not-registered-guest-session\">Guest that does not present on our portal?</p>\r\n                                <div className=\"doeshavesponsor d-flex justify-content-start\">\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"guest_isguest\" id=\"exampleRadios1\" value=\"true\" onChange={this.handleChange} checked={this.state.guestdetails.isguest === \"true\"} />\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                            Yes\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"guest_isguest\" id=\"exampleRadios2\" value=\"false\" onChange={this.handleChange} checked={this.state.guestdetails.isguest === \"false\"} />\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                           No\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    this.state.guestdetails.isguest === \"true\" && (\r\n                                        <form onSubmit={this.handleSubmitAddGuest}>\r\n                                            <div class=\"guest-details-session row\">\r\n                                                <div className=\"description-about-each-form col-md-5\">\r\n                                                    <h5>Guest Details</h5>\r\n                                                    <p>Provide guest details here who does not exist on our portal.\r\n                                                        also if you have multiple guests then add one by one.\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div className=\"col-md-7\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">Guest Type</label>\r\n                                                        <select className=\"form-control addguest-page-select\" name=\"guest_role\" onChange={this.handleChange} value={this.state.guestdetails.guesttype}>\r\n                                                            <option value=\"outsideperson\">Outside-person</option>\r\n                                                            <option value=\"faculty\">College Faculty</option>\r\n                                                            <option value=\"others\">Others (Normal Member/Council Member/Council Head)</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    {\r\n                                                        this.state.guestdetails.guesttype === \"outsideperson\" && \r\n                                                        (\r\n                                                            <div>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"username\" className=\"label\">Guest's Name</label>\r\n                                                                    <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Guest's Name\"\r\n                                                                        name=\"guest_outsideperson_name\" value={this.state.guestdetails.outsideperson.name} onChange={this.handleChange}/>\r\n                                                                </div>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"guest-profession\" className=\"label\">Guest's Profession</label>\r\n                                                                    <textarea className=\"form-control\" id=\"guest-profession\" rows=\"4\" name=\"guest_outsideperson_profession\" placeholder=\"Something about guest\" value={this.state.guestdetails.outsideperson.profession}  onChange={this.handleChange}></textarea>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        this.state.guestdetails.guesttype === \"faculty\" && \r\n                                                        (\r\n                                                            <div>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"username\" className=\"label\">Name(Faculty Name)</label>\r\n                                                                    <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Guest's Name\"\r\n                                                                        name=\"guest_faculty_name\" value={this.state.guestdetails.faculty.name} onChange={this.handleChange}/>\r\n                                                                </div>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"guest-profession\" className=\"label\">Description </label>\r\n                                                                    <textarea className=\"form-control\" id=\"guest-profession\" rows=\"4\" name=\"guest_faculty_profession\" placeholder=\"Something about guest\" \r\n                                                                    value={this.state.guestdetails.faculty.profession}  onChange={this.handleChange}></textarea>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                    this.state.guestdetails.guesttype === \"others\" && \r\n                                                        <div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"username\" className=\"label\">Name</label>\r\n                                                                <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Name of the Person\"\r\n                                                                    name=\"guest_others_name\" value={this.state.guestdetails.others.name} onChange={this.handleChange}/>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">Department</label>\r\n                                                                <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"guest_others_department\" onChange={this.handleChange} value={this.state.guestdetails.others.department} placeholder=\"Select Branch\">\r\n                                                                    <option value=\"cmpn\">CMPN</option>\r\n                                                                    <option value=\"it\">IT</option>\r\n                                                                    <option value=\"extc\">EXTC</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">Current Year of Study</label>\r\n                                                                <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"guest_others_currentyear\" onChange={this.handleChange} value={this.state.guestdetails.others.currentyear}>\r\n                                                                <option value=\"1\">1</option>\r\n                                                                <option value=\"2\">2</option>\r\n                                                                <option value=\"3\">3</option>\r\n                                                                <option value=\"4\">4</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label className=\"label\" htmlFor=\"exampleFormControlSelect1\">Class</label>\r\n                                                                <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"guest_others_class\" onChange={this.handleChange} value={this.state.guestdetails.others.class}>\r\n                                                                <option value=\"d12c\">D12C</option>\r\n                                                                <option value=\"d7c\">D7C</option>\r\n                                                                <option value=\"d2c\">D2C</option>\r\n                                                                <option value=\"d19c\">D19C</option>\r\n                                                                <option value=\"d15c\">D15C</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                }\r\n                                                    <button type=\"submit\" className=\"btn btn-primary btn-md btn-block next-buttons\">Add</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    )\r\n                                } \r\n                                <hr className=\"line-break-line\" />\r\n  \r\n                                {/* Eventakers session ==================================== */}\r\n                                <div className=\"Add-guest-session\">\r\n                                    <p>Add Event Taker</p>\r\n                                    <div className=\"guest-img-div\">\r\n                                        <div onClick={this.showAddEventtakerModal}>\r\n                                            <img src=\"/images/useradd2.png\" alt=\"user-image\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    this.state.eventtakerdetails.selectedeventtakers.length > 0 && \r\n                                    <div className=\"added-guest-details my-3\"> \r\n                                    {\r\n                                        this.state.eventtakerdetails.selectedeventtakers.map(member => {\r\n                                            if(member.email){\r\n                                                return (\r\n                                                    <div className=\"each-div-of-each-guest\">\r\n                                                        <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                            <div className=\"guest-img-session\">\r\n                                                                <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } />\r\n                                                            </div>\r\n                                                            <div className=\"guest-details d-flex flex-column\">\r\n                                                                <h5>{ member.username }</h5>\r\n                                                                <p>{ member.email } </p>\r\n                                                            </div>\r\n                                                            <span onClick={() => {\r\n                                                                    this.handleRemoveSelectedPerson({\r\n                                                                        target : \"eventtaker\",\r\n                                                                        roletype : \"user\",\r\n                                                                        role : \"user\",\r\n                                                                        key : member._id\r\n                                                                    })\r\n                                                                }}>\r\n                                                            <i class=\"far fa-times-circle\"></i>\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }else {\r\n                                                    return (\r\n                                                        <div className=\"each-div-of-each-guest\">\r\n                                                            <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                                <div className=\"guest-img-session\">\r\n                                                                    <img src=\"/images/profile_image.png\" />\r\n                                                                </div>\r\n                                                                <div className=\"guest-details d-flex flex-column\">\r\n                                                                    <h5>\r\n                                                                        {\r\n                                                                             member.role === \"outsideperson\" ? member.details.outsideperson.name : \r\n                                                                             (\r\n                                                                                 member.role === \"faculty\" ? member.details.faculty.name : member.details.others.name\r\n                                                                             )\r\n                                                                        }\r\n                                                                    </h5>\r\n                                                                </div>\r\n                                                                <span onClick={() => {\r\n                                                                    this.handleRemoveSelectedPerson({\r\n                                                                        target : \"eventtaker\",\r\n                                                                        roletype : member.roletype,\r\n                                                                        role : member.role,\r\n                                                                        key : member._id\r\n                                                                    })\r\n                                                                }}>\r\n                                                                <i class=\"far fa-times-circle\"></i>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                }\r\n                                <div className=\"about-sponsers-message d-flex justify-content-start align-items-center\">\r\n                                    <p className=\"alert-icon\"><i className=\"fas fa-exclamation-circle\"></i></p>\r\n                                    <p className=\"alert-text\">If the Event-taker is not their on this portal then you can add their Details below.\r\n                                    </p>\r\n                                </div>\r\n                                {\r\n                                    this.state.eventtakerdetails.addedeventtakers.length > 0 && \r\n                                    <div className=\"added-guest-details my-3\"> \r\n                                    {\r\n                                        this.state.eventtakerdetails.addedeventtakers.map(member  => {\r\n                                            return (\r\n                                                <div className=\"each-div-of-each-guest\">\r\n                                                    <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                        <div className=\"guest-img-session\">\r\n                                                            <img src=\"/images/profile_image.png\" />\r\n                                                        </div>\r\n                                                        <div className=\"guest-details d-flex flex-column\">\r\n                                                            <h5>\r\n                                                               {\r\n                                                                    member.role === \"outsideperson\" ? member.details.outsideperson.name : \r\n                                                                    (\r\n                                                                        member.role === \"faculty\" ? member.details.faculty.name : member.details.others.name\r\n                                                                    ) \r\n                                                                }\r\n                                                            </h5>\r\n                                                            <p style={{ \"margin\" : \"0px\" }}>{ member.role }</p>\r\n                                                        </div>\r\n                                                        <span onClick={() => {\r\n                                                            this.handleRemoveAddedEventtakers({\r\n                                                                target : \"eventtaker\",\r\n                                                                roletype : \"eventtaker\",\r\n                                                                role : member.role,\r\n                                                                key : member._id\r\n                                                            })\r\n                                                        }}>\r\n                                                        <i class=\"far fa-times-circle\"></i>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                }\r\n                                <p className=\"not-registered-guest-session\">Event-taker is not their on our portal?</p>\r\n                                <div className=\"doeshavesponsor d-flex justify-content-start\">\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"eventtaker_iseventtaker\" id=\"exampleRadios1\" value=\"true\" onChange={this.handleChange} checked={this.state.eventtakerdetails.iseventtaker === \"true\"} />\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                            Yes\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"eventtaker_iseventtaker\" id=\"exampleRadios2\" value=\"false\" onChange={this.handleChange} checked={this.state.eventtakerdetails.iseventtaker === \"false\"}/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                           No\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    this.state.eventtakerdetails.iseventtaker === \"true\" && \r\n                                    <form onSubmit={this.handleSubmitAddEventtaker}>\r\n                                        <div className=\"event-takers-details-session row\">\r\n                                            <div className=\"description-about-each-form col-md-5\">\r\n                                                <h5>Add Event-taker</h5>\r\n                                                <p>Provide Event-takers details. Here choose appropiate option eg: outside person , College faculty , College student. </p>\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-7\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">Event Taker Type</label>\r\n                                                    <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"eventtaker_role\" onChange={this.handleChange} value={this.state.eventtakerdetails.eventtakertype}>\r\n                                                        <option value=\"outsideperson\">Outside-person</option>\r\n                                                        <option value=\"faculty\">College Faculty</option>\r\n                                                        <option value=\"others\">Others (Normal Member/Council Member/Council Head)</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                \r\n                                                {\r\n                                                    this.state.eventtakerdetails.eventtakertype === \"outsideperson\" && \r\n                                                        <div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"eventtakername\" className=\"label\">Name(Guest)</label>\r\n                                                                <input type=\"text\" className=\"form-control\" id=\"eventtaker_outsideperson_name\" aria-describedby=\"emailHelp\" placeholder=\"Event Guest Name\"\r\n                                                                    name=\"eventtaker_outsideperson_name\" value={this.state.eventtakerdetails.outsideperson.name} onChange={this.handleChange}/>\r\n                                                            </div>\r\n                                                            <div className=\"form-group our-add-sponsor-form\">\r\n                                                                <label htmlFor=\"exampleFormControlTextarea1\" className=\"label\">Profession</label>\r\n                                                                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"  name=\"eventtaker_outsideperson_profession\" value={this.state.eventtakerdetails.outsideperson.profession} onChange={this.handleChange} placeholder=\"Something about the guest..\"></textarea>\r\n                                                            </div>\r\n\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    this.state.eventtakerdetails.eventtakertype === \"faculty\" && \r\n                                                        <div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"username\" className=\"label\">Name(Faculty Name)</label>\r\n                                                                <input type=\"text\" required className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Name of the Faculty\"\r\n                                                                    name=\"eventtaker_faculty_name\" value={this.state.eventtakerdetails.faculty.name} onChange={this.handleChange}/>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"username\" className=\"label\">Description</label>\r\n                                                                <textarea className=\"form-control\" id=\"username\" rows=\"5\" name=\"eventtaker_faculty_profession\" required value={this.state.eventtakerdetails.faculty.profession} onChange={this.handleChange} placeholder=\"Something about the faculty. like branch and subject expert.\"></textarea>\r\n                                                            </div>\r\n\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    this.state.eventtakerdetails.eventtakertype === \"others\" && \r\n                                                        <div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"username\" className=\"label\">Name</label>\r\n                                                                <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Name of the Person\"\r\n                                                                    name=\"eventtaker_others_name\" value={this.state.eventtakerdetails.others.name} required onChange={this.handleChange}/>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">Department</label>\r\n                                                                <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"eventtaker_others_department\" required onChange={this.handleChange} value={this.state.eventtakerdetails.others.department} placeholder=\"Select Branch\">\r\n                                                                    <option value=\"cmpn\">CMPN</option>\r\n                                                                    <option value=\"it\">IT</option>\r\n                                                                    <option value=\"extc\">EXTC</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">Current Year of Study</label>\r\n                                                                <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"eventtaker_others_currentyear\" required onChange={this.handleChange} value={this.state.eventtakerdetails.others.currentyear}>\r\n                                                                <option value=\"1\">1</option>\r\n                                                                <option value=\"2\">2</option>\r\n                                                                <option value=\"3\">3</option>\r\n                                                                <option value=\"4\">4</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label className=\"label\" htmlFor=\"exampleFormControlSelect1\">Class</label>\r\n                                                                <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"eventtaker_others_class\" required onChange={this.handleChange} value={this.state.eventtakerdetails.others.class}>\r\n                                                                <option value=\"d12c\">D12C</option>\r\n                                                                <option value=\"d7c\">D7C</option>\r\n                                                                <option value=\"d2c\">D2C</option>\r\n                                                                <option value=\"d19c\">D19C</option>\r\n                                                                <option value=\"d15c\">D15C</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                }\r\n                                                <button type=\"submit\" className=\"btn btn-primary btn-md btn-block next-buttons\">Add</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                }\r\n                               <hr className=\"line-break-line\" />\r\n\r\n\r\n                                {/* Sponsors session  ===========================*/}\r\n                                <div className=\"Add-guest-session\">\r\n                                    <p>Add Sponsor</p>\r\n                                </div>\r\n                                {\r\n                                    this.state.sponsorsdetails.addedsponsors.length > 0 && \r\n                                    <div className=\"added-guest-details my-3\"> \r\n                                    {\r\n                                        this.state.sponsorsdetails.addedsponsors.map(member  => {\r\n                                            return (\r\n                                                <div className=\"each-div-of-each-guest\">\r\n                                                    <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                        <div className=\"guest-img-session\">\r\n                                                            <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } />\r\n                                                        </div>\r\n                                                        <div className=\"guest-details d-flex flex-column\">\r\n                                                            <h5>{ member.name } </h5>\r\n                                                        </div>\r\n                                                        <span onClick={() => {\r\n                                                            this.handleRemoveSponsor({\r\n                                                                target : \"sponsor\",\r\n                                                                roletype : \"sponsor\",\r\n                                                                role : \"sponsor\",\r\n                                                                key : member._id\r\n                                                            })\r\n                                                        }}>\r\n                                                        <i class=\"far fa-times-circle\"></i>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                }\r\n                                <p className=\"not-registered-guest-session\">Is this event is sponsored?</p>\r\n                                <div className=\"doeshavesponsor d-flex justify-content-start\">\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"sponsor_issponsored\" id=\"exampleRadios1\" value=\"true\" onChange={this.handleChange} checked={this.state.sponsorsdetails.issponsored === \"true\"} />\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                            Yes\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"sponsor_issponsored\" id=\"exampleRadios2\" value=\"false\" onChange={this.handleChange} checked={this.state.sponsorsdetails.issponsored === \"false\"}/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                           No\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    this.state.sponsorsdetails.issponsored === \"true\" && (\r\n                                        <form onSubmit={this.handleSubmitAddSponsor}>\r\n                                            <div className=\"sponsors-details-session row\">\r\n                                                <div className=\"description-about-each-form col-md-5\">\r\n                                                    <h5>Add Sponsors Details</h5>\r\n                                                    <p>Provide sponsors details if any. like github sponsored.</p>\r\n                                                </div>\r\n                                                <div className=\"col-md-7\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"sponsorname\" className=\"label\">Sponsor's Name</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"sponsorname\" aria-describedby=\"emailHelp\" placeholder=\"Name of the Faculty\"\r\n                                                                name=\"sponsor_details_name\" value={this.state.sponsorsdetails.details.name} onChange={this.handleChange}/>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"sponsors-image\" className=\"label\">Sponsor Image</label>\r\n                                                        <input type=\"file\" className=\"form-control\" id=\"sponsors-image\" aria-describedby=\"emailHelp\" accept=\"image/*\" name=\"image\" onChange={this.handleFileChange}/>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"sponsors-description\" className=\"label\">Sponsors Details</label>\r\n                                                        <textarea className=\"form-control\" id=\"sponsors-description\" rows=\"5\" name=\"sponsor_details_details\" value={this.state.sponsorsdetails.details.details}  onChange={this.handleChange} placeholder=\"Something about the sponsorship..\"></textarea>\r\n                                                    </div>\r\n                                                    <button type=\"submit\" className=\"btn btn-primary btn-md btn-block next-buttons\">Add</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    )\r\n                                }\r\n                               <hr className=\"line-break-line\" />\r\n                                <div className=\"d-flex justify-content-between\" id=\"forgotpassword\">\r\n                                    <div>\r\n                                        <a id=\"our-back-button\" className=\"btn btn-md btn-light back-buttons\" href=\"addevent/aboutevent\">Back</a>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Link to={ `/user/${this.props.currentUser.user._id}/add/${this.props.createdEvent.data._id}/formdetails` } type=\"button\" className=\"btn btn-primary btn-md btn-block next-buttons\">Next</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        currentUser : state.currentUser,\r\n        createdEvent : state.createdEvent\r\n    }\r\n} \r\n\r\nexport default withRouter(connect(mapStateToProps , {  \r\n    showAddGuestModal , \r\n    fetchAllUsers , \r\n    showAddEventtakerModal,\r\n    handleAddSelectedPerson , \r\n    handleRemoveSelectedPerson ,\r\n    handleAddPerson , \r\n    handleRemovePerson,\r\n    handleAddSponsor,\r\n    handleRemoveSponsor,\r\n    fetchguestandsponsorspagedata,\r\n    fetchCreatedEvent\r\n })(GuestAndSponsorsForm));\r\n","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\userRegisterDetails.js",["294","295","296","297","298","299","300"],"import { apiCall, apiUploadCall , apiComplexCall } from \"../../services/api\";\r\nimport { setAuthorizationToken } from \"./auth\";\r\n\r\nimport {\r\n    FETCH_USER_PERSONAL_DETAILS,\r\n    LOAD_USER_PERSONAL_DETAILS,\r\n    FETCH_USER_PERSONAL_DETAILS_ERROR,\r\n    FETCH_CLASS_AND_SCOEITY_DETAILS,\r\n    LOAD_CLASS_AND_SCOEITY_DETAILS,\r\n    FETCH_CLASS_AND_SCOEITY_DETAILS_ERROR,\r\n    FETCH_CREATED_EVENT,\r\n    LOAD_CREATED_EVENT,\r\n    FETCH_CREATED_EVENT_ERROR,\r\n    FETCH_GUESTANDSPONSOR_DATA,\r\n    LOAD_GUESTANDSPONSOR_DATA,\r\n    FETCH_GUESTANDSPONSOR_DATA_ERROR,\r\n    FETCH_ALLUSERS_ERROR\r\n} from \"../actionTypes\";\r\n\r\nimport { addError , removeError } from \"./error\";\r\n\r\n\r\n// export const setPersonalDetails = (data , id) => async (dispatch) => {\r\n//         try{\r\n//             dispatch({ type : FETCH_USER_PERSONAL_DETAILS });\r\n//             let { token ,  userdetails } = await apiUploadCall(\"POST\" , `/api/user/${id}/create/personaldetails` , data);\r\n//             localStorage.setItem(\"jwtToken\", token);\r\n//             setAuthorizationToken(token);     \r\n//             dispatch({ type : LOAD_USER_PERSONAL_DETAILS , user : userdetails });\r\n//             dispatch(removeError());\r\n//         }catch(err){\r\n//             console.error(\"got error from personal details ===> \" , err.message);\r\n//             dispatch({ type : FETCH_USER_PERSONAL_DETAILS_ERROR });\r\n//             dispatch(addError(err.message));\r\n//         }\r\n// }\r\n\r\n\r\nexport const setClassAndSocietyDetails = (data , userid) => async (dispatch) => {\r\n        try{\r\n            dispatch({ type : FETCH_CLASS_AND_SCOEITY_DETAILS });\r\n            let { token , userdetails } = await apiCall(\"post\", `/api/user/${userid}/create/classandsociety`, data);\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            setAuthorizationToken(token);\r\n            dispatch({ type : LOAD_CLASS_AND_SCOEITY_DETAILS , user : userdetails });  \r\n            dispatch(removeError());\r\n        }catch(err){\r\n            console.error(\"got error from classandsocietydetails ===> \" , err.message);\r\n            dispatch({ type : FETCH_CLASS_AND_SCOEITY_DETAILS_ERROR  });\r\n            dispatch(addError(err.message));\r\n        }\r\n}\r\n\r\n\r\nexport const setEventDetails = (data , userid) => async (dispatch) => {\r\n      try{\r\n            dispatch({ type : FETCH_CREATED_EVENT  });\r\n            let { eventdetails } = await apiUploadCall(\"post\", `/api/user/${userid}/add/eventdetails`, data);\r\n            dispatch({ type : LOAD_CREATED_EVENT , event : eventdetails });\r\n            dispatch(removeError()); \r\n            \r\n      }catch(err){\r\n            console.error(\"Got error while creating error ==>>>\" , err);\r\n            dispatch({ type : FETCH_CREATED_EVENT_ERROR });\r\n            dispatch(addError(err.message));\r\n    }\r\n}\r\n\r\n\r\n// export const setGuestAndSponsorsDetails = (data , userid , eventid) => async (dispatch) => {\r\n//     try{\r\n//         dispatch({ type : FETCH_GUESTANDSPONSOR_DATA });\r\n//         let event = await apiComplexCall(\"post\" , `/api/user/${userid}/addevent/${eventid}/guestandsponsor` , data);\r\n//         dispatch({ type : LOAD_GUESTANDSPONSOR_DATA , event });\r\n//         dispatch(removeError());\r\n\r\n//     }catch(err){\r\n//         dispatch({ type : FETCH_GUESTANDSPONSOR_DATA_ERROR  });\r\n//         dispatch(addError(err.message));\r\n//     }\r\n// }\r\n\r\n\r\nexport const updateUserProfileData = (userid , data) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type : FETCH_CLASS_AND_SCOEITY_DETAILS });\r\n        let { token , userdetails } = await apiUploadCall(\"post\", `/api/user/${userid}/edit/profile/personaldetails`, data);\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setAuthorizationToken(token);\r\n        dispatch({ type : LOAD_CLASS_AND_SCOEITY_DETAILS , user : userdetails });  \r\n        dispatch(removeError());\r\n    }catch(err){\r\n        console.error(\"got error from classandsocietydetails ===> \" , err.message);\r\n        dispatch({ type : FETCH_CLASS_AND_SCOEITY_DETAILS_ERROR  });\r\n        dispatch(addError(err.message));\r\n    }\r\n}\r\n\r\nexport const updateUserSocietyDetails = (userid , data) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type : FETCH_CLASS_AND_SCOEITY_DETAILS });\r\n        let { token , userdetails } = await apiCall(\"post\", `/api/user/${userid}/edit/profile/societydetails`, data);\r\n        console.log(\"Got data edited data from server, \" , token , userdetails);\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setAuthorizationToken(token);\r\n        dispatch({ type : LOAD_CLASS_AND_SCOEITY_DETAILS , user : userdetails });  \r\n        dispatch(removeError());\r\n    }catch(err){\r\n        console.error(\"got error from classandsocietydetails ===> \" , err.message);\r\n        dispatch({ type : FETCH_CLASS_AND_SCOEITY_DETAILS_ERROR  });\r\n        dispatch(addError(err.message));\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserClassDetails = (userid , data) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type : FETCH_CLASS_AND_SCOEITY_DETAILS });\r\n        let { token , userdetails } = await apiCall(\"post\", `/api/user/${userid}/edit/profile/classdetails`, data);\r\n        console.log(\"Got data edited data from server, \" , token , userdetails);\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setAuthorizationToken(token);\r\n        dispatch({ type : LOAD_CLASS_AND_SCOEITY_DETAILS , user : userdetails });  \r\n        dispatch(removeError());\r\n    }catch(err){\r\n        console.error(\"got error from classandsocietydetails ===> \" , err.message);\r\n        dispatch({ type : FETCH_CLASS_AND_SCOEITY_DETAILS_ERROR  });\r\n        dispatch(addError(err.message));\r\n    }\r\n}\r\n\r\nexport const fetchAllUsers = (userid) => async (dispatch) => {\r\n    try{\r\n        let allUsers = await apiCall(\"get\" , `/api/user/${userid}/getallusers`);\r\n        return allUsers;  \r\n    }catch(err){\r\n        console.error(\"Got error while fetching all users ===>>\" , err.message);\r\n        dispatch({ type : FETCH_ALLUSERS_ERROR  });\r\n        dispatch(addError(err.message));\r\n    }\r\n}\r\n\r\n\r\nexport const fetchusersocietydetails = (userid) => async (dispatch) => {\r\n    try{\r\n        let societydata = await apiCall(\"get\" , `/api/user/${userid}/fetch/societydeails`);\r\n        return societydata;\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n} \r\n\r\nexport const fetchSpecificUser = (userid) => async (dispatch) => {\r\n     try{\r\n        let { userdata , registeredevents } = await apiCall(\"get\" , `/api/user/${userid}/getspecificuser`);\r\n        console.log(\"Userdata ==> \" , userdata , registeredevents);\r\n        dispatch({\r\n            type : \"LOAD_SPECIFIC_USER_DATA\",\r\n            user : userdata,\r\n            registeredevents\r\n        });\r\n        \r\n     }catch(err){\r\n         console.log(err);\r\n     }\r\n}","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietyPage.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietyHeader.js",["301","302","303"],"import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { showSearchModal } from \"../../stores/actions/society\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SocietyHeader extends Component{\r\n   \r\n    handleClick = () => {\r\n        this.props.showSearchModal();\r\n    }\r\n\r\n    getMembersLength = (data) => {\r\n        let totalLength = 0;\r\n        if(Object.keys(data).length > 0){\r\n            totalLength = data.normal_members.length + data.council_members.length + data.council_heads.length;\r\n            if(data.faculty){\r\n                if(Object.keys(data.faculty) > 0){\r\n                    totalLength++;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return totalLength;\r\n    }\r\n\r\n    render(){\r\n        let totalMembers = this.getMembersLength(this.props.data);\r\n        let imgurl = \"\";\r\n        if(Object.keys(this.props.data).length > 0){\r\n            if(this.props.data.name === \"ieee\"){\r\n                imgurl = \"ieee_logo.jpg\";\r\n            }\r\n            if(this.props.data.name === \"iste\"){\r\n                imgurl = \"iste_logo.jpg\";\r\n            }\r\n            if(this.props.data.name === \"isa\"){\r\n                imgurl = \"isa_logo.gif\";\r\n            }\r\n            if(this.props.data.name === \"csi\"){\r\n                imgurl = \"csi_logo.jpg\";\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div className=\"society-header-session d-flex justify-content-center\">\r\n                <div className=\"d-flex flex-column\">\r\n                    <img className=\"cover-img-of-society\" src=\"/images/cover_image.jpg\" alt=\"coverimage\" />\r\n                    <div className=\"d-flex justify-content-center\">\r\n                       <img className=\"society-page-society-icon\" src={ `/images/${imgurl}` } alt=\"society-image\" />\r\n                    </div>\r\n                    <div className=\"society-contents-div\">\r\n                        <p className=\"society-page-society-name\"> { Object.keys(this.props.data).length > 0 ? this.props.data.name.toUpperCase() : null } VESIT</p>\r\n                        <p className=\"society-description\">Student chapter of Indian Society for Technical Education,\r\n                            ISTE aims at developing not only technical temperament of budding engineers but also overall personality, reasoning and presentation skills.</p>\r\n                        <div className=\"faculty-and-society-incharge-session d-flex justify-content-center align-items-center\">\r\n                            <div className=\"d-flex flex-column\">\r\n                                <Link to=\"/user/profile/:id\">\r\n                                    <div className=\"d-flex flex-row\">\r\n                                        <div>\r\n                                            <img className=\"society-incharge-and-chairperson-image\" src=\"/images/user-img1.jpg\" alt=\"user-profile-img\"/>\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column\">\r\n                                            <p className=\"incharge-name\">Ajay Gupta</p>\r\n                                            <p className=\"role-of-person\">Faculty Incharge</p>\r\n                                        </div>\r\n                                    </div> \r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <Link to=\"/user/profile/:id\">\r\n                                    <div className=\"d-flex flex-row\">\r\n                                        <div>\r\n                                            <img className=\"society-incharge-and-chairperson-image\" src=\"/images/user-img1.jpg\" alt=\"user-profile-img\"/>\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column\">\r\n                                            <p className=\"incharge-name\">Hritwik Ekade</p>\r\n                                            <p className=\"role-of-person\">Society Chairperson</p>\r\n                                        </div>\r\n                                    </div> \r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"setting-button-div\">\r\n                            <Link to={ `/society/${this.props.data.name}/edit/society/${this.props.data._id}` } className=\"btn btn-md btn-primary settings-button\">\r\n                                <i class=\"fas fa-cog\"></i>\r\n                                <span>Settings</span>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"faculty-and-society-incharge-session members-and-event-session d-flex justify-content-center align-items-center\">\r\n                            <div className=\"all-members-div\">\r\n                                <a className=\"btn btn-lg society-page-see-all-members-button\" onClick={this.handleClick}>\r\n                                    <img className=\"event-and-members-images\" src=\"/images/membersicon.png\"  alt=\"members-icon\" />\r\n                                    <p className=\"members-and-event-number\">{ totalMembers }</p>\r\n                                    <p className=\"property-of-above\"> Members</p>\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"all-events-div\">\r\n                                <a className=\"btn btn-lg society-page-see-all-members-button\">\r\n                                    <img className=\"event-and-members-images\" src=\"/images/smalleventicon.png\"  alt=\"members-icon\" />\r\n                                    <p className=\"members-and-event-number\">{ Object.keys(this.props.data).length > 0 ? this.props.data.events.length : 0 }</p>\r\n                                    <p className=\"property-of-above\"> Events </p>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n    showSearchModal\r\n} , dispatch);\r\n\r\n\r\nexport default connect( null , mapDispatchToProps )(SocietyHeader);","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietyContents.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\SearchModal.js",["304","305","306","307"],"import React, { Component } from 'react';\r\nimport Modal from \"./Modal\";\r\nimport \"../../asserts/css/SearchModal.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { serchedData , getSocietyMembers } from \"../../functions\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { hideSearchModal } from \"../../stores/actions/society\";\r\n \r\nclass SearchModal extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchtext : \"\",\r\n            filters : [],\r\n            council_heads : [],\r\n            council_members : [],\r\n            normal_members : [],\r\n            faculty : []\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if(Object.keys(this.props.society.data).length > 0){\r\n            const normal_members = this.props.society.normal_members.map(member => {\r\n                return { societyrole : \"normal-member\" , ...member }\r\n            });\r\n            \r\n            const council_members = this.props.society.council_members.map(member => {\r\n                return {  societyrole : \"council-member\" , ...member }\r\n            });\r\n\r\n            const council_heads = this.props.society.council_heads.map(member => {\r\n                return { societyrole : \"council-head\" , ...member }\r\n            });\r\n\r\n            const faculty = {\r\n                societyrole : \"faculty\",\r\n                ...this.props.society.faculty\r\n            }\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                normal_members,\r\n                council_heads,\r\n                council_members,\r\n                faculty\r\n            });\r\n        }\r\n    }\r\n\r\n   \r\n    handleInputClick = (e) => {\r\n        let inData = false;\r\n        for(let i = 0 ; i < this.state.filters.length ; i++){\r\n            if(e.target.value === this.state.filters[i]){\r\n                inData = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!inData){\r\n            this.setState({\r\n                ...this.state,\r\n                filters : [...this.state.filters , e.target.value]\r\n            });\r\n        }\r\n    }\r\n \r\n    handleRemoveClick = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            ...this.state,\r\n            filters : this.state.filters.filter(filter => filter !== e.target.value)\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            searchtext : e.target.value\r\n        });\r\n    }\r\n\r\n    handleSearchModalClose = () => {\r\n        this.props.hideSearchModal();\r\n    }\r\n\r\n    render(){\r\n    \r\n        let filtereData = [];\r\n        if(this.state.filters.length > 0){\r\n            for(let p = 0 ; p < this.state.filters.length ; p++){\r\n                if(this.state.filters[p] === \"council-head\"){\r\n                    for(let t = 0 ; t < this.state.council_heads.length ; t++){\r\n                        filtereData.push(this.state.council_heads[t]);\r\n                    }\r\n                }\r\n                if(this.state.filters[p] === \"normal-member\"){\r\n                    for(let q = 0 ; q < this.state.normal_members.length ; q++){\r\n                        filtereData.push(this.state.normal_members[q]);\r\n                    }\r\n                }\r\n                if(this.state.filters[p] === \"council-member\"){\r\n                    for(let r = 0 ; r < this.state.council_members.length ; r++){\r\n                        filtereData.push(this.state.council_members[r]);\r\n                    }\r\n                }\r\n                if(this.state.filters[p] === \"faculty\"){\r\n                     filtereData.push(this.state.faculty);\r\n                }\r\n            }\r\n        }else{\r\n            for(let t = 0 ; t < this.state.council_heads.length ; t++){\r\n                filtereData.push(this.state.council_heads[t]);\r\n            }\r\n            for(let q = 0 ; q < this.state.normal_members.length ; q++){\r\n                filtereData.push(this.state.normal_members[q]);\r\n            }\r\n            for(let r = 0 ; r < this.state.council_members.length ; r++){\r\n                filtereData.push(this.state.council_members[r]);\r\n            }\r\n            filtereData.push(this.state.faculty);\r\n            \r\n        }\r\n\r\n         if(this.state.searchtext !== \"\"){\r\n            let matches = filtereData.filter(state => {\r\n                const regex = new RegExp(this.state.searchtext.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"), 'gi');\r\n                return state.email.match(regex);\r\n            });\r\n            filtereData = matches;\r\n         }\r\n\r\n        return(\r\n            \r\n            <Modal className=\"book-a-call-modal\" hideModal={this.handleSearchModalClose}>\r\n                <h5 className=\"text-center search-modal-heading\">Search Members</h5>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <form className=\"search-members-form\">\r\n                            <div className=\"form-group\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                                <input type=\"email\" onChange={this.handleChange}  \r\n                                   className=\"form-control\" value={this.state.searchtext} id=\"exampleFormControlInput1\" placeholder=\"Search members by email address.\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-filter col-12\">\r\n                        <div className=\"filter-selector\">\r\n                            <button className=\"btn btn-md btn-primary\" value=\"normal-member\" onClick={this.handleInputClick}>\r\n                                Normal Members\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"faculty\" onClick={this.handleInputClick}>\r\n                               faculty      \r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"council-member\" onClick={this.handleInputClick}>\r\n                                Council Members\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"council-head\" onClick={this.handleInputClick}>\r\n                                Council Heads\r\n                            </button>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"filter-selector\">\r\n                            {\r\n                                this.state.filters.map(filter => (\r\n                                    <button className=\"btn btn-md btn-primary selected-filter-buttons\" value={filter} onClick={this.handleRemoveClick}>\r\n                                      { filter } <i className=\"fas fa-times\"></i>\r\n                                    </button>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"searched-content\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                filtereData.map(member => (\r\n                                    member.username ? (\r\n                                           <div className=\"col-12\">\r\n                                                <div className=\"each-search-content row\">\r\n                                                    <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                        <div className=\"searched-content-img-session\">\r\n                                                            <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"user-image\" />\r\n                                                        </div>\r\n                                                        <div className=\"searched-content-user-details\">\r\n                                                            <p className=\"Searched-content-username\">{ member.username }</p>\r\n                                                            {\r\n                                                                member.societydetails && \r\n                                                                  <p> { member.societydetails.name.toUpperCase() }, { member.societydetails.role }</p>\r\n                                                            }\r\n                                                            {\r\n                                                                member.classdetails && \r\n                                                                 <p><span>{ member.classdetails.department.toUpperCase() }</span> - <span>{member.classdetails.class.toUpperCase()},</span> { member.classdetails.rollno }</p>\r\n                                                            }\r\n                                                            \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                        <button className=\"btn btn-md btn-primary\">    \r\n                                                            <Link to={ `/user/${member._id}/profile` }>\r\n                                                                View Profile\r\n                                                            </Link>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                    ) : (\r\n                                           <div className=\"col-12\">\r\n                                                <div className=\"each-search-content row\">\r\n                                                    <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                        <div className=\"searched-content-img-session\">\r\n                                                            <img src=\"/images/profile_image.png\" alt=\"user-image\" />\r\n                                                        </div>\r\n                                                        <div className=\"searched-content-user-details\">\r\n                                                            <p className=\"Searched-content-username\">{ member.email }</p>\r\n                                                            {\r\n                                                                <p> { member.societyrole }</p>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                    ) \r\n                                ))\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n    society : state.society\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n    hideSearchModal\r\n} , dispatch)\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(SearchModal); ","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\Modal.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\functions.js",["308"],"// All Functions here\r\nimport { apiCall } from \"./services/api\";\r\n\r\nexport const getSocietyMembers = async () => {\r\n    try{\r\n        var res = await apiCall(\"get\" , \"/api/society/ieee/allmembers\");\r\n        let members_data = [];\r\n        let states = Object.entries(res).map(async ([key , value]) => {\r\n            if(key !== \"facult_details\"){\r\n                if(value.length > 0){\r\n                    value.forEach(async function(eachdata){\r\n                        await members_data.push(eachdata);\r\n                    });\r\n                }   \r\n            }else{\r\n                if(Object.keys(value).length > 0) {\r\n                    await members_data.push(value);\r\n                }\r\n            }\r\n        });\r\n        return members_data;\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n        return err;\r\n    }  \r\n}\r\n\r\nexport const getAllEvents = async (society) => {\r\n    try{\r\n        let data = await apiCall(\"get\" , `/api/society/${society}/allevents`);\r\n        return data;\r\n    }catch(err){\r\n        console.log(err);\r\n        return err;\r\n    }\r\n}\r\n","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\AboutSociety.js",["309"],"import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AboutSociety extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"about-society-session container\">\r\n                <div className=\"society-iamges-and-description\">\r\n                    <img src=\"/images/iste_society_image.jpg\" alt=\"society-image\" />\r\n                    <p id=\"society-main-text\">Student chapter of Indian Society for Technical Education</p>\r\n                </div>\r\n                <p>\r\n                    ISTE aims at developing not only technical temperament of budding engineers but also overall personality, reasoning and presentation skills. ISTE has a good reputation in the field of technical education and it strives hard in order to cultivate a fraternal spirit among teachers, administrators, technicians, investigators, practitioners and industrialists.\r\n                    In todays world of excessive competition it becomes mandatory that along with technical excellence a person be able to put forth his/her ideas well.\r\n                    This is what ISTE aims to develop technical as well as soft skills of a person. Events like TPP, Open Hardware etc. expose the students to the technical field and Debates, Group discussions develop the very needed confidence in each individual. thus ISTE aims at shaping a good individual and a technician at the same time.\r\n                    For more details go to <a href=\"www.isteonline.in\">www.isteonline.in</a>\r\n                </p>\r\n                <h2> NATIONAL ISTE </h2>\r\n                <p>\r\n                The Indian Society for Technical Education is a national, professional, non-profit making Society registered under the Societies Registration Act of 1860. First started in 1941 as the Association of Principals of Technical Institutions (APTI), it was converted into \"Indian Society for Technical Education\" in 1968 with a view to enlarge its activities to advance the cause of technological education. The major objective of the ISTE is to assist and contribute in the production and development of top quality professional engineers and technicians needed by the industries and other organisations. Being the only national organisation of educators in the field of Engineering and Technology, ISTE effectively contributes in various missions of the Union Government. The Ministry of Human Resource Development, CTE/DST/MIT/State Govts. are well associated with the ISTE for programmes relating to technical education.\r\nFor more details go to www.isteonline.in\r\n                </p>\r\n                <h2>ISTE Students Convention</h2>\r\n                <p>\r\n                First Annual Convention of ISTE Students, BIET, Davengare (Karnataka), 11 & 12 October, 1998 - Role of Technical Students in Nation Building. Chief Guest: Hon'ble Dr. S. Rame Gowda, Chairman, AICTE, New Delhi.\r\nSecond Annual Convention of ISTE Students, SES College of Engineering, Kopargaon (Maharashtra), 30 & 31, October, 1999 - Challenges for Technical Students in the 21st Century. Chief Guest: Hon'ble Dr. Vinod N. Walivadekar, Director, CEDT, Aurangabad.\r\nThird Annual Convention of ISTE Students, Regional Engineering College, Jalandhar (Punjab), 14 & 15, October, 2000 - The Role of Information Technology in Technical Education. Chief Guest: Hon'ble Sardar Jagdish Singh Garcha, Minister for Technical Education and Industrial Training, Govt. of Punjab.\r\nTo know more, click here.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        society : state.society\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , null)(AboutSociety);","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\AboutMembers.js",["310","311"],"import React, { Component } from 'react';\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport { parse } from \"query-string\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass AboutMembers extends Component {\r\n    \r\n    render() {\r\n            const { location : { search } } = this.props;\r\n            const normal_members = this.props.society.normal_members;\r\n            const council_members = this.props.society.council_members;\r\n            const council_heads = this.props.society.council_heads;\r\n            const faculty =  this.props.society.faculty;\r\n            let queryObj = parse(search);  \r\n\r\n            let filtereData = [];\r\n            if(Object.keys(this.props.society.data).length > 0){\r\n                    if(Object.keys(queryObj).length === 1){\r\n                        // Default council head\r\n                        console.log(\"Default\");\r\n                        filtereData = council_heads;\r\n                    }else{\r\n                        if(queryObj.memberType === \"council-heads\"){\r\n                            filtereData = council_heads;\r\n                        }\r\n                        if(queryObj.memberType === \"council-members\"){\r\n                            filtereData = council_members;\r\n                        }\r\n                        if(queryObj.memberType === \"normal-members\"){\r\n                            filtereData =  normal_members;\r\n                        }\r\n                        if(queryObj.memberType === \"faculty\"){\r\n                            if(this.props.society.faculty){\r\n                                filtereData.push(faculty); \r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n\r\n            console.log(\"Filtered data , \" , filtereData);\r\n           \r\n                \r\n        return(\r\n            <div className=\"about-members-session container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-3 col-lg-2 our-navigation-of-members\">\r\n                        <div className=\"all-members-nev-buttons-div nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                            <Link to={ `/society/${ Object.keys(this.props.society.data).length > 0 ? this.props.society.data.name : null }?show=about-members&memberType=council-heads` } \r\n                                className={ `nav-link ${(queryObj.memberType === \"council-heads\" || Object.keys(queryObj).length === 1) ? \"active\" : null} members-navigation-buttons` } \r\n                                id=\"v-pills-home-tab\" data-toggle=\"pill\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">Coucil-heads</Link>\r\n                            <Link to={ `/society/${ Object.keys(this.props.society.data).length > 0 ? this.props.society.data.name : null }?show=about-members&memberType=council-members` } \r\n                                className={ `nav-link ${(queryObj.memberType === \"council-members\") ? \"active\" : null} members-navigation-buttons` } \r\n                                id=\"v-pills-profile-tab\" data-toggle=\"pill\"  role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">Council-members</Link>\r\n                            <Link to={`/society/${ Object.keys(this.props.society.data).length > 0 ? this.props.society.data.name : null }?show=about-members&memberType=normal-members` } \r\n                                className={ `nav-link ${(queryObj.memberType === \"normal-members\") ? \"active\" : null} members-navigation-buttons` } \r\n                                id=\"v-pills-messages-tab\" data-toggle=\"pill\" role=\"tab\" aria-controls=\"v-pills-messages\" aria-selected=\"false\">Normal Members</Link>\r\n                            <Link to={ `/society/${ Object.keys(this.props.society.data).length > 0 ? this.props.society.data.name : null }?show=about-members&memberType=faculty` } \r\n                                className={ `nav-link ${(queryObj.memberType === \"faculty\") ? \"active\" : null} members-navigation-buttons` } \r\n                                id=\"v-pills-settings-tab\" data-toggle=\"pill\" role=\"tab\" aria-controls=\"v-pills-settings\" aria-selected=\"false\">Faculty</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"all-membes-cards col-12 col-md-9 col-lg-10\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                filtereData.map(member => (\r\n                                    member.username ? (\r\n                                        <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                            <div className=\"card\">\r\n                                                <img className=\"card-img-top\" src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"Card image cap\" />\r\n                                                <div className=\"card-body\">\r\n                                                    <h5 className=\"card-title\">{ member.username }</h5>\r\n                                                    {\r\n                                                        member.societydetails && \r\n                                                         <p className=\"card-text\">{ member.societydetails.role.toUpperCase() }, { member.societydetails.specificrole ? member.societydetails.specificrole : null }</p>\r\n                                                    }\r\n                                                    {\r\n                                                        member.classdetails && \r\n                                                         <p className=\"card-text\">{ member.classdetails.department.toUpperCase() }, {member.classdetails.class.toUpperCase()}-{ member.classdetails.rollno } </p>\r\n\r\n                                                    }\r\n                                                    <button className=\"btn btn-sm btn-primary\"> Profile </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                            <div className=\"card\">\r\n                                                <img className=\"card-img-top\" src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"Card image cap\" />\r\n                                                <div className=\"card-body\">\r\n                                                    <h5 className=\"card-title\">{ member.email }</h5>\r\n                                                    <p className=\"card-text\">{ queryObj.memberType  }</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) \r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    society : state.society,\r\n}) \r\n\r\nexport default withRouter(connect(mapStateToProps , null)(AboutMembers));","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\Events.js",["312","313","314","315"],"import React, { Component } from 'react';\r\nimport \"../../asserts/css/Society.scss\";\r\nimport { getAllEvents } from \"../../functions\";\r\nimport moment from \"moment\";\r\nimport \"../../asserts/css/EventCards.scss\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport { parse } from \"query-string\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Events extends Component{\r\n   \r\n    getUpcomingEvents = (events) => {\r\n        let todaysDate = new Date();\r\n        let wrapper = moment(todaysDate).format(\"YYYY-MM-DD\");\r\n        let upcomingevents = events.filter(event => moment(wrapper).isBefore(event.date)); \r\n        return upcomingevents;\r\n    }\r\n\r\n    getTodaysEvents = (events) => {\r\n        let todaysDate = new Date();\r\n        let wrapper = moment(todaysDate).format(\"YYYY-MM-DD\");  \r\n        let todaysevents = events.filter(event => event.date === wrapper);\r\n        return todaysevents;\r\n    } \r\n\r\n    render(){\r\n            const { location : { search } } = this.props;\r\n            let queryObj = parse(search);  \r\n            let todaysevents = [];\r\n            let upcomingevents = [];\r\n            let allEvents = [];\r\n            if(Object.keys(this.props.society.data).length > 0){\r\n                todaysevents = this.getTodaysEvents(this.props.society.data.events);\r\n                upcomingevents = this.getUpcomingEvents(this.props.society.data.events);\r\n                allEvents = this.props.society.data.events;\r\n            }\r\n\r\n\r\n        return(\r\n            <div className=\"society-all-events-session about-members-session\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-3 col-lg-2 our-navigation-of-members\">\r\n                        <div className=\"all-members-nev-buttons-div nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n\r\n                            <Link to={ `/society/${ Object.keys(this.props.society.data).length > 0 ? this.props.society.data.name : null }?show=events&eventType=todays-events` }\r\n                                className={ `nav-link ${ (queryObj.eventType === \"todays-events\" || Object.keys(queryObj).length === 1 ) ? \"active\" : null } members-navigation-buttons` } \r\n                                id=\"v-pills-home-tab\" data-toggle=\"pill\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">Today's Event</Link>\r\n\r\n                            <Link to={ `/society/${ Object.keys(this.props.society.data).length > 0 ? this.props.society.data.name : null }?show=events&eventType=upcoming-events` }\r\n                               className={ `nav-link ${ (queryObj.eventType === \"upcoming-events\") ? \"active\" : null } members-navigation-buttons` } \r\n                               id=\"v-pills-profile-tab\" data-toggle=\"pill\"  role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">Upcoming Events</Link>\r\n\r\n                            <Link to={ `/society/${ Object.keys(this.props.society.data).length > 0 ? this.props.society.data.name : null }?show=events&eventType=all-events`}\r\n                                className={ `nav-link ${ (queryObj.eventType === \"all-events\") ? \"active\" : null } members-navigation-buttons` } \r\n                                id=\"v-pills-messages-tab\" data-toggle=\"pill\" role=\"tab\" aria-controls=\"v-pills-messages\" aria-selected=\"false\">Event History</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9 col-lg-10\">\r\n                        <div className=\"MY-on-going-evenets-session container\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    ( queryObj.eventType === \"todays-events\" || Object.keys(queryObj).length === 1 ) && (\r\n                                        todaysevents.map(event => (\r\n                                            \r\n                                            <div className=\"society-page-event-lists col-12 col-md-6 col-lg-4\">\r\n                                                <div className=\"each-event-container society-page-events-each-container\">\r\n                                                    <div className=\"img-session\">\r\n                                                        <img src={event.imgurl.dataurl} alt=\"event-image\" />\r\n                                                    </div>\r\n                                                    <div className=\"content-session\">\r\n                                                        <div className=\"upper-content d-flex flex-column\">\r\n                                                            <p className=\"main-title\">{ event.name }</p>\r\n                                                            <p className=\"short-desc\">{ event.shortdesc }</p>\r\n                                                            <p className=\"guest-text\"><span>Guest: </span> Ajay, Neel </p>\r\n                                                            <div className=\"date-time-div d-flex justify-content-start align-items-center\">\r\n                                                                <p className=\"date-session\"><span><i className=\"far fa-calendar-alt\"></i></span>{ event.date }</p>\r\n                                                                <p><span><i className=\"far fa-clock\"></i></span> { event.time } </p>\r\n                                                            </div>\r\n                                                            <div className=\"register-button-div\">\r\n                                                                <a id=\"each-event-register-button\" className=\"btn btn-md btn-success\" href=\"/event/\">Register</a>        \r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))    \r\n                                    )\r\n                                }\r\n                                {\r\n                                    queryObj.eventType === \"upcoming-events\" && (\r\n                                        upcomingevents.map(event => (\r\n                                            \r\n                                            <div className=\"society-page-event-lists col-12 col-md-6 col-lg-4\">\r\n                                                <div className=\"each-event-container society-page-events-each-container\">\r\n                                                    <div className=\"img-session\">\r\n                                                        <img src={event.imgurl.dataurl} alt=\"event-image\" />\r\n                                                    </div>\r\n                                                    <div className=\"content-session\">\r\n                                                        <div className=\"upper-content d-flex flex-column\">\r\n                                                            <p className=\"main-title\">{ event.name }</p>\r\n                                                            <p className=\"short-desc\">{ event.shortdesc }</p>\r\n                                                            <p className=\"guest-text\"><span>Guest: </span> Ajay, Neel </p>\r\n                                                            <div className=\"date-time-div d-flex justify-content-start align-items-center\">\r\n                                                                <p className=\"date-session\"><span><i className=\"far fa-calendar-alt\"></i></span>{ event.date }</p>\r\n                                                                <p><span><i className=\"far fa-clock\"></i></span> { event.time } </p>\r\n                                                            </div>\r\n                                                            <div className=\"register-button-div\">\r\n                                                                <a id=\"each-event-register-button\" className=\"btn btn-md btn-success\" href=\"/event/\">Register</a>        \r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))    \r\n                                    )\r\n                                }\r\n                                {\r\n                                    queryObj.eventType === \"all-events\" && (\r\n                                        allEvents.map(event => (\r\n                                            <div className=\"society-page-event-lists col-12 col-md-6 col-lg-4\">\r\n                                                <div className=\"each-event-container society-page-events-each-container\">\r\n                                                    <div className=\"img-session\">\r\n                                                        <img src={event.imgurl.dataurl} alt=\"event-image\" />\r\n                                                    </div>\r\n                                                    <div className=\"content-session\">\r\n                                                        <div className=\"upper-content d-flex flex-column\">\r\n                                                            <p className=\"main-title\">{ event.name }</p>\r\n                                                            <p className=\"short-desc\">{ event.shortdesc }</p>\r\n                                                            <p className=\"guest-text\"><span>Guest: </span> Ajay, Neel </p>\r\n                                                            <div className=\"date-time-div d-flex justify-content-start align-items-center\">\r\n                                                                <p className=\"date-session\"><span><i className=\"far fa-calendar-alt\"></i></span>{ event.date }</p>\r\n                                                                <p><span><i className=\"far fa-clock\"></i></span> { event.time } </p>\r\n                                                            </div>\r\n                                                            <div className=\"register-button-div\">\r\n                                                                <a id=\"each-event-register-button\" className=\"btn btn-md btn-success\" href=\"/event/\">Register</a>        \r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))    \r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStatesToProps = (state) => {\r\n    return { \r\n        society : state.society\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStatesToProps , null)(Events));","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\EventStatistics.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\society.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\society.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\UserPage.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\UserpageContent.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\UserPageContent.js",["316"],"import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport RegisteredEvents from \"./RegisteredEvents\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport { parse } from \"query-string\";\r\n\r\nclass UserpageContent extends Component{\r\n\r\n\r\n    render(){\r\n        const { location : { search } } = this.props;\r\n        let queryObj = parse(search);  \r\n\r\n        return(\r\n            <div className=\"society-page-navigation-session\">\r\n                 <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className={ `nav-link ${(queryObj.show === \"registered-events\" || Object.keys(queryObj).length === 0) ? \"active\" : null}` } id=\"pills-home-tab\" data-toggle=\"pill\" role=\"tab\" aria-selected=\"true\">\r\n                            Registerd Events\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                {\r\n                   ( queryObj.show === \"registered-events\" || Object.keys(queryObj).length === 0 ) && \r\n                    <RegisteredEvents />\r\n                }\r\n            </div>\r\n            \r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default  withRouter(UserpageContent);","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\UserPageHeader.js",["317","318","319","320"],"import React, { Component } from 'react';\r\nimport { Link ,withRouter } from \"react-router-dom\";\r\nimport \"../../asserts/css/UserProfile.scss\";\r\n \r\nclass UserpageHeader extends Component{\r\n\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    render(){\r\n        let username = \"\";\r\n        let img = \"\";\r\n        let societyname = \"\";\r\n        let societyimg = \"\";\r\n        let societyrole =\"\";\r\n        let specificrole = \"\";\r\n        let classname= \"\";\r\n        let rollno = 0;\r\n        let branch = \"\";\r\n        let email = \"\";\r\n        let year = 0;\r\n        if(Object.keys(this.props.user).length > 0){\r\n            let user = this.props.user;\r\n            username = user.username;\r\n            if(user.imgurl){\r\n                img = user.imgurl.dataurl;\r\n            }else{\r\n                img = \"/images/profile_image.png\";\r\n            }\r\n            \r\n            email = user.email;\r\n            branch = user.classdetails ? user.classdetails.department.toUpperCase() : \"\";\r\n            classname = user.classdetails ? user.classdetails.class.toUpperCase() : \"\";\r\n            rollno = user.classdetails ? user.classdetails.rollno : 0;\r\n            if(user.classdetails){\r\n                if(user.classdetails.currentyearofstudy === 1){\r\n                    year = \"F.E.\";\r\n                }else if(user.classdetails.currentyearofstudy === 2){\r\n                    year = \"S.E.\";\r\n                }else if(user.classdetails.currentyearofstudy === 3){\r\n                    year = \"T.E.\";\r\n                }else{\r\n                    year = \"B.E.\";\r\n                }\r\n            }\r\n            \r\n            if(Object.keys(user.societydetails).length > 0){\r\n                societyname = user.societydetails.name;\r\n                societyrole = user.societydetails.role;\r\n                specificrole = user.societydetails ? ( user.societydetails.specificrole ? user.societydetails.specificrole : \"\"  ) : \"\";\r\n                if(user.societydetails.name === \"ieee\"){\r\n                    societyimg = \"ieee_logo.jpg\";\r\n                }\r\n                if(user.societydetails.name === \"iste\"){\r\n                    societyimg = \"iste_logo.jpg\";\r\n                }\r\n                if(user.societydetails.name === \"isa\"){\r\n                    societyimg = \"isa_logo.gif\";\r\n                }\r\n                if(user.societydetails.name === \"csi\"){\r\n                    societyimg = \"csi_logo.jpg\";\r\n                }\r\n            }\r\n        }\r\n       \r\n\r\n        return(\r\n                <div className=\"society-header-session\">\r\n                    <div className=\"d-flex flex-column\">\r\n                        <img className=\"cover-img-of-society\" src=\"/images/cover_image.jpg\" alt=\"coverimage\" />\r\n                        <div className=\"d-flex justify-content-center\">\r\n                        <img className=\"society-page-society-icon\" src={ img } alt=\"User-image\" />\r\n                        </div>\r\n                        <div className=\"society-contents-div\">\r\n                            <p className=\"society-page-society-name\"> { username } </p>\r\n                            <p className=\"society-description\"><i class=\"far fa-envelope\"></i>\r\n                               <span id=\"email-of-user\"> { email } </span> , { branch + \", \" + year + \" \" + classname + \"-\" + rollno }\r\n                            </p>\r\n                            {\r\n                               ( Object.keys(this.props.user).length > 0 && Object.keys(this.props.currentUser.user).length > 0 ) &&\r\n                                    ( this.props.user._id.toString() === this.props.currentUser.user._id.toString() ) &&\r\n                                        <div className=\"setting-button-div\">\r\n                                            <Link to={ `/user/${this.props.currentUser.user._id}/edit/profile` } className=\"btn btn-md btn-primary settings-button\">\r\n                                                <i class=\"fas fa-cog\"></i>\r\n                                                <span>Settings</span>\r\n                                            </Link>\r\n                                        </div>\r\n                            }\r\n                            <div className=\"faculty-and-society-incharge-session members-and-event-session d-flex justify-content-center align-items-center\">\r\n                                <div className=\"all-members-div current-position-in-society\">\r\n                                    <a className=\"btn btn-lg society-page-see-all-members-button\" onClick={this.handleClick}>\r\n                                        <img className=\"event-and-members-images\" src={ `/images/${societyimg}` } alt=\"user-profile-img\"/>\r\n                                        <p className=\"members-and-event-number\">{ societyname.toUpperCase() + \" VESIT\" }</p>\r\n                                        <p className=\"property-of-above\"> { societyrole.toUpperCase() } </p>\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"all-events-div\">\r\n                                    <a className=\"btn btn-lg society-page-see-all-members-button\">\r\n                                        <img className=\"event-and-members-images\" src=\"/images/smalleventicon.png\"  alt=\"members-icon\" />\r\n                                        <p className=\"members-and-event-number\">{ this.props.totalreg }</p>\r\n                                        <p className=\"property-of-above\">  Registrations </p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(UserpageHeader);","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\createdEvent.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\allEvents.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\actions\\events.js",["321","322"],"import { apiCall, apiUploadCall } from \"../../services/api\";\r\n\r\nimport { \r\n  FETCH_ALL_EVENTS, \r\n  LOAD_ALL_EVENTS,\r\n  FETCH_ALL_EVENTS_ERROR,\r\n  FETCH_REGISTERED_EVENTS,\r\n  LOAD_REGISTERED_EVENTS,\r\n  FETCH_REGISTERED_EVENTS_ERROR,\r\n  FETCH_REGISTER_EVENT,\r\n  LOAD_REGISTER_EVENT,\r\n  FETCH_REGISTER_EVENT_ERROR,\r\n  HIDE_ADDGUESTMODAL,\r\n  SHOW_ADDGUESTMODAL,\r\n  SHOW_ADDEVENTTAKERMODAL,\r\n  HIDE_ADDEVENTTAKERMODAL\r\n } from \"../actionTypes\";\r\n\r\n\r\nimport { setAuthorizationToken , setCurrentUser } from \"./auth\";\r\nimport { addError, removeError } from \"./error\";\r\n\r\n\r\nexport const showAddGuestModal = () => ({\r\n  type : SHOW_ADDGUESTMODAL \r\n})\r\n\r\n\r\nexport const hideAddGuestModal = () => ({\r\n    type : HIDE_ADDGUESTMODAL \r\n})\r\n\r\nexport const showAddEventtakerModal = () => ({\r\n  type : SHOW_ADDEVENTTAKERMODAL \r\n})\r\n\r\n\r\nexport const hideAddEventtakerModal = () => ({\r\n    type : HIDE_ADDEVENTTAKERMODAL \r\n})\r\n\r\n\r\nexport const fetchAllEvents = () => async (dispatch) => {\r\n     try{\r\n        dispatch({ type : FETCH_ALL_EVENTS }); \r\n        let allEvents = await apiCall(\"get\" , \"/api/event/allevents\");\r\n        dispatch({ type : LOAD_ALL_EVENTS  , events : allEvents});\r\n        dispatch(removeError());\r\n\r\n     }catch(err){\r\n       console.log(\"got error while loading all events ===> \" , err.message);\r\n       dispatch({ type : FETCH_ALL_EVENTS_ERROR });\r\n       dispatch(addError(err.message));\r\n     }\r\n  }\r\n\r\n\r\nexport const registerEvent = (userid , eventid) => async (dispatch) => {\r\n  try{\r\n    dispatch({ type : FETCH_REGISTER_EVENT });\r\n    let { event } = await apiCall(\"post\" , `/api/event/${eventid}/register/user/${userid}`);\r\n    dispatch({ type : LOAD_REGISTER_EVENT , event });\r\n    dispatch({ type : FETCH_REGISTERED_EVENTS });\r\n    let { events } = await apiCall(\"get\" , `/api/event/user/${userid}/registeredevents`);\r\n    dispatch({ type : LOAD_REGISTERED_EVENTS , events });\r\n    dispatch(removeError());\r\n   \r\n  }catch(err){\r\n      console.log(\"Got error while registering event ====>\" , err.message);\r\n      dispatch({ type : FETCH_REGISTER_EVENT_ERROR });\r\n      dispatch(addError(err.message));\r\n  }\r\n}\r\n\r\nexport const unregisterEvent = (userid , eventid) => async (dispatch) => {\r\n  try{\r\n   \r\n    let { event } = await apiCall(\"post\" , `/api/event/${eventid}/unregister/user/${userid}`);\r\n    dispatch({ type : FETCH_REGISTERED_EVENTS });\r\n    let { events } = await apiCall(\"get\" , `/api/event/user/${userid}/registeredevents`);\r\n    dispatch({ type : LOAD_REGISTERED_EVENTS , events });\r\n    dispatch(removeError());\r\n  }catch(err){\r\n      console.log(\"Got error while unregistering event ====>\" , err.message);\r\n      dispatch({ type : FETCH_REGISTERED_EVENTS_ERROR });\r\n      dispatch(addError(err.message));\r\n  }\r\n}\r\n\r\nexport const unregisterEventFromProfile = (userid , eventid) => async (dispatch) => {\r\n  try{\r\n   \r\n      let { event } = await apiCall(\"post\" , `/api/event/${eventid}/unregister/user/${userid}`);\r\n      let userdetailsdata = await apiCall(\"get\" , `/api/user/${userid}/getspecificuser`);\r\n      dispatch({\r\n          type : \"LOAD_SPECIFIC_USER_DATA\",\r\n          user : userdetailsdata.userdata,\r\n          registeredevents : userdetailsdata.registeredevents\r\n      });\r\n      let { token , userdetails , registeredevents } = await apiCall(\"get\" , `/api/user/${userid}/get/updateddataandtoken`);\r\n      console.log(\"Updating root data , \" ,token , userdetails);\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      setAuthorizationToken(token);     \r\n      dispatch(setCurrentUser(userdetails , registeredevents));  \r\n      dispatch(removeError());          \r\n      return userdetails; \r\n\r\n  }catch(err){\r\n      console.log(\"Got error while unregistering event ====>\" , err.message);\r\n      dispatch({ type : FETCH_REGISTERED_EVENTS_ERROR });\r\n      dispatch(addError(err.message));\r\n  }\r\n}\r\n\r\nexport const registerSpecificEvent = (userid , eventid) => async (dispatch) => {\r\n   try{\r\n      let { event } = await apiCall(\"post\" , `/api/event/${eventid}/register/user/${userid}` );\r\n      console.log(\"got event data from server ==> \" , event);\r\n      dispatch({ type : \"LOAD_SPECIFIC_EVENT_DATA\" , event});\r\n      let { token , userdetails , registeredevents } = await apiCall(\"get\" , `/api/user/${userid}/get/updateddataandtoken`);\r\n      console.log(\"Updating root data , \" ,token , userdetails);\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      setAuthorizationToken(token);     \r\n      dispatch(setCurrentUser(userdetails , registeredevents));  \r\n      dispatch(removeError());          \r\n      return userdetails; \r\n\r\n   }catch(err){\r\n       console.log(\"Error while registering specific event , \" , err);\r\n   }\r\n}\r\n\r\n\r\nexport const unregisterSpecificEvent = (userid , eventid) => async (dispatch) => {\r\n  try{\r\n     let { event } = await apiCall(\"post\" , `/api/event/${eventid}/unregister/user/${userid}` );\r\n     console.log(\"got event data from server ==> \" , event);\r\n     dispatch({ type : \"LOAD_SPECIFIC_EVENT_DATA\" , event});\r\n     let { token , userdetails , registeredevents } = await apiCall(\"get\" , `/api/user/${userid}/get/updateddataandtoken`);\r\n      console.log(\"Updating root data , \" ,token , userdetails);\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      setAuthorizationToken(token);     \r\n      dispatch(setCurrentUser(userdetails , registeredevents));  \r\n      dispatch(removeError());          \r\n      return userdetails; \r\n  }catch(err){\r\n      console.log(\"Error while registering specific event , \" , err);\r\n  }\r\n}\r\n\r\n\r\nexport const fetchregisteredEvents = (userid) => async (dispatch) => {\r\n    try{\r\n       dispatch({ type : FETCH_REGISTERED_EVENTS });\r\n       let { events } = await apiCall(\"get\" , `/api/event/user/${userid}/registeredevents`);\r\n       dispatch({ type : LOAD_REGISTERED_EVENTS , events });\r\n       dispatch(removeError());\r\n\r\n    }catch(err){\r\n        console.log(\"Got error while registering event ====>\" , err.message);\r\n        dispatch({ type : FETCH_REGISTERED_EVENTS_ERROR });\r\n        dispatch(addError(err.message));\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCreatedEvent = (userid , eventid ) => async (dispatch) => {\r\n    try{\r\n        let { event } = await apiCall(\"get\" , `/api/user/${userid}/event/${eventid}/createdeventsdetails`);\r\n        dispatch({ type : \"LOAD_CREATED_EVENT\" , event : event });\r\n    }catch(err){\r\n       console.log(err);\r\n    }\r\n} \r\n\r\n\r\nexport const fetchguestandsponsorspagedata = (userid , eventid) => async (dispatch) => {\r\n    try{\r\n       let { selectedguests , selectedeventtakers , addedguests , addedeventtakers  , addedsponsors } = await apiCall(\"get\" , `/api/user/${userid}/addevent/${eventid}/getallguestsandsponsorsandeventtakers`);\r\n       let selectedguestsarr = selectedguests.map(eachperson => {\r\n          if(eachperson.roletype === \"user\"){\r\n              return eachperson.data;\r\n          }\r\n          let newobj = eachperson.data; \r\n          newobj.roletype = eachperson.roletype;\r\n          return newobj;\r\n       });\r\n \r\n       let selectedeventtakersarr = selectedeventtakers.map(eachperson => {\r\n            if(eachperson.roletype === \"user\"){\r\n              return eachperson.data;\r\n            }\r\n            let newobj = eachperson.data;\r\n            newobj.roletype = eachperson.roletype;\r\n            return newobj;\r\n      });\r\n\r\n      let addedguestsarr = addedguests.map(eachperson => {\r\n          let newobj = eachperson.data;\r\n          newobj.roletype = eachperson.roletype;\r\n          return newobj;\r\n      });\r\n\r\n      let addedeventtakersarr = addedeventtakers.map(eachperson => {\r\n          let newobj = eachperson.data;\r\n          newobj.roletype = eachperson.roletype;\r\n          return newobj;\r\n      });\r\n    \r\n      let addedsponsorsarr = addedsponsors.map(sponsor => {\r\n            let newobj = sponsor;\r\n            newobj.roletype = \"sponsor\";\r\n            newobj.role = \"sponsor\"; \r\n            return newobj;\r\n      });\r\n\r\n      dispatch({\r\n          type : \"LOAD_SELECTED_GUESTS\",\r\n          data : selectedguestsarr\r\n      });\r\n\r\n      dispatch({\r\n        type : \"LOAD_SELECTED_EVENTTAKERS\",\r\n        data : selectedeventtakersarr\r\n      });\r\n\r\n      dispatch({\r\n        type : \"LOAD_ADDED_GUESTS\",\r\n        data : addedguestsarr\r\n      });\r\n\r\n      dispatch({\r\n        type : \"LOAD_ADDED_EVENTTAKERS\",\r\n        data : addedeventtakersarr\r\n      });\r\n\r\n      dispatch({\r\n        type : \"LOAD_ADDED_SPONSORS\",\r\n        data : addedsponsorsarr\r\n      });\r\n\r\n    }catch(err){\r\n       console.log(\"Got error while getting all data ==> \" , err);\r\n\r\n    }\r\n}\r\n\r\n  // Guest and Sponsors and Eventakers details add \r\n export const handleAddSelectedPerson = (data , userid , eventid) => async (dispatch) => {\r\n       try{\r\n          let { target , selectedpersons } = await apiCall(\"post\" , `/api/user/${userid}/addevent/${eventid}/addselected/guestoreventaker` , data);\r\n          if(target === \"guest\"){\r\n              let newdata = selectedpersons.map(eachperson => {\r\n                   if(eachperson.roletype === \"user\"){\r\n                        return eachperson.data;\r\n                   }\r\n                   let newobj = eachperson.data; \r\n                   newobj.roletype = eachperson.roletype;\r\n                   return newobj;\r\n              });\r\n              dispatch({\r\n                type : \"LOAD_SELECTED_GUESTS\",\r\n                data : newdata\r\n              });\r\n          } \r\n\r\n          if(target === \"eventtaker\"){\r\n              let newdata = selectedpersons.map(eachperson => {\r\n                  if(eachperson.roletype === \"user\"){\r\n                     return eachperson.data;\r\n                  }\r\n                  let newobj = eachperson.data;\r\n                  newobj.roletype = eachperson.roletype;\r\n                  return newobj;\r\n              });\r\n              dispatch({\r\n                type : \"LOAD_SELECTED_EVENTTAKERS\",\r\n                data : newdata\r\n              });\r\n          }\r\n          \r\n       }catch(err){\r\n         console.log(\"Got error in Adding selected person => \" , err.message);\r\n       }\r\n }\r\n\r\n export const handleRemoveSelectedPerson = (data , userid , eventid) => async (dispatch) => {\r\n      try{\r\n        let { target , selectedpersons } = await apiCall(\"delete\" , `/api/user/${userid}/addevent/${eventid}/remove/selected/${data.target}/${data.roletype}/${data.role}/${data.key}`);\r\n          if(target === \"guest\"){\r\n              let newdata = selectedpersons.map(eachperson => {\r\n                   if(eachperson.roletype === \"user\"){\r\n                        return eachperson.data;\r\n                   }\r\n                   let newobj = eachperson.data;\r\n                   newobj.roletype = eachperson.roletype;\r\n                   return newobj;\r\n              });\r\n              console.log(\"modified data ,\" , newdata );\r\n              dispatch({\r\n                type : \"LOAD_SELECTED_GUESTS\",\r\n                data : newdata\r\n              });\r\n          } \r\n\r\n          if(target === \"eventtaker\"){\r\n              let newdata = selectedpersons.map(eachperson => {\r\n                  if(eachperson.roletype === \"user\"){\r\n                     return eachperson.data;\r\n                  }\r\n                  let newobj = eachperson.data;\r\n                  newobj.roletype = eachperson.roletype;\r\n                  return newobj;\r\n              });\r\n              dispatch({\r\n                type : \"LOAD_SELECTED_EVENTTAKERS\",\r\n                data : newdata\r\n              });\r\n          }\r\n      }catch(err){\r\n        console.log(\"Got error in Adding selected person => \" , err.message);\r\n      }\r\n }\r\n\r\n export const handleAddPerson = (data , userid , eventid) => async (dispatch) => {\r\n    try{\r\n        let { target , addedpersons } = await apiCall(\"post\" , `/api/user/${userid}/addevent/${eventid}/addperson/guestoreventakerorsponsor` , data);\r\n       \r\n        if(target === \"guest\"){\r\n            let newdata = addedpersons.map(eachperson => {\r\n                let newobj = eachperson.data;\r\n                newobj.roletype = eachperson.roletype;\r\n                return newobj;\r\n            });\r\n            dispatch({\r\n              type : \"LOAD_ADDED_GUESTS\",\r\n              data : newdata\r\n            });\r\n        } \r\n\r\n        if(target === \"eventtaker\"){\r\n            let newdata = addedpersons.map(eachperson => {\r\n                let newobj = eachperson.data;\r\n                newobj.roletype = eachperson.roletype;\r\n                return newobj;\r\n            });\r\n            dispatch({\r\n              type : \"LOAD_ADDED_EVENTTAKERS\",\r\n              data : newdata\r\n            });\r\n        }\r\n      \r\n    }catch(err){\r\n      console.log(\"Got error in Adding selected person => \" , err.message);\r\n    }\r\n}\r\n\r\nexport const handleRemovePerson = (data , userid , eventid) => async (dispatch) => {\r\n  try{\r\n\r\n    let { target , removedpersons } = await apiCall(\"delete\" , `/api/user/${userid}/addevent/${eventid}/remove/added/${data.target}/${data.roletype}/${data.role}/${data.key}` , data);\r\n    \r\n    let newdata = removedpersons.map(person => {\r\n        let newobj = person; \r\n        newobj.roletype = target;\r\n        return newobj;\r\n    });\r\n    \r\n    if(target === \"guest\"){\r\n        dispatch({\r\n          type : \"LOAD_ADDED_GUESTS\" ,\r\n          data : newdata\r\n        });\r\n    }\r\n    if(target === \"eventtaker\"){\r\n        dispatch({\r\n            type : \"LOAD_ADDED_EVENTTAKERS\",\r\n            data : newdata\r\n        });\r\n    }\r\n  }catch(err){\r\n    console.log(\"Got error in Adding selected person => \" , err.message);\r\n  }\r\n}\r\n\r\n\r\nexport const handleAddSponsor = (data , userid , eventid) => async (dispatch) => {\r\n    try{\r\n       let { target , sponsors } = await apiUploadCall(\"post\" , `/api/user/${userid}/addevent/${eventid}/addsponsor/sponsor` , data);\r\n       let newdata = sponsors.map(sponsor => {\r\n            let newobj = sponsor;\r\n            newobj.roletype = target;\r\n            newobj.role = target; \r\n            return newobj;\r\n       });\r\n\r\n       dispatch({\r\n         type : \"LOAD_ADDED_SPONSORS\",\r\n         data : newdata\r\n       });\r\n       \r\n    }catch(err){\r\n      console.log(\"Got error while adding sponsor ==> \" , err.message)\r\n    }\r\n}\r\n\r\nexport const handleRemoveSponsor = (data , userid , eventid) => async (dispatch) => {\r\n    try{\r\n      let { target , sponsors } = await apiCall(\"delete\" , `/api/user/${userid}/addevent/${eventid}/remove/sponsor/${data.target}/${data.key}`)\r\n      let newdata = sponsors.map(sponsor => {\r\n          let newobj = sponsor;\r\n          newobj.roletype = target;\r\n          newobj.role = target; \r\n          return newobj;\r\n      });\r\n\r\n      dispatch({\r\n          type : \"LOAD_ADDED_SPONSORS\",\r\n          data : newdata\r\n      });\r\n      }catch(err){\r\n       console.log(err.message);\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const addFormLink = (data , userid , eventid) => async (dispatch) => {\r\n    try{\r\n        let { eventdetails }  = await apiCall(\"post\" , `/api/user/${userid}/addevent/${eventid}/add/registrationlink` , data);\r\n        console.log(\"Got Form data from server =>>> \" , eventdetails);        \r\n        dispatch({\r\n            type : \"LOAD_CREATED_EVENT\",\r\n            event : eventdetails\r\n        });\r\n        return eventdetails;\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const showeventcreatedmodal = () =>  async (dispatch) => {\r\n    try{\r\n       dispatch({\r\n          type : \"SHOW_EVENT_CREATED_SUCCESSFUL_MODAL\"\r\n       });\r\n    }catch(err){\r\n        console.log(\"Got error while \");\r\n    }\r\n}\r\n\r\nexport const hideeventcreatedmodal = () =>  async (dispatch) => {\r\n  try{\r\n     dispatch({\r\n        type : \"HIDE_EVENT_CREATED_SUCCESSFUL_MODAL\"\r\n     });\r\n  }catch(err){\r\n      console.log(\"Got error while \");\r\n  }\r\n}\r\n\r\nexport const fetchEventDetails = (userid , eventid) => async (dispatch) => {\r\n  try{\r\n      let { eventdetails } = await apiCall(\"get\" , `/geteventdetails/user/${userid}/event/${eventid}`);\r\n      dispatch({\r\n          type : \"LOAD_EVENT_DETAILS\",\r\n          data : eventdetails\r\n      });\r\n\r\n  }catch(err){\r\n      console.log(err);\r\n  }\r\n}\r\n\r\n\r\nexport const getspecificevent = (eventid) => async (dispatch) => {\r\n     try { \r\n         let { event } = await apiCall(\"get\" , `/api/event/${eventid}/getspecificevent`);\r\n         dispatch({ type : \"LOAD_SPECIFIC_EVENT_DATA\", event });\r\n     }catch(err){\r\n         console.log(err);\r\n     }\r\n} \r\n\r\nexport const getFileData = (dataobj ) => async (dispatch) => {\r\n     try{\r\n       setAuthorizationToken(dataobj.token);\r\n       let data = await apiCall(\"get\" , `https://www.googleapis.com/drive/v2/files/${dataobj.data.id}?alt=media`);\r\n       console.log(data);\r\n     }catch(err){\r\n       console.log(err);\r\n     }\r\n}","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\registeredEvents.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\registerEvent.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\RegisteredEvents.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\Event.js",["323","324"],"import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { unregisterEventFromProfile } from \"../../stores/actions/events\";\r\n\r\n\r\n\r\nclass Event extends Component{\r\n\r\n    handleUnregister = () => {\r\n        if(Object.keys(this.props.eventdata).length > 0){\r\n            this.props.unregisterEventFromProfile( this.props.userdata._id , this.props.eventdata._id);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        let key = \"\";\r\n        if(key.length > 0){\r\n            key = this.props.key;\r\n        }\r\n        let event = {};\r\n        let userdata = {};\r\n        if(Object.keys(this.props.eventdata).length > 0){\r\n            event = this.props.eventdata;\r\n        }\r\n        if(Object.keys(this.props.userdata).length > 0){\r\n            userdata = this.props.userdata;\r\n        }\r\n\r\n        return(\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                    <div className=\"each-event-container\">\r\n                        <div className=\"img-session\">\r\n                            <img src={ event.imgurl.dataurl } alt=\"event-image\" />\r\n                        </div>\r\n                        <div className=\"content-session\">\r\n                            <div className=\"upper-content d-flex flex-column\">\r\n                                <p className=\"main-title\">{ event.name }</p>\r\n                                <p className=\"short-desc\">{ event.shortdesc }</p>\r\n                                <p className=\"guest-text\"><span>Guest: </span> Ajay, Neel </p>\r\n                                <div className=\"date-time-div d-flex justify-content-start align-items-center\">\r\n                                    <p className=\"date-session\"><span><i className=\"far fa-calendar-alt\"></i></span>{ event.date }</p>\r\n                                    <p><span><i className=\"far fa-clock\"></i></span> { event.time } </p>\r\n                                </div>\r\n                                <div className=\"register-button-div\">\r\n                                    <button id=\"each-event-unregister-button\" className=\"btn btn-md btn-success\" onClick={this.handleUnregister}>Un-Register</button>        \r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(null , { unregisterEventFromProfile })(Event);","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\EventPage\\Eventpage.js",["325","326","327","328","329","330","331","332","333"],"import React, { Component } from 'react';\r\nimport Navbar from \"../navbar\";\r\nimport \"../../asserts/css/EventPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getspecificevent , registerSpecificEvent , unregisterSpecificEvent  } from \"../../stores/actions/events\";\r\nimport { connect } from \"react-redux\";\r\n \r\n\r\nclass EventPage extends Component{\r\n\r\n    componentWillMount = async () => {\r\n        try {\r\n            let { eventid } = this.props.match.params;\r\n            await this.props.getspecificevent(eventid);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleRegister = () => {\r\n        if(this.props.currentUser.isAuthenticated){\r\n            this.props.registerSpecificEvent(this.props.currentUser.user._id , this.props.specificEvent.data._id);\r\n        }\r\n    }\r\n\r\n    handleUnregister = () => {\r\n        if(this.props.currentUser.isAuthenticated){\r\n            this.props.unregisterSpecificEvent( this.props.currentUser.user._id , this.props.specificEvent.data._id);\r\n        }\r\n    }\r\n\r\n    getGuestsNames = (guests) => {\r\n\r\n        let guestnames = [];\r\n        \r\n        if(guests){\r\n            let usertype = guests.registered_guests.typeuser;\r\n            let eventtakertype = guests.registered_guests.typeeventtaker;\r\n            let guesttype = guests.registered_guests.typeguest;\r\n            let unregisteredguests = guests.unregistered_guests;\r\n\r\n            usertype.forEach(eachuser => {\r\n                guestnames.push(eachuser.username);\r\n            });\r\n\r\n            eventtakertype.forEach(eacheventtaker => {\r\n                if(eacheventtaker.role === \"outsideperson\"){\r\n                    guestnames.push(eacheventtaker.details.outsideperson.name);\r\n                }\r\n                if(eacheventtaker.role === \"faculty\"){\r\n                    guestnames.push(eacheventtaker.details.faculty.name);\r\n                }\r\n                if(eacheventtaker.role === \"others\"){\r\n                    guestnames.push(eacheventtaker.details.others.name);\r\n                }\r\n            });\r\n\r\n            guesttype.forEach(eachguest => {\r\n                if(eachguest.role === \"outsideperson\"){\r\n                    guestnames.push(eachguest.details.outsideperson.name);\r\n                }\r\n                if(eachguest.role === \"faculty\"){\r\n                    guestnames.push(eachguest.details.faculty.name);\r\n                }\r\n                if(eachguest.role === \"others\"){\r\n                    guestnames.push(eachguest.details.others.name);\r\n                }\r\n            });\r\n\r\n            unregisteredguests.forEach(eachunregisteredguests => {\r\n                if(eachunregisteredguests.role === \"outsideperson\"){\r\n                    guestnames.push(eachunregisteredguests.details.outsideperson.name);\r\n                }\r\n                if(eachunregisteredguests.role === \"faculty\"){\r\n                    guestnames.push(eachunregisteredguests.details.faculty.name);\r\n                }\r\n                if(eachunregisteredguests.role === \"others\"){\r\n                    guestnames.push(eachunregisteredguests.details.others.name);\r\n                }\r\n            });\r\n        }\r\n\r\n        return guestnames;   \r\n    }\r\n\r\n    getEventtakersNames = (eventtakers) => {\r\n        let eventtakernames = [];\r\n        \r\n        if(eventtakers){\r\n            let usertype = eventtakers.registered_eventtakers.typeuser;\r\n            let eventtakertype = eventtakers.registered_eventtakers.typeeventtaker;\r\n            let guesttype = eventtakers.registered_eventtakers.typeguest;\r\n            let unregisteredeventtakers = eventtakers.unregistered_eventtakers;\r\n\r\n            usertype.forEach(eachuser => {\r\n                eventtakernames.push(eachuser.username);\r\n            });\r\n\r\n            eventtakertype.forEach(eacheventtaker => {\r\n                if(eacheventtaker.role === \"outsideperson\"){\r\n                    eventtakernames.push(eacheventtaker.details.outsideperson.name);\r\n                }\r\n                if(eacheventtaker.role === \"faculty\"){\r\n                    eventtakernames.push(eacheventtaker.details.faculty.name);\r\n                }\r\n                if(eacheventtaker.role === \"others\"){\r\n                    eventtakernames.push(eacheventtaker.details.others.name);\r\n                }\r\n            });\r\n\r\n            guesttype.forEach(eachguest => {\r\n                if(eachguest.role === \"outsideperson\"){\r\n                    eventtakernames.push(eachguest.details.outsideperson.name);\r\n                }\r\n                if(eachguest.role === \"faculty\"){\r\n                    eventtakernames.push(eachguest.details.faculty.name);\r\n                }\r\n                if(eachguest.role === \"others\"){\r\n                    eventtakernames.push(eachguest.details.others.name);\r\n                }\r\n            });\r\n\r\n            unregisteredeventtakers.forEach(eachunregisteredeventtakers => {\r\n                if(eachunregisteredeventtakers.role === \"outsideperson\"){\r\n                    eventtakernames.push(eachunregisteredeventtakers.details.outsideperson.name);\r\n                }\r\n\r\n                if(eachunregisteredeventtakers.role === \"faculty\"){\r\n                    eventtakernames.push(eachunregisteredeventtakers.details.faculty.name);\r\n                }\r\n\r\n                if(eachunregisteredeventtakers.role === \"others\"){\r\n                    eventtakernames.push(eachunregisteredeventtakers.details.others.name);\r\n                }\r\n            });\r\n        } \r\n\r\n        return eventtakernames;\r\n        \r\n    }\r\n\r\n    getFullDescInHTML = () => {\r\n        if(this.props.specificEvent.data){\r\n            if(this.props.specificEvent.data.fulldesc){\r\n                let data = this.props.specificEvent.data.fulldesc;\r\n                return { __html : data };\r\n            }\r\n            return null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render(){\r\n\r\n        let event = this.props.specificEvent.data;\r\n        let isRegistered = false;\r\n        let eventname = \"\";\r\n        let eventshortdesc = \"\";\r\n        let imgurl = \"\";\r\n        let guestname = \"\";\r\n        let eventtakername = \"\";\r\n        let date = \"\";\r\n        let time = \"\";\r\n        let guestnames = [];\r\n        let eventtakernames = [];\r\n\r\n        if(event){\r\n            eventname = event.name;\r\n            eventshortdesc = event.shortdesc;  \r\n            date = event.date;\r\n            time = event.time;\r\n            guestnames = this.getGuestsNames(this.props.specificEvent.data.guests);\r\n            eventtakernames = this.getEventtakersNames(this.props.specificEvent.data.eventtakers);\r\n            \r\n            for(let i = 0 ; i < guestnames.length ; i++){\r\n                if(guestnames.length -1 === i){\r\n                    guestname = guestname + guestnames[i] + \".\";\r\n                }else{\r\n                    guestname = guestname + guestnames[i] + \", \";\r\n                }\r\n            }\r\n\r\n            for(let i = 0 ; i < eventtakernames.length ; i++){\r\n                if(eventtakernames.length - 1 === i){\r\n                    eventtakername = eventtakername + eventtakernames[i] + \".\";\r\n                }else{\r\n                    eventtakername = eventtakername + eventtakernames[i] + \", \";\r\n                }\r\n            }\r\n\r\n            if(Object.keys(event).length > 0){\r\n                if(Object.keys(event.society).length > 0){\r\n                    if(event.society.name === \"ieee\"){\r\n                        imgurl = \"/images/ieee_logo.jpg\";\r\n                    }\r\n                    if(event.society.name === \"iste\"){\r\n                        imgurl = \"/images/iste_logo.jpg\";\r\n                    }\r\n                    if(event.society.name === \"isa\"){\r\n                        imgurl = \"/images/isa_logo.gif\";\r\n                    }\r\n                    if(event.society.name === \"csi\"){\r\n                        imgurl = \"/images/csi_logo.jpg\";\r\n                    }\r\n                }\r\n            }\r\n            if(event.registrations){\r\n               let matchedarr = event.registrations.filter(user => user._id === this.props.currentUser.user._id );\r\n               if(matchedarr.length === 1){\r\n                   isRegistered = true;\r\n               }\r\n            }\r\n            \r\n        }\r\n\r\n        const registedEventStyle = {\r\n            backgroundColor : \"blue !important\"\r\n        }\r\n\r\n    \r\n        return(\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"each-event-main-div\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"row each-event-main-div-session\">\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"each-event-content d-flex flex-column\">\r\n                                        <p className=\"event-name\">{ eventname }</p>\r\n                                        <p className=\"event-short-desc\">{ eventshortdesc }</p>\r\n                                        {\r\n                                            guestnames.length > 0 &&\r\n                                            <p className=\"event-guest\">\r\n                                               <span>Guests:</span>\r\n                                               { guestname }\r\n                                            </p>\r\n                                        }\r\n                                        {\r\n                                            eventtakernames.length > 0 &&\r\n                                            <p className=\"event-guest\">\r\n                                               <span>Speakers:</span>\r\n                                               { eventtakername }\r\n                                            </p>\r\n                                        }\r\n                                        <p className=\"event-date-time\"><span><i className=\"far fa-calendar-alt\"></i> { date } </span> <span><i className=\"far fa-clock\"></i>{ time }</span></p>\r\n                                        <Link className=\"profile-to-society-link\" to=\"/society/ieee\">\r\n                                            <div className=\"society-collections d-flex align-items-center\">\r\n                                                <div>\r\n                                                    <img src={ imgurl } alt=\"society-img\"/>\r\n                                                </div>\r\n                                                <p className=\"profile-incharge-name\"> { event ? ( event.society ?  event.society.name.toUpperCase() : null ) : null } VESIT </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div className=\"all-registrations-class-wise\">\r\n                                            <span>D12C-15</span>\r\n                                            <span>D12C-15</span>\r\n                                            <span>D12C-15</span>\r\n                                            <span>D12C-15</span>\r\n                                            <span>D12C-15</span>\r\n                                            <span>D12C-15</span>\r\n                                        </div>\r\n                                        {\r\n                                            event &&\r\n                                             event.registrations && \r\n                                                event.registrations.length > 0  && \r\n                                                   <p className=\"total-registrations-on-specific-event\"> <i class=\"fas fa-user-friends\"></i> <span>{ event.registrations.length } Registrations</span></p>\r\n                                        }\r\n                                        <div className=\"call-starts-in-time\">\r\n                                            <p>Event Starts in : <span>05:04:30</span></p>\r\n                                        </div>\r\n                                        <div className=\"register-button-div\">\r\n                                            {\r\n                                                isRegistered ? (\r\n                                                    <button style={registedEventStyle} id=\"each-event-unregister-button\" className=\"btn btn-md btn-success register-button-div\" onClick={this.handleUnregister}>Un-Register</button>\r\n                                                ) : (\r\n                                                    <button id=\"each-event-register-button\" className=\"btn btn-md btn-primary register-button-div\" onClick={this.handleRegister}>Register</button>\r\n                                                )\r\n                                            }\r\n                                            <button className=\"btn btn-md btn-primary register-button-div set-remainder-button\">Set Remainder</button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6 d-flex align-items-center event-page-main-image-session\">\r\n                                    <div className=\"img-div\">\r\n                                        <img style={{ width : \"90%\", height : \"60%\", objectFit: \"cover\" }} src=\"/images/download.jpg\" alt=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <center><h2 className=\"main-title-full-detail\">Full Detail of the Event</h2></center>\r\n                        <div className=\"full-detail-session\">\r\n                           <div dangerouslySetInnerHTML={this.getFullDescInHTML()}></div>\r\n                        </div>\r\n                       \r\n                        <center><h2 className=\"main-title-event-guest mb-3\">Events Speakers</h2></center>\r\n                        \r\n                        <div className=\"row\">\r\n                           {\r\n                               event &&\r\n                                event.eventtakers && \r\n                                   event.eventtakers.registered_eventtakers  &&  \r\n                                     ( event.eventtakers.registered_eventtakers.typeuser &&  event.eventtakers.registered_eventtakers.typeuser.length > 0 ) &&\r\n                                       event.eventtakers.registered_eventtakers.typeuser.map(guesttypeuser => (\r\n                                        <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                            <div className=\"card\">\r\n                                                <img id=\"card-profile-image\" className=\"card-img-top\" src=\"/images/user-img1.jpg\" alt=\"Card image cap\" />\r\n                                                <div className=\"card-body\">\r\n                                                    <h5 className=\"card-title\">{ guesttypeuser.username }</h5>\r\n                                                    {\r\n                                                        guesttypeuser.societydetails ? \r\n                                                        <p className=\"card-text\">{ guesttypeuser.societydetails.name.toUpperCase() } VESIT, { guesttypeuser.societydetails.role.toUpperCase() }</p>\r\n                                                        : null\r\n                                                    }\r\n                                                    {\r\n                                                        guesttypeuser.classdetails ?\r\n                                                        <p className=\"card-text\"> { guesttypeuser.classdetails.department.toUpperCase()  }  , { guesttypeuser.classdetails.class.toUpperCase() }-{guesttypeuser.classdetails.rollno} </p>\r\n                                                        : null\r\n                                                    }\r\n                                                    <div className=\"each-guest-profile-link-div\">\r\n                                                    <Link to={ `/user/${ guesttypeuser._id}/profile` } className=\"btn btn-sm btn-primary navigation-link-to-profile\">\r\n                                                        <span> Profile </span> </Link>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    event &&\r\n                                    event.eventtakers && \r\n                                      event.eventtakers.registered_eventtakers && \r\n                                       ( event.eventtakers.registered_eventtakers.typeguest && event.eventtakers.registered_eventtakers.typeguest.length > 0 ) &&\r\n                                          event.eventtakers.registered_eventtakers.typeguest.map(guesttypeguest => (\r\n                                            <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                                <div className=\"card\">\r\n                                                    <img id=\"card-profile-image\" className=\"card-img-top\" src=\"/images/user-img1.jpg\" alt=\"Card image cap\" />\r\n                                                    {\r\n                                                        guesttypeguest.role === \"others\" ? \r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">{ guesttypeguest.details.others.name }</h5>\r\n                                                                <p className=\"card-text\">{ guesttypeguest.details.others.branch.toUpperCase() }, { guesttypeguest.details.others.class.toUpperCase() }</p>\r\n                                                            </div>\r\n                                                        : (\r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">\r\n                                                                    { \r\n                                                                    guesttypeguest.role === \"outsideperson\" ?  guesttypeguest.details.outsideperson.name : guesttypeguest.details.faculty.name\r\n                                                                    }\r\n                                                                </h5>\r\n                                                                <p className=\"card-text\">\r\n                                                                    {\r\n                                                                        guesttypeguest.role === \"outsideperson\" ? guesttypeguest.details.outsideperson.profession :  guesttypeguest.details.faculty.profession\r\n                                                                    }\r\n                                                                </p>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                }\r\n                                {\r\n                                    event &&\r\n                                    event.eventtakers && \r\n                                       event.eventtakers.registered_eventtakers && \r\n                                        ( event.eventtakers.registered_eventtakers.typeeventtaker && event.eventtakers.registered_eventtakers.typeeventtaker.length > 0 ) &&\r\n                                           event.eventtakers.registered_eventtakers.typeeventtaker.map(guesttypeeventtaker => (\r\n                                            <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                                <div className=\"card\">\r\n                                                    <img id=\"card-profile-image\" className=\"card-img-top\" src=\"/images/user-img1.jpg\" alt=\"Card image cap\" />\r\n                                                    {\r\n                                                        guesttypeeventtaker.role === \"others\" ? \r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">{ guesttypeeventtaker.details.others.name }</h5>\r\n                                                                <p className=\"card-text\">{ guesttypeeventtaker.details.others.branch.toUpperCase() }, { guesttypeeventtaker.details.others.class.toUpperCase() }</p>\r\n                                                            </div>\r\n                                                        : (\r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">\r\n                                                                    { \r\n                                                                    guesttypeeventtaker.role === \"outsideperson\" ?  guesttypeeventtaker.details.outsideperson.name : guesttypeeventtaker.details.faculty.name\r\n                                                                    }\r\n                                                                </h5>\r\n                                                                <p className=\"card-text\">\r\n                                                                    {\r\n                                                                        guesttypeeventtaker.role === \"outsideperson\" ? guesttypeeventtaker.details.outsideperson.profession :  guesttypeeventtaker.details.faculty.profession\r\n                                                                    }\r\n                                                                </p>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                }\r\n                                {\r\n                                    event &&\r\n                                    event.eventtakers && \r\n                                      ( event.eventtakers.unregistered_eventtakers &&  event.eventtakers.unregistered_eventtakers.length > 0 ) &&\r\n                                       event.eventtakers.unregistered_eventtakers.map(guesttypeeventtaker => (\r\n                                        <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                            <div className=\"card\">\r\n                                                <img id=\"card-profile-image\" className=\"card-img-top\" src=\"/images/user-img1.jpg\" alt=\"Card image cap\" />\r\n                                                {\r\n                                                    guesttypeeventtaker.role === \"others\" ? \r\n                                                        <div className=\"card-body\">\r\n                                                            <h5 className=\"card-title\">{ guesttypeeventtaker.details.others.name }</h5>\r\n                                                            <p className=\"card-text\">{ guesttypeeventtaker.details.others.branch.toUpperCase() }, { guesttypeeventtaker.details.others.class.toUpperCase() }</p>\r\n                                                        </div>\r\n                                                    : (\r\n                                                        <div className=\"card-body\">\r\n                                                            <h5 className=\"card-title\">\r\n                                                                { \r\n                                                                guesttypeeventtaker.role === \"outsideperson\" ?  guesttypeeventtaker.details.outsideperson.name : guesttypeeventtaker.details.faculty.name\r\n                                                                }\r\n                                                            </h5>\r\n                                                            <p className=\"card-text\">\r\n                                                                {\r\n                                                                    guesttypeeventtaker.role === \"outsideperson\" ? guesttypeeventtaker.details.outsideperson.profession :  guesttypeeventtaker.details.faculty.profession\r\n                                                                }\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                        </div>\r\n                        \r\n                \r\n                        <center><h2 className=\"main-title-event-guest mb-3\">Events Guests</h2></center>\r\n                        \r\n                        <div className=\"row\">\r\n                              {\r\n                            event &&\r\n                                event.guests  &&\r\n                                   event.guests.registered_guests &&\r\n                                    (event.guests.registered_guests.typeuser && event.guests.registered_guests.typeuser.length > 0) &&\r\n                                       event.guests.registered_guests.typeuser.map(guesttypeuser => (\r\n                                        <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                            <div className=\"card\">\r\n                                                <img id=\"card-profile-image\" className=\"card-img-top\" src=\"/images/user-img1.jpg\" alt=\"Card image cap\" />\r\n                                                <div className=\"card-body\">\r\n                                                    <h5 className=\"card-title\">{ guesttypeuser.username }</h5>\r\n                                                    {\r\n                                                        guesttypeuser.societydetails ? \r\n                                                        <p className=\"card-text\">{ guesttypeuser.societydetails.name.toUpperCase() } VESIT, { guesttypeuser.societydetails.role.toUpperCase() }</p>\r\n                                                        : null\r\n                                                    }\r\n                                                    {\r\n                                                        guesttypeuser.classdetails ?\r\n                                                        <p className=\"card-text\"> { guesttypeuser.classdetails.department.toUpperCase()  }  , { guesttypeuser.classdetails.class.toUpperCase() }-{guesttypeuser.classdetails.rollno} </p>\r\n                                                        : null\r\n                                                    }\r\n                                                    <div className=\"each-guest-profile-link-div\">\r\n                                                    <Link to={ `/user/${ guesttypeuser._id}/profile` } className=\"btn btn-sm btn-primary navigation-link-to-profile\">\r\n                                                        <span> Profile </span> </Link>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    event &&\r\n                                    event.guests &&\r\n                                      event.guests.registered_guests && \r\n                                      ( event.guests.registered_guests.typeguest && event.guests.registered_guests.typeguest.length > 0 ) &&\r\n                                          event.guests.registered_guests.typeguest.map(guesttypeguest => (\r\n                                            <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                                <div className=\"card\">\r\n                                                    <img id=\"card-profile-image\" className=\"card-img-top\" src=\"/images/user-img1.jpg\" alt=\"Card image cap\" />\r\n                                                    {\r\n                                                        guesttypeguest.role === \"others\" ? \r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">{ guesttypeguest.details.others.name }</h5>\r\n                                                                <p className=\"card-text\">{ guesttypeguest.details.others.branch.toUpperCase() }, { guesttypeguest.details.others.class.toUpperCase() }</p>\r\n                                                            </div>\r\n                                                        : (\r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">\r\n                                                                    { \r\n                                                                    guesttypeguest.role === \"outsideperson\" ?  guesttypeguest.details.outsideperson.name : guesttypeguest.details.faculty.name\r\n                                                                    }\r\n                                                                </h5>\r\n                                                                <p className=\"card-text\">\r\n                                                                    {\r\n                                                                        guesttypeguest.role === \"outsideperson\" ? guesttypeguest.details.outsideperson.profession :  guesttypeguest.details.faculty.profession\r\n                                                                    }\r\n                                                                </p>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                }\r\n                                {\r\n                                    event &&\r\n                                    event.guests && \r\n                                       event.guests.registered_guests && \r\n                                        ( event.guests.registered_guests.typeeventtaker &&  event.guests.registered_guests.typeeventtaker.length > 0 ) &&\r\n                                           event.guests.registered_guests.typeeventtaker.map(guesttypeeventtaker => (\r\n                                            <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                                <div className=\"card\">\r\n                                                    <img id=\"card-profile-image\" className=\"card-img-top\" src=\"/images/user-img1.jpg\" alt=\"Card image cap\" />\r\n                                                    {\r\n                                                        guesttypeeventtaker.role === \"others\" ? \r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">{ guesttypeeventtaker.details.others.name }</h5>\r\n                                                                <p className=\"card-text\">{ guesttypeeventtaker.details.others.branch.toUpperCase() }, { guesttypeeventtaker.details.others.class.toUpperCase() }</p>\r\n                                                            </div>\r\n                                                        : (\r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">\r\n                                                                    { \r\n                                                                    guesttypeeventtaker.role === \"outsideperson\" ?  guesttypeeventtaker.details.outsideperson.name : guesttypeeventtaker.details.faculty.name\r\n                                                                    }\r\n                                                                </h5>\r\n                                                                <p className=\"card-text\">\r\n                                                                    {\r\n                                                                        guesttypeeventtaker.role === \"outsideperson\" ? guesttypeeventtaker.details.outsideperson.profession :  guesttypeeventtaker.details.faculty.profession\r\n                                                                    }\r\n                                                                </p>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                }\r\n                                {\r\n                                    event &&\r\n                                    event.guests && \r\n                                     ( event.guests.unregistered_guests && event.guests.unregistered_guests.length > 0 ) && \r\n                                        event.guests.unregistered_guests.map(guesttypeguest => (\r\n                                        <div className=\"each-member-card col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                                            <div className=\"card\">\r\n                                                <img id=\"card-profile-image\" className=\"card-img-top\" src=\"/images/user-img1.jpg\" alt=\"Card image cap\" />\r\n                                                {\r\n                                                    guesttypeguest.role === \"others\" ? \r\n                                                        <div className=\"card-body\">\r\n                                                            <h5 className=\"card-title\">{ guesttypeguest.details.others.name }</h5>\r\n                                                            <p className=\"card-text\">{ guesttypeguest.details.others.branch.toUpperCase() }, { guesttypeguest.details.others.class.toUpperCase() }</p>\r\n                                                        </div>\r\n                                                    : (\r\n                                                        <div className=\"card-body\">\r\n                                                            <h5 className=\"card-title\">\r\n                                                                { \r\n                                                                guesttypeguest.role === \"outsideperson\" ?  guesttypeguest.details.outsideperson.name : guesttypeguest.details.faculty.name\r\n                                                                }\r\n                                                            </h5>\r\n                                                            <p className=\"card-text\">\r\n                                                                {\r\n                                                                    guesttypeguest.role === \"outsideperson\" ? guesttypeguest.details.outsideperson.profession :  guesttypeguest.details.faculty.profession\r\n                                                                }\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                        </div>\r\n                    {\r\n                        event &&\r\n                        event.sponsors &&\r\n                          event.sponsors.length > 0 && \r\n                            <div>\r\n                                <center><h2 className=\"main-title-full-detail\">Sponsored by</h2></center>\r\n                                <div className=\"full-detail-session container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 col-md-8 d-flex flex-column align-items-start\">\r\n                                            <p style={{ fontWeight : \"600\" , fontSize : \"20px\" , margin : \"0px\" }}>{ event.sponsors[0].name }</p>\r\n                                            <p>{ event.sponsors[0].description }</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-md-4\">\r\n                                            <div className=\"full-detail-img-session d-flex justify-content-center\">\r\n                                                <img id=\"github-img\"  src={ event.sponsors[0].imgurl ? event.sponsors[0].imgurl.dataurl : \"/images/github.png\" } alt=\"sponsors-image\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    specificEvent : state.specificEvent,\r\n    currentUser : state.currentUser\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps , { getspecificevent , registerSpecificEvent , unregisterSpecificEvent  })(EventPage);","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\AddGuestModal.js",["334","335","336","337","338","339"],"import React, { Component } from 'react';\r\nimport Modal from \"./Modal\";\r\nimport \"../../asserts/css/SearchModal.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { hideAddGuestModal } from \"../../stores/actions/events\";\r\n\r\nclass AddGuestModal extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchtext : \"\",\r\n            filters : [],\r\n            users : [],\r\n            guests : [],\r\n            eventtakers : [],\r\n            selectedguests : []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            users : this.props.users,\r\n            guests  : this.props.guests,\r\n            eventtakers : this.props.eventtakers,\r\n            selectedguests : this.props.selectedguests\r\n        });\r\n    }\r\n\r\n    componentDidUpdate = (prevProps , prevState) => {\r\n        if(JSON.stringify(prevProps.selectedguests) !== JSON.stringify(this.props.selectedguests)){\r\n            this.setState({\r\n               ...this.state,\r\n               selectedguests : this.props.selectedguests  \r\n           });\r\n        }\r\n    }\r\n    \r\n   \r\n    handleInputClick = (e) => {\r\n        let inData = false;\r\n        for(let i = 0 ; i < this.state.filters.length ; i++){\r\n            if(e.target.value === this.state.filters[i]){\r\n                inData = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!inData){\r\n            this.setState({\r\n                ...this.state,\r\n                filters : [...this.state.filters , e.target.value]\r\n            });\r\n        }\r\n    }\r\n \r\n    handleRemoveClick = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            filters : this.state.filters.filter(filter => filter !== e.target.value)\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            searchtext : e.target.value\r\n        });\r\n    }\r\n\r\n    handleAddGuestModalClose = () => {\r\n        this.props.hideAddGuestModal();\r\n    }\r\n\r\n\r\n    handleAddGuest = (obj) => {\r\n        \r\n        let dataArr = [];\r\n        dataArr = dataArr.concat(this.state.users);\r\n        dataArr = dataArr.concat(this.state.guests);\r\n        dataArr = dataArr.concat(this.state.eventtakers);\r\n        let isGuestAlreadyAdded = false;\r\n        this.state.selectedguests.forEach(member => {\r\n            if(member._id.toString() === obj.key.toString()){\r\n                isGuestAlreadyAdded = true;\r\n            }\r\n        });\r\n        \r\n        if(!isGuestAlreadyAdded){\r\n            this.props.handleSelectedPerson(obj);\r\n        }\r\n    }\r\n\r\n    handleRemoveGuest = (obj) => {\r\n        this.props.handleRemoveSelectedPerson(obj);\r\n    }\r\n   \r\n\r\n    render(){\r\n\r\n         let rowdata = [];\r\n         rowdata = rowdata.concat(this.state.users);\r\n         rowdata = rowdata.concat(this.state.guests);\r\n         rowdata = rowdata.concat(this.state.eventtakers);\r\n         \r\n         let filtereData = [];\r\n         if(this.state.filters.length > 0){\r\n             for(let i = 0 ; i < this.state.filters.length ; i++){\r\n                 for(let j = 0 ; j < this.state.users.length ; j++){\r\n                    if(this.state.users[j].societydetails.role ===  this.state.filters[i]){\r\n                        filtereData.push(this.state.users[j]);\r\n                    }\r\n                 }\r\n\r\n                 for(let k = 0 ; k < this.state.guests.length ; k++){\r\n                    if(this.state.guests[k].roletype ===  this.state.filters[i]){\r\n                        console.log(\"Got guest\");\r\n                        filtereData.push(this.state.guests[k]);\r\n                    }\r\n                 } \r\n\r\n                 for(let p = 0 ; p < this.state.eventtakers.length ; p++){\r\n                    if(this.state.eventtakers[p].roletype ===  this.state.filters[i]){\r\n                        console.log(\"Got event\");\r\n                        filtereData.push(this.state.eventtakers[p]);\r\n                    }\r\n                 } \r\n             }\r\n         }else{\r\n             filtereData = rowdata;\r\n         }\r\n\r\n         console.log(\"filtered data => \" , filtereData);\r\n\r\n         if(this.state.searchtext !== \"\"){\r\n            let matches = filtereData.filter(state => {\r\n                const regex = new RegExp(this.state.searchtext.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"), 'gi');\r\n                console.log(regex);\r\n                if(!state.username){\r\n                    if(state.roletype === \"eventtaker\"){\r\n                        if(state.role === \"outsideperson\"){\r\n                            return state.details.outsideperson.name.match(regex);\r\n                        }\r\n\r\n                        if(state.role === \"faculty\"){\r\n                            return state.details.faculty.name.match(regex);\r\n                        }\r\n\r\n                        if(state.role === \"others\"){\r\n                            return state.details.others.name.match(regex);\r\n                        }\r\n                    }\r\n\r\n                    if(state.roletype === \"guest\"){\r\n                        if(state.role === \"outsideperson\"){\r\n                            return state.details.outsideperson.name.match(regex);\r\n                        }\r\n\r\n                        if(state.role === \"faculty\"){\r\n                            return state.details.faculty.name.match(regex);\r\n                        }\r\n\r\n                        if(state.role === \"others\"){\r\n                            return state.details.others.name.match(regex);\r\n                        }\r\n                    }\r\n                }\r\n                return state.username.match(regex);\r\n            });\r\n            filtereData = matches;\r\n         }\r\n\r\n\r\n        return(\r\n            \r\n            <Modal className=\"book-a-call-modal\" hideModal={this.handleAddGuestModalClose}>\r\n                <h5 className=\"text-center search-modal-heading\">Add Guests</h5>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <form className=\"search-members-form\">\r\n                            <div className=\"form-group\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                                <input type=\"email\" onChange={this.handleChange}  \r\n                                   className=\"form-control\" value={this.state.searchtext} id=\"exampleFormControlInput1\" placeholder=\"Search peoples by username\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-filter col-12\">\r\n                        <div className=\"filter-selector\">\r\n                            <button className=\"btn btn-md btn-primary\" value=\"normal-member\" onClick={this.handleInputClick}>\r\n                                Normal Members\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"faculty\" onClick={this.handleInputClick}>\r\n                               faculty      \r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"council-member\" onClick={this.handleInputClick}>\r\n                                Council Members\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"council-head\" onClick={this.handleInputClick}>\r\n                                Council Heads\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"guest\" onClick={this.handleInputClick}>\r\n                                previous guests\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"eventtaker\" onClick={this.handleInputClick}>\r\n                                Event-Takers\r\n                            </button>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"filter-selector\">\r\n                            {\r\n                                this.state.filters.map(filter => (\r\n                                    <button className=\"btn btn-md btn-primary selected-filter-buttons\" value={filter} onClick={this.handleRemoveClick}>\r\n                                      { filter } <i className=\"fas fa-times\"></i>\r\n                                    </button>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n                    {\r\n                        this.state.selectedguests.length > 0 && \r\n                        <div className=\"added-guest-details\"> \r\n                        {\r\n                            this.state.selectedguests.map(member => {\r\n                               if(member.email){\r\n                                   return (\r\n                                    <div className=\"each-div-of-each-guest\">\r\n                                        <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                            <div className=\"guest-img-session\">\r\n                                                <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } />\r\n                                            </div>\r\n                                            <div className=\"guest-details d-flex flex-column\">\r\n                                                <h5>{ member.username }</h5>\r\n                                                <p>{ member.email } </p>\r\n                                            </div>\r\n                                            <span onClick={() => {\r\n                                                    this.handleRemoveGuest({\r\n                                                        target : \"guest\",\r\n                                                        roletype : \"user\",\r\n                                                        role : \"user\",\r\n                                                        key : member._id\r\n                                                    })\r\n                                                }}>\r\n                                              <i class=\"far fa-times-circle\"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                   )\r\n                               }else {\r\n                                    return (\r\n                                        <div className=\"each-div-of-each-guest\">\r\n                                            <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                <div className=\"guest-img-session\">\r\n                                                    <img src=\"/images/profile_image.png\" />\r\n                                                </div>\r\n                                                <div className=\"guest-details d-flex flex-column\">\r\n                                                    <h5>\r\n                                                        {\r\n                                                           member.role === \"outsideperson\" ? member.details.outsideperson.name : \r\n                                                            (\r\n                                                                member.role === \"faculty\" ? member.details.faculty.name : member.details.others.name\r\n                                                            )\r\n                                                        }\r\n                                                        \r\n                                                    </h5>\r\n                                                </div>\r\n                                                <span onClick={() => {\r\n                                                    this.handleRemoveGuest({\r\n                                                        target : \"guest\",\r\n                                                        roletype : member.roletype,\r\n                                                        role : member.role,\r\n                                                        key : member._id\r\n                                                    })\r\n                                                }}>\r\n                                                   <i class=\"far fa-times-circle\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                               }\r\n                           })\r\n                        }   \r\n                      </div>\r\n                    }\r\n                    <div className=\"col-12\">\r\n                        <div className=\"searched-content\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    filtereData.map(member => (\r\n                                            <div className=\"col-12\">\r\n                                                {\r\n                                                    member.email  && \r\n                                                     <div className=\"each-search-content row\">\r\n                                                        <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                            <div className=\"searched-content-img-session\">\r\n                                                                <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"user-image\" />\r\n                                                            </div>\r\n                                                            <div className=\"searched-content-user-details\">\r\n                                                                 <p className=\"Searched-content-username\">{ member.username }</p>\r\n                                                                 { \r\n                                                                   member.societydetails ?  <p> { member.societydetails.name.toUpperCase() }, { member.societydetails.role.toUpperCase() } </p> : null \r\n                                                                 }\r\n                                                                 {\r\n                                                                     member.classdetails ? \r\n                                                                     <p>\r\n                                                                        <span>{ member.classdetails.department.toUpperCase()  }</span> - \r\n                                                                        <span>{ member.classdetails.class.toUpperCase() },</span>\r\n                                                                        <span>{ member.classdetails.rollno  }</span>\r\n                                                                     </p> : null\r\n                                                                 }\r\n                                                                   \r\n                                                                \r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                            <button className=\"btn btn-md btn-primary\" onClick={() => {\r\n                                                                 this.handleAddGuest({\r\n                                                                     target : \"guest\",\r\n                                                                     roletype :  \"user\",\r\n                                                                     role : \"user\",\r\n                                                                     key : member._id\r\n                                                                 })\r\n                                                                }} >    \r\n                                                               Add\r\n                                                            </button>\r\n                                                        </div>\r\n                                                     </div>\r\n                                                }\r\n                                                {\r\n                                                    ( member.roletype && member.details.others) && ( \r\n                                                        <div className=\"each-search-content row\">\r\n                                                            <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                                <div className=\"searched-content-img-session\">\r\n                                                                    <img src=\"/images/profile_image.png\" alt=\"user-image\" />\r\n                                                                </div>\r\n                                                                <div className=\"searched-content-user-details\">\r\n                                                                    <p className=\"Searched-content-username\">{ member.details.others.name }</p>\r\n                                                                        <p> { member.details.others.currentyear === 1 ? \"FE\" : (\r\n                                                                                member.details.others.currentyear === 2 ? \"SE\" : (\r\n                                                                                member.details.others.currentyear === 3 ? \"TE\" : \"BE\"\r\n                                                                                )\r\n                                                                        ) }, \r\n                                                                        { member.details.others.branch.toUpperCase() } - \r\n                                                                        { member.details.others.class.toUpperCase() }\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                                <button className=\"btn btn-md btn-primary\" onClick={() => {\r\n                                                                 this.handleAddGuest({\r\n                                                                    target : \"guest\",\r\n                                                                    roletype :  member.roletype,\r\n                                                                    role : \"others\",\r\n                                                                    key : member._id\r\n                                                                })\r\n                                                                }}>    \r\n                                                                    Add \r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                } \r\n                                                {   \r\n                                                    ( member.roletype && ( member.details.outsideperson || member.details.faculty )) &&\r\n                                                      (\r\n                                                        <div className=\"each-search-content row\">\r\n                                                            <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                                <div className=\"searched-content-img-session\">\r\n                                                                    <img src=\"/images/profile_image.png\" alt=\"user-image\" />\r\n                                                                </div>\r\n                                                                <div className=\"searched-content-user-details\"> \r\n                                                                    <p className=\"Searched-content-username\">\r\n                                                                        { \r\n                                                                            member.roletype === \"guest\" ? (\r\n                                                                                // Guest type\r\n                                                                                member.role === \"outsideperson\" ? member.details.outsideperson.name : member.details.faculty.name\r\n                                                                            ) : (\r\n                                                                                // Event taker type\r\n                                                                                member.role === \"faculty\" ? member.details.faculty.name : member.details.outsideperson.name\r\n                                                                            )\r\n                                                                        }\r\n                                                                    </p>\r\n                                                                    <p> \r\n                                                                        {\r\n                                                                            member.roletype === \"guest\" ? (\r\n                                                                                // Guest Type\r\n                                                                                member.role === \"outsideperson\" ? member.details.outsideperson.profession : member.details.faculty.profession\r\n                                                                            ) : ( \r\n                                                                                // Eventtaker Type\r\n                                                                                member.role === \"outsideperson\" ? member.details.outsideperson.profession : member.details.faculty.profession \r\n                                                                            ) \r\n                                                                        }\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                                <button className=\"btn btn-md btn-primary\" onClick={() => {\r\n                                                                   this.handleAddGuest({\r\n                                                                        target : \"guest\",\r\n                                                                        roletype :  member.roletype,\r\n                                                                        role : member.role,\r\n                                                                        key : member._id\r\n                                                                   })\r\n                                                                }}>    \r\n                                                                     Add\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                     )\r\n                                                }\r\n                                                \r\n                                            </div>\r\n                                         ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n    createdEvent : state.createdEvent\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n    hideAddGuestModal,\r\n} , dispatch)\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(AddGuestModal); ","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\AddEventTakerModal.js",["340","341","342","343","344","345"],"import React, { Component } from 'react';\r\nimport Modal from \"./Modal\";\r\nimport \"../../asserts/css/SearchModal.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { hideAddEventtakerModal } from \"../../stores/actions/events\";\r\n\r\nclass AddEventtakerModal extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchtext : \"\",\r\n            filters : [],\r\n            users : [],\r\n            guests : [],\r\n            eventtakers : [],\r\n            selectedeventtakers : []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            users : this.props.users,\r\n            guests  : this.props.guests,\r\n            eventtakers : this.props.eventtakers,\r\n            selectedeventtakers : this.props.selectedeventtakers\r\n        });\r\n    }\r\n\r\n    componentDidUpdate = (prevProps , prevState) => {\r\n        if(JSON.stringify(prevProps.selectedeventtakers) !== JSON.stringify(this.props.selectedeventtakers)){\r\n            this.setState({\r\n               ...this.state,\r\n               selectedeventtakers : this.props.selectedeventtakers\r\n               \r\n           });\r\n        }\r\n    }\r\n    \r\n   \r\n    handleInputClick = (e) => {\r\n        let inData = false;\r\n        for(let i = 0 ; i < this.state.filters.length ; i++){\r\n            if(e.target.value === this.state.filters[i]){\r\n                inData = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!inData){\r\n            this.setState({\r\n                ...this.state,\r\n                filters : [...this.state.filters , e.target.value]\r\n            });\r\n        }\r\n    }\r\n \r\n    handleRemoveClick = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            filters : this.state.filters.filter(filter => filter !== e.target.value)\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            searchtext : e.target.value\r\n        });\r\n    }\r\n\r\n    handleAddEventtakerModalClose = () => {\r\n        this.props.hideAddEventtakerModal();\r\n    }\r\n\r\n\r\n    handleAddEventtaker = (obj) => {\r\n       let dataArr = [];\r\n        dataArr = dataArr.concat(this.state.users);\r\n        dataArr = dataArr.concat(this.state.guests);\r\n        dataArr = dataArr.concat(this.state.eventtakers);\r\n        let isEventtakerAlreadyAdded = false;\r\n        this.state.selectedeventtakers.forEach(member => {\r\n            if(member._id.toString() === obj.key.toString()){\r\n                isEventtakerAlreadyAdded = true;\r\n            }\r\n        });\r\n        \r\n        if(!isEventtakerAlreadyAdded){\r\n           this.props.handleSelectedPerson(obj);\r\n        }\r\n    }\r\n\r\n    handleRemoveEventtaker = (obj) => {\r\n        this.props.handleRemoveSelectedPerson(obj);\r\n     }\r\n   \r\n\r\n    render(){\r\n\r\n         let rowdata = [];\r\n         rowdata = rowdata.concat(this.state.users);\r\n         rowdata = rowdata.concat(this.state.guests);\r\n         rowdata = rowdata.concat(this.state.eventtakers);\r\n         \r\n         let filtereData = [];\r\n         if(this.state.filters.length > 0){\r\n             for(let i = 0 ; i < this.state.filters.length ; i++){\r\n                 for(let j = 0 ; j < this.state.users.length ; j++){\r\n                    if(this.state.users[j].societydetails.role ===  this.state.filters[i]){\r\n                        filtereData.push(this.state.users[j]);\r\n                    }\r\n                 }\r\n\r\n                 for(let k = 0 ; k < this.state.guests.length ; k++){\r\n                    if(this.state.guests[k].roletype ===  this.state.filters[i]){\r\n                        filtereData.push(this.state.guests[k]);\r\n                    }\r\n                 } \r\n\r\n                 for(let p = 0 ; p < this.state.eventtakers.length ; p++){\r\n                    if(this.state.eventtakers[p].roletype ===  this.state.filters[i]){\r\n                        filtereData.push(this.state.eventtakers[p]);\r\n                    }\r\n                 } \r\n             }\r\n         }else{\r\n             filtereData = rowdata;\r\n         }\r\n\r\n         if(this.state.searchtext !== \"\"){\r\n            let matches = filtereData.filter(state => {\r\n                const regex = new RegExp(this.state.searchtext.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"), 'gi');\r\n                console.log(regex);\r\n                if(!state.username){\r\n                    if(state.roletype === \"eventtaker\"){\r\n                        if(state.role === \"outsideperson\"){\r\n                            return state.details.outsideperson.name.match(regex);\r\n                        }\r\n\r\n                        if(state.role === \"faculty\"){\r\n                            return state.details.faculty.name.match(regex);\r\n                        }\r\n\r\n                        if(state.role === \"others\"){\r\n                            return state.details.others.name.match(regex);\r\n                        }\r\n                    }\r\n\r\n                    if(state.roletype === \"guest\"){\r\n                        if(state.role === \"outsideperson\"){\r\n                            return state.details.outsideperson.name.match(regex);\r\n                        }\r\n\r\n                        if(state.role === \"faculty\"){\r\n                            return state.details.faculty.name.match(regex);\r\n                        }\r\n\r\n                        if(state.role === \"others\"){\r\n                            return state.details.others.name.match(regex);\r\n                        }\r\n                    }\r\n                }\r\n                return state.username.match(regex);\r\n            });\r\n            filtereData = matches;\r\n         }\r\n\r\n\r\n        return(\r\n            \r\n            <Modal className=\"book-a-call-modal\" hideModal={this.handleAddEventtakerModalClose}>\r\n                <h5 className=\"text-center search-modal-heading\">Add Eventtaker</h5>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <form className=\"search-members-form\">\r\n                            <div className=\"form-group\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                                <input type=\"text\" onChange={this.handleChange}  \r\n                                   className=\"form-control\" value={this.state.searchtext} id=\"exampleFormControlInput1\" placeholder=\"Search peoples by username\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-filter col-12\">\r\n                        <div className=\"filter-selector\">\r\n                            <button className=\"btn btn-md btn-primary\" value=\"normal-member\" onClick={this.handleInputClick}>\r\n                                Normal Members\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"faculty\" onClick={this.handleInputClick}>\r\n                               faculty      \r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"council-member\" onClick={this.handleInputClick}>\r\n                                Council Members\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"council-head\" onClick={this.handleInputClick}>\r\n                                Council Heads\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"guest\" onClick={this.handleInputClick}>\r\n                                previous guests\r\n                            </button>\r\n                            <button className=\"btn btn-md btn-primary\" value=\"eventtaker\" onClick={this.handleInputClick}>\r\n                                Event-Takers\r\n                            </button>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"filter-selector\">\r\n                            {\r\n                                this.state.filters.map(filter => (\r\n                                    <button className=\"btn btn-md btn-primary selected-filter-buttons\" value={filter} onClick={this.handleRemoveClick}>\r\n                                      { filter } <i className=\"fas fa-times\"></i>\r\n                                    </button>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n                    {\r\n                        this.state.selectedeventtakers.length > 0 && \r\n                        <div className=\"added-guest-details\">  \r\n                        {\r\n                            this.state.selectedeventtakers.map(member => {\r\n                               if(member.email){\r\n                                   return (\r\n                                      <div className=\"each-div-of-each-guest\">\r\n                                        <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                            <div className=\"guest-img-session\">\r\n                                                <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } />\r\n                                            </div>\r\n                                            <div className=\"guest-details d-flex flex-column\">\r\n                                                <h5>{ member.username }</h5>\r\n                                                <p>{ member.email } </p>\r\n                                            </div>\r\n                                            <span onClick={() => {\r\n                                                    this.handleRemoveEventtaker({\r\n                                                        target :  \"eventtaker\",\r\n                                                        roletype : \"user\",\r\n                                                        role : \"user\",\r\n                                                        key : member._id\r\n                                                    })\r\n                                                }}>\r\n                                              <i class=\"far fa-times-circle\"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                        </div>\r\n                                   )\r\n                               }else {\r\n                                    return (\r\n                                      <div className=\"each-div-of-each-guest\">\r\n                                            <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                <div className=\"guest-img-session\">\r\n                                                    <img src=\"/images/profile_image.png\" />\r\n                                                </div>\r\n                                                <div className=\"guest-details d-flex flex-column\">\r\n                                                    <h5>\r\n                                                        {\r\n                                                           member.role === \"outsideperson\" ? member.details.outsideperson.name : \r\n                                                            (\r\n                                                                member.role === \"faculty\" ? member.details.faculty.name : member.details.others.name\r\n                                                            )\r\n                                                        }\r\n                                                    </h5>\r\n                                                </div>\r\n                                                <span onClick={() => {\r\n                                                    this.handleRemoveEventtaker({\r\n                                                        target :  \"eventtaker\",\r\n                                                        roletype : member.roletype,\r\n                                                        role : member.role,\r\n                                                        key : member._id\r\n                                                    })\r\n                                                }}>\r\n                                                   <i class=\"far fa-times-circle\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                               }\r\n                           })\r\n                        }   \r\n                      </div>\r\n                    }\r\n                    <div className=\"col-12\">\r\n                        <div className=\"searched-content\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    filtereData.map(member => (\r\n                                            <div className=\"col-12\">\r\n                                                {\r\n                                                     member.email && \r\n                                                     <div className=\"each-search-content row\">\r\n                                                        <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                            <div className=\"searched-content-img-session\">\r\n                                                                <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"user-image\" />\r\n                                                            </div>\r\n                                                            <div className=\"searched-content-user-details\">\r\n                                                                <p className=\"Searched-content-username\">{ member.username }</p>\r\n                                                                {\r\n                                                                   member.societydetails ? \r\n                                                                   <p> { member.societydetails.name.toUpperCase() }, { member.societydetails.role.toUpperCase() }</p> : null\r\n                                                                }\r\n                                                                {\r\n                                                                    member.classdetails ? \r\n                                                                    <p><span>{ member.classdetails.department.toUpperCase() }</span> - <span>{member.classdetails.class.toUpperCase()},</span> { member.classdetails.rollno }</p> : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                            <button className=\"btn btn-md btn-primary\" onClick={() => {\r\n                                                                 this.handleAddEventtaker({\r\n                                                                    target :  \"eventtaker\",\r\n                                                                    roletype : \"user\",\r\n                                                                    role : \"user\",\r\n                                                                    key : member._id\r\n                                                                 })\r\n                                                                }} >    \r\n                                                               Add\r\n                                                            </button>\r\n                                                        </div>\r\n                                                     </div>\r\n                                                }\r\n                                                {\r\n                                                    ( member.roletype && member.details.others) && ( \r\n                                                        <div className=\"each-search-content row\">\r\n                                                            <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                                <div className=\"searched-content-img-session\">\r\n                                                                    <img src=\"/images/profile_image.png\" alt=\"user-image\" />\r\n                                                                </div>\r\n                                                                <div className=\"searched-content-user-details\">\r\n                                                                <p className=\"Searched-content-username\">{ member.details.others.name }</p>\r\n                                                                        <p> { member.details.others.currentyear === 1 ? \"FE\" : (\r\n                                                                                member.details.others.currentyear === 2 ? \"SE\" : (\r\n                                                                                member.details.others.currentyear === 3 ? \"TE\" : \"BE\"\r\n                                                                                )\r\n                                                                        ) }, \r\n                                                                        { member.details.others.branch.toUpperCase() } - \r\n                                                                        { member.details.others.class.toUpperCase() }\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                                <button className=\"btn btn-md btn-primary\" onClick={() => {\r\n                                                                 this.handleAddEventtaker({\r\n                                                                    target :  \"eventtaker\",\r\n                                                                    roletype : member.roletype,\r\n                                                                    role : \"others\",\r\n                                                                    key : member._id\r\n                                                                 })\r\n                                                                }}>    \r\n                                                                    Add \r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                } \r\n                                                {   \r\n                                                    ( member.roletype && ( member.details.outsideperson || member.details.faculty )) &&\r\n                                                      (\r\n                                                        <div className=\"each-search-content row\">\r\n                                                            <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                                <div className=\"searched-content-img-session\">\r\n                                                                    <img src=\"/images/profile_image.png\" alt=\"user-image\" />\r\n                                                                </div>\r\n                                                                <div className=\"searched-content-user-details\"> \r\n                                                                    <p className=\"Searched-content-username\">\r\n                                                                        { \r\n                                                                            member.roletype === \"guest\" ? (\r\n                                                                                // Guest type\r\n                                                                                member.role === \"outsideperson\" ? member.details.outsideperson.name : member.details.faculty.name\r\n                                                                            ) : (\r\n                                                                                // Event taker type\r\n                                                                                member.role === \"faculty\" ? member.details.faculty.name : member.details.outsideperson.name\r\n                                                                            )\r\n                                                                        }\r\n                                                                    </p>\r\n                                                                    <p> \r\n                                                                        {\r\n                                                                            member.roletype === \"guest\" ? (\r\n                                                                                // Guest Type\r\n                                                                                member.role === \"outsideperson\" ? member.details.outsideperson.profession : member.details.faculty.profession\r\n                                                                            ) : ( \r\n                                                                                // Eventtaker Type\r\n                                                                                member.role === \"outsideperson\" ? member.details.outsideperson.profession : member.details.faculty.profession \r\n                                                                            ) \r\n                                                                        }\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                                <button className=\"btn btn-md btn-primary\" onClick={() => {\r\n                                                                   this.handleAddEventtaker({\r\n                                                                    target :  \"eventtaker\",\r\n                                                                    roletype : member.roletype, \r\n                                                                    role : member.role,\r\n                                                                    key : member._id\r\n                                                                   })\r\n                                                                }}>    \r\n                                                                     Add\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                     )\r\n                                                }\r\n                                                \r\n                                            </div>\r\n                                         ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n    createdEvent : state.createdEvent\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n    hideAddEventtakerModal,\r\n} , dispatch)\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(AddEventtakerModal); ","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event\\EventDetailsForm.js",["346"],"import React, { Component } from 'react';\r\nimport \"../../asserts/css/Forms.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setEventDetails } from \"../../stores/actions/userRegisterDetails\";\r\nimport { connect } from 'react-redux';\r\nimport Navbar from \"../navbar\";\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nclass EventDetailsForm extends Component {\r\n     constructor(props){\r\n         super(props);\r\n         this.state = {\r\n             eventname : \"\",\r\n             shortdesc : \"\",\r\n             fulldesc : \"\",\r\n             category : \"technical\",\r\n             image : {},\r\n             date : \"\",\r\n             time  : \"\",\r\n         }\r\n     }\r\n     \r\n     componentDidMount(){\r\n         let date = new Date();\r\n         let todaysdate =  date.getFullYear() + \"-\" + ( date.getMonth() + 1 < 10 ? (\"0\" + (date.getMonth() + 1 )): (date.getMonth() + 1) ) + \"-\" +  ( date.getDate() < 10 ? (\"0\" + date.getDate()) : date.getDate());\r\n         var time = (date.getHours() < 10 ? (\"0\" + date.getHours()) : date.getHours()) + \":\" + (date.getMinutes() < 10 ? (\"0\" + date.getMinutes()) : date.getMinutes());\r\n         this.setState({\r\n             ...this.state,\r\n             date : todaysdate,\r\n             time : time\r\n         });\r\n     }\r\n\r\n     handleChange = (e) => {\r\n         this.setState({\r\n             [e.target.name] : e.target.value\r\n         });\r\n     }\r\n\r\n     handleFileChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            image : e.target.files[0]\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let { userid } = this.props.match.params;\r\n        if(this.props.currentUser.isAuthenticated){\r\n            this.props.setEventDetails(this.state , userid)\r\n            .then(() => {\r\n                this.props.history.push(`/user/${this.props.currentUser.user._id}/add/${this.props.createdEvent.data._id}/guestandsponsor`);    \r\n            }).catch(() => {\r\n                return;\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEditorChange = (content, editor) => {\r\n        \r\n        this.setState({\r\n            ...this.state,\r\n            fulldesc : content\r\n        });\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"our-login-page-content\">\r\n                 <div className=\"event-page-navigation\">\r\n                    <div className=\"society-page-navigation-session d-flex flex-row justify-content-center\"> \r\n                        <div class=\"event-details-session current-event-details-filling\">\r\n                            <span>Event Details</span>\r\n                        </div>\r\n                        <div class=\"event-details-session\">\r\n                            <span>Guest and Sponsors</span>\r\n                        </div>\r\n                        <div class=\"event-details-session\">\r\n                            <span>Registration form</span>\r\n                        </div>                        \r\n                    </div>\r\n                </div>\r\n                 </div>\r\n\t\t\t     <div id=\"login-container\">\r\n                    <div className=\"login-page-contant\">\r\n                        <center><h1 className=\"new-h1\">Add New Event</h1></center>\r\n                        <form className=\"submit-forms\" encType=\"multipart/form-data\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"guest-details-session row\">\r\n                                <div className=\"col-md-4 description-about-each-form\">\r\n                                    <h5>Event Details</h5>\r\n                                    <p>Here please fill the event details, like for Name of event and some more details.\r\n                                        you can create dynamic description for your event. it will be visible on the event page.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group col-12 col-md-6\">\r\n                                        <label htmlFor=\"username\" className=\"label\">Event Name</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Event Name\"\r\n                                                name=\"eventname\" value={this.state.eventname} onChange={this.handleChange} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-md-6\">\r\n                                        <label htmlFor=\"exampleFormControlSelect1\" className=\"label\">Event Category</label>\r\n                                        <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"category\" value={this.state.category} onChange={this.handleChange}>\r\n                                            <option value=\"technical\">Technical Event</option>\r\n                                            <option value=\"non-technical\">Non-technical Event</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlTextarea1\" className=\"label\">Event-Short Description</label>\r\n                                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"4\" name=\"shortdesc\" placeholder=\"Short description about Event\" value={this.state.shortdesc} onChange={this.handleChange}></textarea>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlTextarea2\" className=\"label\">Event-Full Description</label>\r\n                                    <Editor\r\n                                        apiKey={ process.env.REACT_APP_EDITOR_API_KEY }\r\n                                        initialValue=\"<p>Write Full details of the event here.</p>\"\r\n                                        init={{\r\n                                            /* replace textarea having class .tinymce with tinymce editor */\r\n                                            selector: \"textarea.tinymce\",\r\n                                            /* width and height of the editor */\r\n                                            width: \"100%\",\r\n                                            height: 600,\t\r\n                                            /* display statusbar */\r\n                                            statubar: true,\t\r\n                                            /* plugin */\r\n                                            plugins: [\r\n                                                \"advlist autolink link image lists charmap print preview hr anchor pagebreak\",\r\n                                                \"searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking\",\r\n                                                \"save table contextmenu directionality emoticons template paste textcolor\"\r\n                                            ],\r\n                                            /* toolbar */\r\n                                            toolbar: \"insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons\",\r\n                                            /* style */\r\n                                            style_formats: [\r\n                                                {title: \"Headers\", items: [\r\n                                                    {title: \"Header 1\", format: \"h1\"},\r\n                                                    {title: \"Header 2\", format: \"h2\"},\r\n                                                    {title: \"Header 3\", format: \"h3\"},\r\n                                                    {title: \"Header 4\", format: \"h4\"},\r\n                                                    {title: \"Header 5\", format: \"h5\"},\r\n                                                    {title: \"Header 6\", format: \"h6\"}\r\n                                                ]},\r\n                                                {title: \"Inline\", items: [\r\n                                                    {title: \"Bold\", icon: \"bold\", format: \"bold\"},\r\n                                                    {title: \"Italic\", icon: \"italic\", format: \"italic\"},\r\n                                                    {title: \"Underline\", icon: \"underline\", format: \"underline\"},\r\n                                                    {title: \"Strikethrough\", icon: \"strikethrough\", format: \"strikethrough\"},\r\n                                                    {title: \"Superscript\", icon: \"superscript\", format: \"superscript\"},\r\n                                                    {title: \"Subscript\", icon: \"subscript\", format: \"subscript\"},\r\n                                                    {title: \"Code\", icon: \"code\", format: \"code\"}\r\n                                                ]},\r\n                                                {title: \"Blocks\", items: [\r\n                                                    {title: \"Paragraph\", format: \"p\"},\r\n                                                    {title: \"Blockquote\", format: \"blockquote\"},\r\n                                                    {title: \"Div\", format: \"div\"},\r\n                                                    {title: \"Pre\", format: \"pre\"}\r\n                                                ]},\r\n                                                {title: \"Alignment\", items: [\r\n                                                    {title: \"Left\", icon: \"alignleft\", format: \"alignleft\"},\r\n                                                    {title: \"Center\", icon: \"aligncenter\", format: \"aligncenter\"},\r\n                                                    {title: \"Right\", icon: \"alignright\", format: \"alignright\"},\r\n                                                    {title: \"Justify\", icon: \"alignjustify\", format: \"alignjustify\"}\r\n                                                ]}\r\n                                            ]\r\n                                        }}\r\n                                        onEditorChange={this.handleEditorChange}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"eventimagefield\"  className=\"label\">Event Image</label>\r\n                                    <input type=\"file\" className=\"form-control\" id=\"eventimagefield\" aria-describedby=\"emailHelp\" accept=\"image/*\" name=\"image\" onChange={this.handleFileChange}/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group col-12 col-md-6\">\r\n                                        <label htmlFor=\"eventdate\" className=\"label\">Event Date</label>\r\n                                        <input type=\"Date\" id=\"eventdate\" className=\"form-control\" aria-describedby=\"emailHelp\" \r\n                                            name=\"date\" value={this.state.date} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-md-6\">\r\n                                        <label htmlFor=\"eventtime\" className=\"label\">Event Timining</label>\r\n                                        <input type=\"time\" className=\"form-control\" id=\"eventtime\" aria-describedby=\"emailHelp\" \r\n                                            name=\"time\" value={this.state.time} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between\" id=\"forgotpassword\">\r\n                                    <div>\r\n                                        <a id=\"our-back-button\" className=\"btn btn-md btn-light back-buttons\" href=\"/\">Back</a>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-md btn-block next-buttons\">Next</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\t\t\t\t\t        </div>\r\n                    </form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        currentUser : state.currentUser,\r\n        createdEvent : state.createdEvent\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps , {  setEventDetails })(EventDetailsForm);\r\n","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event\\RegistrationFormDetails.js",["347","348"],"import React, { Component } from 'react';\r\nimport \"../../asserts/css/Forms.scss\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport { setEventDetails } from \"../../stores/actions/userRegisterDetails\";\r\nimport { connect } from 'react-redux';\r\nimport Navbar from \"../navbar\";\r\nimport { addFormLink , showeventcreatedmodal , fetchCreatedEvent } from \"../../stores/actions/events\";\r\n\r\n\r\n\r\n\r\nclass RegistrationFormDetails extends Component {\r\n     constructor(props){\r\n         super(props);\r\n         this.state = {\r\n             haveregistrationform : \"true\",\r\n             formlink : \"\"\r\n         }\r\n     }\r\n     \r\n     componentDidMount = async () => {\r\n          let { userid , eventid } = this.props.match.params;\r\n          await this.props.fetchCreatedEvent(userid , eventid);        \r\n     }\r\n  \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] :  e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let dataobj = {};\r\n        dataobj.haveregistrationform = true;\r\n        dataobj.formlink = this.state.formlink;\r\n        console.log(\"Form is submitted =>> \" , dataobj );\r\n        let eventdetails = await this.props.addFormLink(dataobj , this.props.currentUser.user._id , this.props.createdEvent.data._id);   \r\n        if(eventdetails._id){\r\n            // Event is successfully created\r\n            this.props.showeventcreatedmodal();\r\n            this.props.history.push(`/home/createdevent/user/${this.props.currentUser.user._id}/event/${this.props.createdEvent.data._id}?showmodal=createdeventmodal`);\r\n        }\r\n        \r\n        \r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"our-login-page-content\">\r\n                 <div className=\"event-page-navigation\">\r\n                    <div className=\"society-page-navigation-session d-flex flex-row justify-content-center\"> \r\n                        <div class=\"event-details-session\">\r\n                            <span>Event Details</span>\r\n                        </div>\r\n                        <div class=\"event-details-session\">\r\n                            <span>Guest and Sponsors</span>\r\n                        </div>\r\n                        <div class=\"event-details-session current-event-details-filling\">\r\n                            <span>Registration form</span>\r\n                        </div>                        \r\n                    </div>\r\n                </div>\r\n                 </div>\r\n\t\t\t     <div id=\"login-container\">\r\n                    <div className=\"login-page-contant\">\r\n                        <center><h1 className=\"new-h1\">Registration Form</h1></center>\r\n                        <div className=\"alert-about-form-registration d-flex justify-content-start align-items-start\">\r\n                            <p className=\"alert-icon\"><i className=\"fas fa-exclamation-circle\"></i></p>\r\n                            <p className=\"alert-text\">\r\n                            Do you have Registration form for our event?. If yes then you can give the link below (google form's sharable link).\r\n                            for example you can craete form on google form and share that link below.\r\n                            Otherwise you can create your Registration from here. just click the link below to create form on our website.\r\n                            if you create forms on our website then we can give you form details, and visual analysis of that data. It is recomanded to create form on our website.\r\n                            If you don't want to create registration form then you can skip this page.\r\n                            </p>\r\n                        </div>\r\n                        <form className=\"submit-forms mx-4\" onSubmit={this.handleSubmit}>\r\n                            <p className=\"not-registered-guest-session\">Do you have Registration form ?</p>\r\n                            <div className=\"doeshavesponsor d-flex justify-content-start\">\r\n                                <div className=\"form-check\">\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"haveregistrationform\" id=\"exampleRadios1\" value=\"true\" onChange={this.handleChange}  checked={this.state.haveregistrationform === \"true\"}/>\r\n                                    <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                        Yes\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-check\">\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"haveregistrationform\" id=\"exampleRadios2\" value=\"false\" onChange={this.handleChange} checked={this.state.haveregistrationform === \"false\"}/>\r\n                                    <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                        No\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.haveregistrationform === \"true\" ?  (\r\n                                <div className=\"my-2\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"formlink\" className=\"label\">Registration Form Link</label>\r\n                                        <input type=\"url\" className=\"form-control\" id=\"formlink\" aria-describedby=\"emailHelp\" placeholder=\"Form link\"\r\n                                            name=\"formlink\" value={this.state.formlink} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between\" id=\"forgotpassword\">\r\n                                        <div>\r\n                                            <a id=\"our-back-button\" className=\"btn btn-md btn-light back-buttons\" href=\"addevent/aboutevent\">Back</a>\r\n                                        </div>\r\n                                        <div>\r\n                                           <button type=\"submit\" className=\"btn btn-primary btn-md btn-block next-buttons\">Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                                ) : (\r\n                                    <div className=\"d-flex justify-content-between\" id=\"forgotpassword\">\r\n                                        <div>\r\n                                            <a id=\"our-back-button\" className=\"btn btn-md btn-light back-buttons\" href=\"addevent/aboutevent\">Back</a>\r\n                                        </div>\r\n                                        <div>\r\n                                           <button type=\"submit\" className=\"btn btn-primary btn-md btn-block next-buttons\">Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </form>\r\n                        {/* <div className=\"new-registration-form d-flex flex-column align-items-center mt-4 mb-4\">\r\n                            <h4 className=\"create-new-form-text mb-3\">Create New Form Here.</h4>\r\n                            <Link to={ `/user/${this.props.currentUser.user._id}/add/${this.props.createdEvent.data._id}/formdetails/createnewform` } type=\"button\" className=\"btn btn-primary btn-md btn-block create-new-form-button\">Create New Form</Link>\r\n                        </div> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        currentUser : state.currentUser,\r\n        createdEvent : state.createdEvent\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps , {  setEventDetails , addFormLink , showeventcreatedmodal , fetchCreatedEvent })(RegistrationFormDetails);\r\n","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\Event\\EventForm.js",["349","350","351"],"import React, { Component } from 'react';\r\nimport \"../../asserts/css/Forms.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setEventDetails } from \"../../stores/actions/userRegisterDetails\";\r\nimport { connect } from 'react-redux';\r\nimport Navbar from \"../navbar\";\r\nimport \"../../asserts/css/EventForm.scss\";\r\n\r\n\r\n\r\nclass EventForm extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            formdata : [],\r\n           \r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        \r\n    }\r\n   \r\n\r\n    render(){\r\n    \r\n        return(\r\n            <div className=\"form-genetaor-page\">\r\n                <Navbar />\r\n                <div className=\"form-genrator-background\">\r\n                    <div className=\"form-session-of-form-generator\">\r\n                        <h1 className=\"form-generator-text\">Form Generator</h1>\r\n                        <div className=\"form-title\">\r\n                            <div className=\"edit-button-of-form-title\">\r\n                                <button type=\"button\" className=\"btn btn-sm btn-primary\">\r\n                                    <i class=\"fas fa-pen\"></i>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"input-form-title-div\">\r\n                              <input className=\"input-form-title\" type=\"text\" name=\"titlecolortoggle\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"main-form-content row\">\r\n                            <div className=\"col-md-4 form-page-svg-img-session\">\r\n                            </div>\r\n                            <div className=\"col-md-8 my-3 main-form-content-div\">\r\n                                <div class=\"alert alert-primary alert-dismissible fade show\" role=\"alert\">\r\n                                    <div className=\"description-about-form d-flex justify-content-start\">\r\n                                        <div className=\"alert-icon-div mr-3 pr-4 d-flex align-items-center alert-font-awesome-div\">\r\n                                            <i class=\"fas fa-question-circle\"></i>\r\n                                        </div>\r\n                                        <div className=\"rules-div\">\r\n                                            <p>Here you can create dynamic forms and you can customize that form. We have lot of tools to fullfil your needs.\r\n                                                to get started please click the button below.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <button type=\"button\" className=\"btn btn-md btn-primary add-feild-button\">\r\n                                    <i class=\"fas fa-plus\"></i> <span>Add Fields</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"feild-selector\">\r\n                            <div className=\"short-fields\">\r\n                                <div className=\"each-feild-icon\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div className=\"each-feild-text\">\r\n                                    Name field\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"short-fields\">\r\n                                <div className=\"each-feild-icon\">\r\n                                   <i class=\"fas fa-envelope\"></i>\r\n                                </div>\r\n                                <div className=\"each-feild-text\">\r\n                                    Email field\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"short-fields\">\r\n                                <div className=\"each-feild-icon\">\r\n                                   <i class=\"fas fa-sort-numeric-up-alt\"></i>\r\n                                </div>\r\n                                <div className=\"each-feild-text\">\r\n                                    Roll No.\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"short-fields\">\r\n                                <div className=\"each-feild-icon\">\r\n                                    <i class=\"fas fa-graduation-cap\"></i>\r\n                                </div>\r\n                                <div className=\"each-feild-text\">\r\n                                    Class\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"short-fields\">\r\n                                <div className=\"each-feild-icon\">\r\n                                <i class=\"fas fa-graduation-cap\"></i>\r\n                                </div>\r\n                                <div className=\"each-feild-text\">\r\n                                    Department\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"short-fields\">\r\n                                <div className=\"each-feild-icon\">\r\n                                   \r\n                                </div>\r\n                                <div className=\"each-feild-text\">\r\n                                   short Answer\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"short-fields\">\r\n                                <div className=\"each-feild-icon\">\r\n                                   <i class=\"fas fa-sort-numeric-up-alt\"></i>\r\n                                </div>\r\n                                <div className=\"each-feild-text\">\r\n                                    Roll No.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default EventForm;","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\model\\EventCreatedModal.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\specificevent.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\specificEvent.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\User\\EditProfile.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\stores\\reducers\\specificUser.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietySettings.js",["352","353","354","355","356","357","358"],"import React, { Component } from 'react';\r\nimport  { connect } from \"react-redux\"; \r\nimport Navbar from \"../navbar\";\r\nimport { loadSocietyData , fetchSocietyMembersFullDetails  , updateSocietyDetails , updateAboutSocietyDetails , updateSocietyAddChairpersonOrFaculty } from \"../../stores/actions/society\";\r\nimport { fetchAllUsers } from \"../../stores/actions/userRegisterDetails\";\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass SocietySettings extends Component {\r\n   \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            allUsers : [],\r\n            allFaculty : [],\r\n            chairpersonsearch : \"\",\r\n            facultysearch : \"\",\r\n            name :  \"\",\r\n            societyimage : {},\r\n            societybackground : {},\r\n            title : \"\",\r\n            chairperson : {},\r\n            faculty : {},\r\n            aboutsociety : \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        let { users } = await this.getAllUsers();\r\n        let allFaculty = users.filter(user => user.role === \"faculty\");\r\n        let { societyname , societyid } = this.props.match.params; \r\n        let { society } = await this.props.loadSocietyData(societyname);\r\n        if(society){\r\n            this.setState({\r\n                ...this.state,\r\n                allUsers : users,\r\n                allFaculty : allFaculty,\r\n                name : this.props.society.data.name,\r\n                title : this.props.society.data.title ? this.props.society.data.title : \"\",\r\n                aboutsociety : this.props.society.data.aboutsociety ? this.props.society.data.aboutsociety : \"\",\r\n            });\r\n            // await this.props.fetchSocietyMembersFullDetails(society._id);\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate = (prevProps , prevState) => {\r\n        if(JSON.stringify(prevProps.society.data) !== JSON.stringify(this.props.society.data)){\r\n            let societydata = this.props.society.data;\r\n            this.setState({\r\n                name : societydata.name,\r\n                societyimage : societydata.societyimage ? societydata.societyimage : null,\r\n                societybackground : societydata.societybackground ? societydata.societybackground : null,\r\n                title : societydata.title ? societydata.title : \"\",\r\n            });\r\n        } \r\n\r\n        if(JSON.stringify(prevProps.society.data.aboutsociety) !== JSON.stringify(this.props.society.data.aboutsociety)){\r\n              console.log(\"My contant has been updated\" , this.props.society.data.aboutsociety);\r\n              this.setState({\r\n                  aboutsociety : this.props.society.data.aboutsociety\r\n              });\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.society.chairperson) !== JSON.stringify(this.props.society.chairperson)){\r\n            this.setState({\r\n                chairperson : this.props.society.chairperson\r\n            });\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.society.faculty) !== JSON.stringify(this.props.society.faculty)){\r\n            this.setState({\r\n                faculty : this.props.society.faculty\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    getAllUsers = async () => {\r\n        let { allusers }  = await this.props.fetchAllUsers(this.props.currentUser.user._id);\r\n        return allusers;\r\n     }\r\n\r\n\r\n\r\n     handleChange = (e) => {\r\n         this.setState({\r\n             ...this.state,\r\n             [e.target.name] : e.target.value\r\n         })\r\n     }\r\n\r\n\r\n\r\n     handleEditorChange = (content, editor) => {\r\n        this.setState({\r\n            ...this.state,\r\n            aboutsociety : content\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name] : e.target.files[0]\r\n        });\r\n    }\r\n\r\n\r\n    handleSocietyDetailsUpdate = async (e) => {\r\n        e.preventDefault();\r\n        let dataobj = {\r\n            name : this.state.name,\r\n            societyimage : this.state.societyimage,\r\n            societybackground : this.state.societybackground,\r\n            title : this.state.title\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            name : \"\",\r\n            societyimage : {},\r\n            societybackground : {},\r\n            title : \"\"\r\n        });\r\n        await this.props.updateSocietyDetails(this.props.society.data.name , this.props.currentUser.user._id , dataobj );\r\n    }\r\n\r\n\r\n    handleAddChairpersonOrFaculty = async (dataobj) => {\r\n        \r\n        this.setState({\r\n            ...this.state,\r\n            roletype : dataobj.roletype,\r\n            [dataobj.roletype] : dataobj.data\r\n        });\r\n\r\n        let data = {\r\n            roletype : dataobj.roletype,\r\n            [dataobj.roletype] : dataobj.data\r\n        }\r\n    \r\n        await this.props.updateSocietyAddChairpersonOrFaculty(this.props.society.data.name , this.props.currentUser.user._id , data); \r\n    }\r\n\r\n    handleRemoveChairpersonOrFaculty = (dataobj) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [dataobj.roletype] : {}\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    handleSubmitAboutSociety = async (e) => {\r\n        e.preventDefault();\r\n        let dataobj = {\r\n            aboutsociety : this.state.aboutsociety\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            aboutsociety : \"\"\r\n        });\r\n\r\n        await this.props.updateAboutSocietyDetails(this.props.society.data.name , this.props.currentUser.user._id , dataobj );\r\n    }\r\n\r\n    render(){\r\n\r\n        let filtereData = [];\r\n        let filteredFaculty = [];\r\n        if(this.state.chairpersonsearch !== \"\"){\r\n            let matches = this.state.allUsers.filter(state => {\r\n                const regex = new RegExp(this.state.chairpersonsearch.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"), 'gi');\r\n                return state.email.match(regex) || state.username.match(regex);\r\n            });\r\n            filtereData = matches;\r\n        }\r\n\r\n        if(this.state.facultysearch !== \"\"){\r\n            let matches = this.state.allFaculty.filter(state => {\r\n                const regex = new RegExp(this.state.facultysearch.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"), 'gi');\r\n                return state.email.match(regex) || state.username.match(regex);\r\n            });\r\n            filteredFaculty = matches;\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <div>\r\n               <Navbar />\r\n               <div className=\"Society-page-settings\">\r\n               <h2 className=\"update-profile-heading\">Update Society Page</h2>\r\n               <div className=\"society-page-settings-contents row\">\r\n                   <div className=\"society-page-settings-left-session col-md-5\">\r\n                        <h3> Society Details </h3>\r\n                        <p>Here you can update society details , background image of society, Society logo.\r\n                            Society title is the main title of your society\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                        <form onSubmit={this.handleSocietyDetailsUpdate}>\r\n                            <div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"name\"  className=\"label\">Society Name</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"name\" aria-describedby=\"emailHelp\"  placeholder=\"Enter society name\"\r\n                                                name=\"name\" value={this.state.name} onChange={this.handleChange} required/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"societyimage\" className=\"label\">Society Image</label>\r\n                                        <input type=\"file\" className=\"form-control\" id=\"societyimage\" aria-describedby=\"emailHelp\"\r\n                                            name=\"societyimage\" onChange={this.handleFileChange} required/>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"societybackground\" className=\"label\">Society background image</label>\r\n                                        <input type=\"file\" className=\"form-control\" id=\"societybackground\" aria-describedby=\"emailHelp\"\r\n                                            name=\"societybackground\" onChange={this.handleFileChange}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"societytitle\" className=\"label\">Society title</label>\r\n                                    <textarea className=\"form-control\" id=\"societytitle\" rows=\"5\" name=\"title\" placeholder=\"Society title.\" \r\n                                    value={this.state.title}  onChange={this.handleChange} required></textarea>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-md btn-primary next-buttons\">Update</button> \r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                </div>\r\n               <hr className=\"line-break-line\" />\r\n               <div className=\"society-page-settings-contents row\">\r\n                   <div className=\"society-page-settings-left-session col-md-5\">\r\n                        <h3> Society chairperson and Faculty </h3>\r\n                        <p>\r\n                            Here you can change society's chairperson or faculty.<br /> You can select person that is already on our portal or you can add email of that person\r\n                            so in the future if that person is creating account then you will able to get full details of that person.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                        <form onSubmit={this.handleChairpersonAndFaculty}>\r\n                          <div className=\"added-guest-details\">\r\n                            <fieldset className=\"my-fieldset\"> \r\n                              <legend className=\"login-legend\">Society chairperson</legend>\r\n                                {\r\n                                   ( Object.keys(this.state.chairperson).length > 0 ) && (\r\n                                       this.state.chairperson.username ? (\r\n                                        <div className=\"each-div-of-each-guest\">\r\n                                            <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                <div className=\"guest-img-session\">\r\n                                                    <img src={ this.state.chairperson.imgurl ? this.state.chairperson.imgurl.dataurl : \"/images/profile_image.png\" } />\r\n                                                </div>\r\n                                                <div className=\"guest-details d-flex flex-column\">\r\n                                                    <h5>{ this.state.chairperson.username }</h5>\r\n                                                    <p>{ this.state.chairperson.email } </p>\r\n                                                </div>\r\n                                                <span onClick={() => {\r\n                                                    this.handleRemoveChairpersonOrFaculty({\r\n                                                        roletype : \"chairperson\"\r\n                                                    })\r\n                                                }}>\r\n                                                <i class=\"far fa-times-circle\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                       ) : (\r\n                                        <div className=\"each-div-of-each-guest\">\r\n                                            <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                <div className=\"guest-img-session\">\r\n                                                    <img src=\"/images/profile_image.png\" />\r\n                                                </div>\r\n                                                <div className=\"guest-details d-flex flex-column\">\r\n                                                    <p>{ this.state.chairperson.email } </p>\r\n                                                </div>\r\n                                                <span onClick={() => {\r\n                                                    this.handleRemoveChairpersonOrFaculty({\r\n                                                        roletype : \"chairperson\"\r\n                                                    })\r\n                                                }}>\r\n                                                <i class=\"far fa-times-circle\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                       )\r\n                                    )\r\n                                }\r\n                                {\r\n                                    Object.keys(this.state.chairperson).length === 0 && \r\n                                    <div style={{ position : \"relative\" }} className=\"form-group col-md-10\">\r\n                                        <input type=\"email\" className=\"form-control\" id=\"chairperson\" aria-describedby=\"emailHelp\"  placeholder=\"Enter email of society chairperson\"\r\n                                                name=\"chairpersonsearch\" value={this.state.chairpersonsearch} onChange={this.handleChange}/>\r\n                                        <div className=\"all-filterd-faculty-or-chairperson\">\r\n                                        {\r\n                                        filtereData.length > 0 &&\r\n                                            filtereData.map(member => (\r\n                                                <div className=\"each-search-content-of-society-settings row\">\r\n                                                    <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                        <div className=\"searched-content-img-session\">\r\n                                                            <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"user-image\" />\r\n                                                        </div>\r\n                                                        <div className=\"searched-content-user-details\">\r\n                                                            <p className=\"Searched-content-username\">{ member.username }</p>\r\n                                                            {\r\n                                                                member.societydetails && \r\n                                                                <p className=\"each-content-class-details\"> { member.societydetails.name.toUpperCase() }, { member.societydetails.role }</p>\r\n                                                            }\r\n                                                            {\r\n                                                                member.classdetails && \r\n                                                                <p className=\"each-content-class-details\"><span>{ member.classdetails.department.toUpperCase() }</span> - <span>{member.classdetails.class.toUpperCase()},</span> { member.classdetails.rollno }</p>\r\n                                                            }\r\n                                                            \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                        <button type=\"button\" className=\"btn btn-md btn-primary add-button-normal-chairperson-or-faculty\" onClick={ () => {\r\n                                                            this.handleAddChairpersonOrFaculty({\r\n                                                                roletype :  \"chairperson\",\r\n                                                                data : member\r\n                                                            })\r\n                                                            }\r\n                                                            }>\r\n                                                            Add\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )) \r\n                                        }\r\n                                      </div>\r\n                                      {\r\n                                          filtereData.length === 0 &&\r\n                                            <button className=\"btn btn-sm btn-primary add-buttons-for-chairperson-or-faculty\" type=\"button\"\r\n                                                onClick={() => {\r\n                                                    this.handleAddChairpersonOrFaculty({\r\n                                                        roletype : \"chairperson\",\r\n                                                        data : { email : this.state.chairpersonsearch } \r\n                                                })\r\n                                            }}\r\n                                            >Add</button>\r\n                                      }\r\n                                    </div>\r\n                                }\r\n                               </fieldset>\r\n                               <fieldset className=\"my-fieldset\"> \r\n                                 <legend className=\"login-legend faculty-fieldset\">Society Faculty</legend>\r\n                                {/* // Faculty Email */}\r\n                                {\r\n                                   ( Object.keys(this.state.faculty).length > 0 ) && (\r\n                                       this.state.faculty.username ? (\r\n                                        <div className=\"each-div-of-each-guest\">\r\n                                            <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                <div className=\"guest-img-session\">\r\n                                                    <img src={ this.state.faculty.imgurl ? this.state.faculty.imgurl.dataurl : \"/images/profile_image.png\" } />\r\n                                                </div>\r\n                                                <div className=\"guest-details d-flex flex-column\">\r\n                                                    <h5>{ this.state.faculty.username }</h5>\r\n                                                    <p>{ this.state.faculty.email } </p>\r\n                                                </div>\r\n                                                <span onClick={() => {\r\n                                                    this.handleRemoveChairpersonOrFaculty({\r\n                                                        roletype : \"faculty\"\r\n                                                    })\r\n                                                }}>\r\n                                                <i class=\"far fa-times-circle\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                       ) : (\r\n                                        <div className=\"each-div-of-each-guest\">\r\n                                            <div className=\"each-guest d-flex justify-content-start align-items-center\">\r\n                                                <div className=\"guest-img-session\">\r\n                                                    <img src=\"/images/profile_image.png\" />\r\n                                                </div>\r\n                                                <div className=\"guest-details d-flex flex-column\">\r\n                                                    <p>{ this.state.faculty.email } </p>\r\n                                                </div>\r\n                                                <span onClick={() => {\r\n                                                    this.handleRemoveChairpersonOrFaculty({\r\n                                                        roletype : \"faculty\"\r\n                                                    })\r\n                                                }}>\r\n                                                <i class=\"far fa-times-circle\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                       )\r\n                                    )\r\n                                }\r\n                                {\r\n                                    Object.keys(this.state.faculty).length === 0 && \r\n                                    <div style={{ position : \"relative\" }} className=\"form-group col-md-10\">\r\n                                        <input type=\"email\" className=\"form-control\" id=\"facultysearch\" aria-describedby=\"emailHelp\"  placeholder=\"Enter email of society chairperson\"\r\n                                                name=\"facultysearch\" value={this.state.facultysearch} onChange={this.handleChange}/>\r\n                                        <div className=\"all-filterd-faculty-or-chairperson\">       \r\n                                        {\r\n                                        filteredFaculty.length > 0 &&\r\n                                            filteredFaculty.map(member => (\r\n                                                <div className=\"each-search-content-of-society-settings row\">\r\n                                                    <div className=\"serached-profile-content col-12 col-md-8 d-flex justify-content-center justify-content-md-start  align-items-center\">\r\n                                                        <div className=\"searched-content-img-session\">\r\n                                                            <img src={ member.imgurl ? member.imgurl.dataurl : \"/images/profile_image.png\" } alt=\"user-image\" />\r\n                                                        </div>\r\n                                                        <div className=\"searched-content-user-details\">\r\n                                                            <p style={{ margin: \"0px\", fontSize : \"14px\" }} className=\"Searched-content-username\">{ member.username }</p>\r\n                                                            {\r\n                                                                member.societydetails && \r\n                                                                <p style={{ margin: \"0px\", fontSize : \"13px\" }}> { member.societydetails.name.toUpperCase() }, { member.societydetails.role }</p>\r\n                                                            }\r\n                                                            {\r\n                                                                member.classdetails && \r\n                                                                <p style={{ margin: \"0px\", fontSize : \"13px\" }}><span>{ member.classdetails.department.toUpperCase() }</span> - <span>{member.classdetails.class.toUpperCase()},</span> { member.classdetails.rollno }</p>\r\n                                                            }\r\n                                                            \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"view-profile-button col-12 col-md-4 d-flex justify-content-center align-items-center\">\r\n                                                        <button type=\"button\" className=\"btn btn-md btn-primary add-button-normal-chairperson-or-faculty\" onClick={ () => {\r\n                                                                this.handleAddChairpersonOrFaculty({\r\n                                                                    roletype : \"faculty\",\r\n                                                                    data : member\r\n                                                                })\r\n                                                            }\r\n                                                            }>\r\n                                                            Add\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )) \r\n                                        }\r\n                                        \r\n                                        </div>\r\n                                        {\r\n                                             filteredFaculty.length === 0 &&\r\n                                                <button className=\"btn btn-sm btn-primary add-buttons-for-chairperson-or-faculty\" type=\"button\"\r\n                                                    onClick={() => {\r\n                                                        this.handleAddChairpersonOrFaculty({\r\n                                                            roletype : \"faculty\",\r\n                                                            data : { email : this.state.facultysearch }\r\n                                                        })\r\n                                                        \r\n                                                    }}\r\n                                                >Add</button>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                </fieldset>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                </div>\r\n                <hr className=\"line-break-line\" />\r\n                <div className=\"society-page-settings-contents row\">\r\n                   <div className=\"society-page-settings-left-session col-md-5\">\r\n                        <h3> About Society </h3>\r\n                        <p>Here you can edit the about society content. Create dynamic contant it supports all time of facility including emojies.</p>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                        {\r\n                        ( this.state.name !== \"\" ) &&\r\n                            <form onSubmit={this.handleSubmitAboutSociety}>\r\n                            <div className=\"form-group\">\r\n                               <label htmlFor=\"exampleFormControlTextarea2\" className=\"label\">About Sociey</label>\r\n                                <Editor\r\n                                   apiKey={ process.env.REACT_APP_EDITOR_API_KEY }\r\n                                   initialValue={ this.state.aboutsociety }\r\n                                   init={{\r\n                                       /* replace textarea having class .tinymce with tinymce editor */\r\n                                       selector: \"textarea.tinymce\",\r\n                                       /* width and height of the editor */\r\n                                       width: \"100%\",\r\n                                       height: 600,\t\r\n                                       /* display statusbar */\r\n                                       statubar: true,\t\r\n                                       /* plugin */\r\n                                       plugins: [\r\n                                           \"advlist autolink link image lists charmap print preview hr anchor pagebreak\",\r\n                                           \"searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking\",\r\n                                           \"save table contextmenu directionality emoticons template paste textcolor\"\r\n                                       ],\r\n                                       /* toolbar */\r\n                                       toolbar: \"insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons\",\r\n                                       /* style */\r\n                                       style_formats: [\r\n                                           {title: \"Headers\", items: [\r\n                                               {title: \"Header 1\", format: \"h1\"},\r\n                                               {title: \"Header 2\", format: \"h2\"},\r\n                                               {title: \"Header 3\", format: \"h3\"},\r\n                                               {title: \"Header 4\", format: \"h4\"},\r\n                                               {title: \"Header 5\", format: \"h5\"},\r\n                                               {title: \"Header 6\", format: \"h6\"}\r\n                                           ]},\r\n                                           {title: \"Inline\", items: [\r\n                                               {title: \"Bold\", icon: \"bold\", format: \"bold\"},\r\n                                               {title: \"Italic\", icon: \"italic\", format: \"italic\"},\r\n                                               {title: \"Underline\", icon: \"underline\", format: \"underline\"},\r\n                                               {title: \"Strikethrough\", icon: \"strikethrough\", format: \"strikethrough\"},\r\n                                               {title: \"Superscript\", icon: \"superscript\", format: \"superscript\"},\r\n                                               {title: \"Subscript\", icon: \"subscript\", format: \"subscript\"},\r\n                                               {title: \"Code\", icon: \"code\", format: \"code\"}\r\n                                           ]},\r\n                                           {title: \"Blocks\", items: [\r\n                                               {title: \"Paragraph\", format: \"p\"},\r\n                                               {title: \"Blockquote\", format: \"blockquote\"},\r\n                                               {title: \"Div\", format: \"div\"},\r\n                                               {title: \"Pre\", format: \"pre\"}\r\n                                           ]},\r\n                                           {title: \"Alignment\", items: [\r\n                                               {title: \"Left\", icon: \"alignleft\", format: \"alignleft\"},\r\n                                               {title: \"Center\", icon: \"aligncenter\", format: \"aligncenter\"},\r\n                                               {title: \"Right\", icon: \"alignright\", format: \"alignright\"},\r\n                                               {title: \"Justify\", icon: \"alignjustify\", format: \"alignjustify\"}\r\n                                           ]}\r\n                                       ]\r\n                                   }}\r\n                                   onEditorChange={this.handleEditorChange}\r\n                               />\r\n                           </div>\r\n                       <button type=\"submit\" className=\"btn btn-md btn-primary next-buttons\">Update</button> \r\n                   </form>\r\n               \r\n                        }\r\n                     </div>   \r\n                </div>\r\n                <hr className=\"line-break-line\" />\r\n                <div className=\"society-page-settings-contents row\">\r\n                   <div className=\"society-page-settings-left-session col-md-5\">   \r\n                        <h3>Manage Members</h3>\r\n                        <p>\r\n                            Here you can manage your members and you can add members, delete existing one.<br />\r\n                            <strong>If you are your members please upload the google sheet to our website and we will automatially fetch the details of your members.</strong>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"society-seslection-session col-md-7 d-flex justify-content-center align-items-center\">\r\n                        <Link to={ `/society/${this.props.society.data.name}/edit/society/${this.props.society.data._id}/managemembers` } className=\"btn btn-sm btn-primary send-email-button\" type=\"button\" >Manage Members</Link>\r\n                    </div>\r\n                </div>\r\n                <hr className=\"line-break-line\" />\r\n                <div className=\"society-page-settings-contents row\">\r\n                   <div className=\"society-page-settings-left-session col-md-5\">   \r\n                        <h3> Manage Admin </h3>\r\n                        <p>\r\n                            Admin are those persons who can create events for your society. And they can edit society page.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"society-seslection-session col-md-7 d-flex justify-content-center align-items-center\">\r\n                        <Link to={ `/society/${this.props.society.data.name}/edit/society/${this.props.society.data._id}/manageadmins` } className=\"btn btn-sm btn-primary send-email-button\" type=\"button\" >Manage Admins</Link>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentUser : state.currentUser,\r\n    society : state.society\r\n}) \r\n\r\n\r\nexport default connect(mapStateToProps , { loadSocietyData  , fetchSocietyMembersFullDetails , fetchAllUsers , updateSocietyDetails , updateAboutSocietyDetails , updateSocietyAddChairpersonOrFaculty })(SocietySettings);","C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietySettingsManageAdmins.js",[],"C:\\Users\\Ajay\\Desktop\\Event-portal\\Event_project\\eventportal_frontend\\src\\containers\\SocietyPage\\SocietySettingsManageMembers.js",[],{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":24},{"ruleId":"363","severity":1,"message":"367","line":2,"column":26,"nodeType":"365","messageId":"366","endLine":2,"endColumn":34},{"ruleId":"368","severity":1,"message":"369","line":102,"column":37,"nodeType":"370","endLine":102,"endColumn":206},{"ruleId":"368","severity":1,"message":"369","line":126,"column":45,"nodeType":"370","endLine":126,"endColumn":284},{"ruleId":"371","severity":1,"message":"372","line":135,"column":65,"nodeType":"370","endLine":135,"endColumn":212},{"ruleId":"359","replacedBy":"373"},{"ruleId":"361","replacedBy":"374"},{"ruleId":"375","severity":1,"message":"376","line":16,"column":33,"nodeType":"370","endLine":16,"endColumn":68},{"ruleId":"375","severity":1,"message":"376","line":24,"column":33,"nodeType":"370","endLine":24,"endColumn":68},{"ruleId":"375","severity":1,"message":"376","line":32,"column":33,"nodeType":"370","endLine":32,"endColumn":67},{"ruleId":"375","severity":1,"message":"376","line":40,"column":33,"nodeType":"370","endLine":40,"endColumn":67},{"ruleId":"363","severity":1,"message":"377","line":23,"column":15,"nodeType":"365","messageId":"366","endLine":23,"endColumn":21},{"ruleId":"371","severity":1,"message":"372","line":33,"column":33,"nodeType":"370","endLine":33,"endColumn":142},{"ruleId":"359","replacedBy":"378"},{"ruleId":"361","replacedBy":"379"},{"ruleId":"380","severity":1,"message":"381","line":32,"column":27,"nodeType":"382","messageId":"383","endLine":32,"endColumn":29},{"ruleId":"384","severity":1,"message":"385","line":136,"column":175,"nodeType":"386","endLine":136,"endColumn":212},{"ruleId":"371","severity":1,"message":"372","line":566,"column":45,"nodeType":"370","endLine":566,"endColumn":96},{"ruleId":"375","severity":1,"message":"376","line":580,"column":65,"nodeType":"370","endLine":580,"endColumn":148},{"ruleId":"375","severity":1,"message":"376","line":604,"column":69,"nodeType":"370","endLine":604,"endColumn":108},{"ruleId":"375","severity":1,"message":"376","line":649,"column":61,"nodeType":"370","endLine":649,"endColumn":100},{"ruleId":"371","severity":1,"message":"372","line":798,"column":45,"nodeType":"370","endLine":798,"endColumn":96},{"ruleId":"375","severity":1,"message":"376","line":812,"column":65,"nodeType":"370","endLine":812,"endColumn":148},{"ruleId":"375","severity":1,"message":"376","line":836,"column":69,"nodeType":"370","endLine":836,"endColumn":108},{"ruleId":"375","severity":1,"message":"376","line":880,"column":61,"nodeType":"370","endLine":880,"endColumn":100},{"ruleId":"375","severity":1,"message":"376","line":1031,"column":61,"nodeType":"370","endLine":1031,"endColumn":144},{"ruleId":"363","severity":1,"message":"387","line":1,"column":35,"nodeType":"365","messageId":"366","endLine":1,"endColumn":49},{"ruleId":"363","severity":1,"message":"388","line":5,"column":5,"nodeType":"365","messageId":"366","endLine":5,"endColumn":32},{"ruleId":"363","severity":1,"message":"389","line":6,"column":5,"nodeType":"365","messageId":"366","endLine":6,"endColumn":31},{"ruleId":"363","severity":1,"message":"390","line":7,"column":5,"nodeType":"365","messageId":"366","endLine":7,"endColumn":38},{"ruleId":"363","severity":1,"message":"391","line":14,"column":5,"nodeType":"365","messageId":"366","endLine":14,"endColumn":31},{"ruleId":"363","severity":1,"message":"392","line":15,"column":5,"nodeType":"365","messageId":"366","endLine":15,"endColumn":30},{"ruleId":"363","severity":1,"message":"393","line":16,"column":5,"nodeType":"365","messageId":"366","endLine":16,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":50,"column":24,"nodeType":"370","endLine":50,"endColumn":117},{"ruleId":"368","severity":1,"message":"394","line":92,"column":33,"nodeType":"370","endLine":92,"endColumn":122},{"ruleId":"368","severity":1,"message":"394","line":99,"column":33,"nodeType":"370","endLine":99,"endColumn":95},{"ruleId":"363","severity":1,"message":"395","line":5,"column":10,"nodeType":"365","messageId":"366","endLine":5,"endColumn":21},{"ruleId":"363","severity":1,"message":"396","line":5,"column":24,"nodeType":"365","messageId":"366","endLine":5,"endColumn":41},{"ruleId":"371","severity":1,"message":"372","line":185,"column":61,"nodeType":"370","endLine":185,"endColumn":161},{"ruleId":"371","severity":1,"message":"372","line":214,"column":61,"nodeType":"370","endLine":214,"endColumn":117},{"ruleId":"363","severity":1,"message":"397","line":8,"column":13,"nodeType":"365","messageId":"366","endLine":8,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":9,"column":21,"nodeType":"370","endLine":9,"endColumn":85},{"ruleId":"371","severity":1,"message":"372","line":70,"column":49,"nodeType":"370","endLine":70,"endColumn":178},{"ruleId":"371","severity":1,"message":"372","line":89,"column":49,"nodeType":"370","endLine":89,"endColumn":178},{"ruleId":"363","severity":1,"message":"398","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":22},{"ruleId":"371","severity":1,"message":"372","line":68,"column":57,"nodeType":"370","endLine":68,"endColumn":109},{"ruleId":"371","severity":1,"message":"372","line":96,"column":57,"nodeType":"370","endLine":96,"endColumn":109},{"ruleId":"371","severity":1,"message":"372","line":123,"column":57,"nodeType":"370","endLine":123,"endColumn":109},{"ruleId":"363","severity":1,"message":"399","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":17},{"ruleId":"363","severity":1,"message":"400","line":51,"column":17,"nodeType":"365","messageId":"366","endLine":51,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":73,"column":25,"nodeType":"370","endLine":73,"endColumn":99},{"ruleId":"368","severity":1,"message":"394","line":92,"column":37,"nodeType":"370","endLine":92,"endColumn":126},{"ruleId":"368","severity":1,"message":"394","line":99,"column":37,"nodeType":"370","endLine":99,"endColumn":99},{"ruleId":"363","severity":1,"message":"401","line":78,"column":11,"nodeType":"365","messageId":"366","endLine":78,"endColumn":16},{"ruleId":"363","severity":1,"message":"401","line":93,"column":13,"nodeType":"365","messageId":"366","endLine":93,"endColumn":18},{"ruleId":"363","severity":1,"message":"402","line":27,"column":13,"nodeType":"365","messageId":"366","endLine":27,"endColumn":21},{"ruleId":"371","severity":1,"message":"372","line":34,"column":29,"nodeType":"370","endLine":34,"endColumn":83},{"ruleId":"371","severity":1,"message":"372","line":309,"column":49,"nodeType":"370","endLine":309,"endColumn":154},{"ruleId":"371","severity":1,"message":"372","line":340,"column":53,"nodeType":"370","endLine":340,"endColumn":158},{"ruleId":"371","severity":1,"message":"372","line":374,"column":53,"nodeType":"370","endLine":374,"endColumn":158},{"ruleId":"371","severity":1,"message":"372","line":407,"column":49,"nodeType":"370","endLine":407,"endColumn":154},{"ruleId":"371","severity":1,"message":"372","line":447,"column":49,"nodeType":"370","endLine":447,"endColumn":154},{"ruleId":"371","severity":1,"message":"372","line":478,"column":53,"nodeType":"370","endLine":478,"endColumn":158},{"ruleId":"371","severity":1,"message":"372","line":512,"column":53,"nodeType":"370","endLine":512,"endColumn":158},{"ruleId":"371","severity":1,"message":"372","line":545,"column":49,"nodeType":"370","endLine":545,"endColumn":154},{"ruleId":"371","severity":1,"message":"372","line":586,"column":49,"nodeType":"370","endLine":586,"endColumn":185},{"ruleId":"363","severity":1,"message":"403","line":82,"column":19,"nodeType":"365","messageId":"366","endLine":82,"endColumn":26},{"ruleId":"375","severity":1,"message":"376","line":232,"column":49,"nodeType":"370","endLine":232,"endColumn":132},{"ruleId":"375","severity":1,"message":"376","line":256,"column":53,"nodeType":"370","endLine":256,"endColumn":92},{"ruleId":"371","severity":1,"message":"372","line":298,"column":65,"nodeType":"370","endLine":298,"endColumn":165},{"ruleId":"371","severity":1,"message":"372","line":336,"column":69,"nodeType":"370","endLine":336,"endColumn":125},{"ruleId":"371","severity":1,"message":"372","line":371,"column":69,"nodeType":"370","endLine":371,"endColumn":125},{"ruleId":"363","severity":1,"message":"403","line":82,"column":19,"nodeType":"365","messageId":"366","endLine":82,"endColumn":26},{"ruleId":"375","severity":1,"message":"376","line":228,"column":49,"nodeType":"370","endLine":228,"endColumn":132},{"ruleId":"375","severity":1,"message":"376","line":252,"column":53,"nodeType":"370","endLine":252,"endColumn":92},{"ruleId":"371","severity":1,"message":"372","line":293,"column":65,"nodeType":"370","endLine":293,"endColumn":165},{"ruleId":"371","severity":1,"message":"372","line":326,"column":69,"nodeType":"370","endLine":326,"endColumn":125},{"ruleId":"371","severity":1,"message":"372","line":361,"column":69,"nodeType":"370","endLine":361,"endColumn":125},{"ruleId":"363","severity":1,"message":"404","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":14},{"ruleId":"363","severity":1,"message":"404","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":14},{"ruleId":"363","severity":1,"message":"405","line":3,"column":17,"nodeType":"365","messageId":"366","endLine":3,"endColumn":27},{"ruleId":"363","severity":1,"message":"404","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":14},{"ruleId":"363","severity":1,"message":"406","line":4,"column":10,"nodeType":"365","messageId":"366","endLine":4,"endColumn":25},{"ruleId":"363","severity":1,"message":"399","line":5,"column":10,"nodeType":"365","messageId":"366","endLine":5,"endColumn":17},{"ruleId":"363","severity":1,"message":"407","line":32,"column":29,"nodeType":"365","messageId":"366","endLine":32,"endColumn":38},{"ruleId":"375","severity":1,"message":"376","line":260,"column":53,"nodeType":"370","endLine":260,"endColumn":168},{"ruleId":"375","severity":1,"message":"376","line":279,"column":53,"nodeType":"370","endLine":279,"endColumn":92},{"ruleId":"371","severity":1,"message":"372","line":308,"column":61,"nodeType":"370","endLine":308,"endColumn":161},{"ruleId":"375","severity":1,"message":"376","line":361,"column":53,"nodeType":"370","endLine":361,"endColumn":160},{"ruleId":"375","severity":1,"message":"376","line":380,"column":53,"nodeType":"370","endLine":380,"endColumn":92},{"ruleId":"371","severity":1,"message":"372","line":409,"column":61,"nodeType":"370","endLine":409,"endColumn":161},"no-native-reassign",["408"],"no-negated-in-lhs",["409"],"no-unused-vars","'registeredEvents' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["408"],["409"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'imgurl' is assigned a value but never used.",["408"],["409"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'apiComplexCall' is defined but never used.","'FETCH_USER_PERSONAL_DETAILS' is defined but never used.","'LOAD_USER_PERSONAL_DETAILS' is defined but never used.","'FETCH_USER_PERSONAL_DETAILS_ERROR' is defined but never used.","'FETCH_GUESTANDSPONSOR_DATA' is defined but never used.","'LOAD_GUESTANDSPONSOR_DATA' is defined but never used.","'FETCH_GUESTANDSPONSOR_DATA_ERROR' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'serchedData' is defined but never used.","'getSocietyMembers' is defined but never used.","'states' is assigned a value but never used.","'getAllEvents' is defined but never used.","'connect' is defined but never used.","'specificrole' is assigned a value but never used.","'event' is assigned a value but never used.","'userdata' is assigned a value but never used.","'dataArr' is assigned a value but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'setEventDetails' is defined but never used.","'societyid' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]